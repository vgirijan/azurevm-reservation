{"version":3,"file":"dedicatedHosts.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/dedicatedHosts.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  DedicatedHost,\n  DedicatedHostsListByHostGroupOptionalParams,\n  DedicatedHostsListAvailableSizesOptionalParams,\n  DedicatedHostsGetOptionalParams,\n  DedicatedHostsGetResponse,\n  DedicatedHostsCreateOrUpdateOptionalParams,\n  DedicatedHostsCreateOrUpdateResponse,\n  DedicatedHostUpdate,\n  DedicatedHostsUpdateOptionalParams,\n  DedicatedHostsUpdateResponse,\n  DedicatedHostsDeleteOptionalParams,\n  DedicatedHostsRedeployOptionalParams,\n  DedicatedHostsRedeployResponse,\n  DedicatedHostsRestartOptionalParams,\n  DedicatedHostsRestartResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a DedicatedHosts. */\nexport interface DedicatedHosts {\n  /**\n   * Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink property in\n   * the response to get the next page of dedicated hosts.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param options The options parameters.\n   */\n  listByHostGroup(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostsListByHostGroupOptionalParams,\n  ): PagedAsyncIterableIterator<DedicatedHost>;\n  /**\n   * Lists all available dedicated host sizes to which the specified dedicated host can be resized. NOTE:\n   * The dedicated host sizes provided can be used to only scale up the existing dedicated host.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  listAvailableSizes(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsListAvailableSizesOptionalParams,\n  ): PagedAsyncIterableIterator<string>;\n  /**\n   * Retrieves information about a dedicated host.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsGetOptionalParams,\n  ): Promise<DedicatedHostsGetResponse>;\n  /**\n   * Create or update a dedicated host .\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param parameters Parameters supplied to the Create Dedicated Host.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHost,\n    options?: DedicatedHostsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DedicatedHostsCreateOrUpdateResponse>,\n      DedicatedHostsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a dedicated host .\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param parameters Parameters supplied to the Create Dedicated Host.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHost,\n    options?: DedicatedHostsCreateOrUpdateOptionalParams,\n  ): Promise<DedicatedHostsCreateOrUpdateResponse>;\n  /**\n   * Update a dedicated host .\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param parameters Parameters supplied to the Update Dedicated Host operation.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHostUpdate,\n    options?: DedicatedHostsUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DedicatedHostsUpdateResponse>,\n      DedicatedHostsUpdateResponse\n    >\n  >;\n  /**\n   * Update a dedicated host .\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param parameters Parameters supplied to the Update Dedicated Host operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHostUpdate,\n    options?: DedicatedHostsUpdateOptionalParams,\n  ): Promise<DedicatedHostsUpdateResponse>;\n  /**\n   * Delete a dedicated host.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Delete a dedicated host.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Redeploy the dedicated host. The operation will complete successfully once the dedicated host has\n   * migrated to a new node and is running. To determine the health of VMs deployed on the dedicated host\n   * after the redeploy check the Resource Health Center in the Azure Portal. Please refer to\n   * https://docs.microsoft.com/azure/service-health/resource-health-overview for more details.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  beginRedeploy(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsRedeployOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DedicatedHostsRedeployResponse>,\n      DedicatedHostsRedeployResponse\n    >\n  >;\n  /**\n   * Redeploy the dedicated host. The operation will complete successfully once the dedicated host has\n   * migrated to a new node and is running. To determine the health of VMs deployed on the dedicated host\n   * after the redeploy check the Resource Health Center in the Azure Portal. Please refer to\n   * https://docs.microsoft.com/azure/service-health/resource-health-overview for more details.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  beginRedeployAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsRedeployOptionalParams,\n  ): Promise<DedicatedHostsRedeployResponse>;\n  /**\n   * Restart the dedicated host. The operation will complete successfully once the dedicated host has\n   * restarted and is running. To determine the health of VMs deployed on the dedicated host after the\n   * restart check the Resource Health Center in the Azure Portal. Please refer to\n   * https://docs.microsoft.com/azure/service-health/resource-health-overview for more details.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsRestartOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DedicatedHostsRestartResponse>,\n      DedicatedHostsRestartResponse\n    >\n  >;\n  /**\n   * Restart the dedicated host. The operation will complete successfully once the dedicated host has\n   * restarted and is running. To determine the health of VMs deployed on the dedicated host after the\n   * restart check the Resource Health Center in the Azure Portal. Please refer to\n   * https://docs.microsoft.com/azure/service-health/resource-health-overview for more details.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsRestartOptionalParams,\n  ): Promise<DedicatedHostsRestartResponse>;\n}\n"]}