{"version":3,"file":"diskEncryptionSets.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/diskEncryptionSets.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  DiskEncryptionSet,\n  DiskEncryptionSetsListOptionalParams,\n  DiskEncryptionSetsListByResourceGroupOptionalParams,\n  DiskEncryptionSetsListAssociatedResourcesOptionalParams,\n  DiskEncryptionSetsGetOptionalParams,\n  DiskEncryptionSetsGetResponse,\n  DiskEncryptionSetsCreateOrUpdateOptionalParams,\n  DiskEncryptionSetsCreateOrUpdateResponse,\n  DiskEncryptionSetUpdate,\n  DiskEncryptionSetsUpdateOptionalParams,\n  DiskEncryptionSetsUpdateResponse,\n  DiskEncryptionSetsDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a DiskEncryptionSets. */\nexport interface DiskEncryptionSets {\n  /**\n   * Lists all the disk encryption sets under a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: DiskEncryptionSetsListOptionalParams,\n  ): PagedAsyncIterableIterator<DiskEncryptionSet>;\n  /**\n   * Lists all the disk encryption sets under a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: DiskEncryptionSetsListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<DiskEncryptionSet>;\n  /**\n   * Lists all resources that are encrypted with this disk encryption set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  listAssociatedResources(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsListAssociatedResourcesOptionalParams,\n  ): PagedAsyncIterableIterator<string>;\n  /**\n   * Gets information about a disk encryption set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsGetOptionalParams,\n  ): Promise<DiskEncryptionSetsGetResponse>;\n  /**\n   * Creates or updates a disk encryption set\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Put disk encryption\n   *                          set operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSet,\n    options?: DiskEncryptionSetsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DiskEncryptionSetsCreateOrUpdateResponse>,\n      DiskEncryptionSetsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a disk encryption set\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Put disk encryption\n   *                          set operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSet,\n    options?: DiskEncryptionSetsCreateOrUpdateOptionalParams,\n  ): Promise<DiskEncryptionSetsCreateOrUpdateResponse>;\n  /**\n   * Updates (patches) a disk encryption set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Patch disk\n   *                          encryption set operation.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSetUpdate,\n    options?: DiskEncryptionSetsUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DiskEncryptionSetsUpdateResponse>,\n      DiskEncryptionSetsUpdateResponse\n    >\n  >;\n  /**\n   * Updates (patches) a disk encryption set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Patch disk\n   *                          encryption set operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSetUpdate,\n    options?: DiskEncryptionSetsUpdateOptionalParams,\n  ): Promise<DiskEncryptionSetsUpdateResponse>;\n  /**\n   * Deletes a disk encryption set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a disk encryption set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}