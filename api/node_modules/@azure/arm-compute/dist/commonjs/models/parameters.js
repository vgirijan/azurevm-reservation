"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ifNoneMatch = exports.ifMatch = exports.parameters12 = exports.expand5 = exports.vmScaleSetName = exports.runCommand1 = exports.runCommand = exports.runCommandName = exports.vmName = exports.commandId = exports.accept1 = exports.filter = exports.typeParam = exports.parameters11 = exports.parameters10 = exports.expand4 = exports.version = exports.orderby = exports.top = exports.skus = exports.offer = exports.publisherName = exports.edgeZone = exports.location = exports.parameters9 = exports.parameters8 = exports.imageName = exports.parameters7 = exports.parameters6 = exports.expand3 = exports.hostGroupName = exports.parameters5 = exports.parameters4 = exports.expand2 = exports.capacityReservationGroupName = exports.resourceIdsOnly = exports.expand1 = exports.parameters3 = exports.parameters2 = exports.parameters1 = exports.parameters = exports.contentType = exports.availabilitySetName = exports.resourceGroupName = exports.expand = exports.subscriptionId = exports.nextLink = exports.apiVersion = exports.$host = exports.accept = void 0;
exports.virtualMachineScaleSetName = exports.extensionParameters1 = exports.extensionParameters = exports.vmssExtensionName = exports.parameters34 = exports.expand10 = exports.restorePointName = exports.parameters33 = exports.parameters32 = exports.hostName = exports.parameters31 = exports.parameters30 = exports.expand9 = exports.capacityReservationName = exports.parameters29 = exports.parameters28 = exports.parameters27 = exports.sshPublicKeyName = exports.parameters26 = exports.parameters25 = exports.expand8 = exports.restorePointCollectionName = exports.parameters24 = exports.parameters23 = exports.includeColocationStatus = exports.proximityPlacementGroupName = exports.parameters22 = exports.sasUriExpirationTimeInMinutes = exports.parameters21 = exports.parameters20 = exports.installPatchesInput = exports.parameters19 = exports.parameters18 = exports.parameters17 = exports.parameters16 = exports.expand7 = exports.expand6 = exports.statusOnly = exports.parameters15 = exports.vmScaleSetReimageInput = exports.skipShutdown = exports.placementGroupId = exports.zone = exports.platformUpdateDomain = exports.vmInstanceIDs1 = exports.hibernate = exports.parameters14 = exports.vmInstanceIDs = exports.forceDeletion = exports.parameters13 = void 0;
exports.galleryImageVersion = exports.galleryImage1 = exports.galleryImage = exports.galleryApplicationVersion1 = exports.galleryApplicationVersion = exports.expand12 = exports.galleryApplicationVersionName = exports.galleryApplication1 = exports.galleryApplication = exports.galleryApplicationName = exports.galleryUniqueName = exports.sharedTo = exports.galleryImageVersionName = exports.galleryImageName = exports.publicGalleryName = exports.gallery1 = exports.gallery = exports.expand11 = exports.select1 = exports.galleryName = exports.apiVersion3 = exports.includeExtendedLocations = exports.apiVersion2 = exports.diskRestorePointName = exports.vmRestorePointName = exports.snapshot1 = exports.snapshot = exports.snapshotName = exports.grantAccessData = exports.disk1 = exports.disk = exports.diskName = exports.diskEncryptionSet1 = exports.diskEncryptionSet = exports.diskEncryptionSetName = exports.privateEndpointConnection = exports.privateEndpointConnectionName = exports.diskAccess1 = exports.diskAccess = exports.diskAccessName = exports.apiVersion1 = exports.extensionParameters5 = exports.extensionParameters4 = exports.extensionParameters3 = exports.extensionParameters2 = exports.vmExtensionName = exports.vmScaleSetVMReimageInput = exports.parameters35 = exports.instanceId = exports.select = void 0;
exports.osFamilyName = exports.osVersionName = exports.location1 = exports.updateDomain = exports.parameters39 = exports.parameters38 = exports.parameters37 = exports.parameters36 = exports.roleName = exports.accept2 = exports.apiVersion4 = exports.cloudServiceName = exports.resourceGroupName1 = exports.roleInstanceName = exports.artifactName = exports.artifactType = exports.sharingUpdate = exports.galleryInVMAccessControlProfileVersion1 = exports.galleryInVMAccessControlProfileVersion = exports.inVMAccessControlProfileVersionName = exports.galleryInVMAccessControlProfile1 = exports.galleryInVMAccessControlProfile = exports.inVMAccessControlProfileName = exports.galleryImageVersion1 = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.$host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-11-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1,
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1,
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.availabilitySetName = {
    parameterPath: "availabilitySetName",
    mapper: {
        serializedName: "availabilitySetName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.parameters = {
    parameterPath: "parameters",
    mapper: mappers_js_1.AvailabilitySet,
};
exports.parameters1 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.AvailabilitySetUpdate,
};
exports.parameters2 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.ConvertToVirtualMachineScaleSetInput,
};
exports.parameters3 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.MigrateToVirtualMachineScaleSetInput,
};
exports.expand1 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.resourceIdsOnly = {
    parameterPath: ["options", "resourceIdsOnly"],
    mapper: {
        serializedName: "resourceIdsOnly",
        type: {
            name: "String",
        },
    },
};
exports.capacityReservationGroupName = {
    parameterPath: "capacityReservationGroupName",
    mapper: {
        serializedName: "capacityReservationGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand2 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.parameters4 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.CapacityReservationGroup,
};
exports.parameters5 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.CapacityReservationGroupUpdate,
};
exports.hostGroupName = {
    parameterPath: "hostGroupName",
    mapper: {
        serializedName: "hostGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand3 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "Enum",
            allowedValues: ["instanceView", "userData", "resiliencyView"],
        },
    },
};
exports.parameters6 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.DedicatedHostGroup,
};
exports.parameters7 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.DedicatedHostGroupUpdate,
};
exports.imageName = {
    parameterPath: "imageName",
    mapper: {
        serializedName: "imageName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.parameters8 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.Image,
};
exports.parameters9 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.ImageUpdate,
};
exports.location = {
    parameterPath: "location",
    mapper: {
        constraints: {
            MinLength: 1,
        },
        serializedName: "location",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.edgeZone = {
    parameterPath: "edgeZone",
    mapper: {
        serializedName: "edgeZone",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.publisherName = {
    parameterPath: "publisherName",
    mapper: {
        serializedName: "publisherName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.offer = {
    parameterPath: "offer",
    mapper: {
        serializedName: "offer",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.skus = {
    parameterPath: "skus",
    mapper: {
        serializedName: "skus",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.top = {
    parameterPath: ["options", "top"],
    mapper: {
        serializedName: "$top",
        type: {
            name: "Number",
        },
    },
};
exports.orderby = {
    parameterPath: ["options", "orderby"],
    mapper: {
        serializedName: "$orderby",
        type: {
            name: "String",
        },
    },
};
exports.version = {
    parameterPath: "version",
    mapper: {
        serializedName: "version",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand4 = {
    parameterPath: "expand",
    mapper: {
        serializedName: "$expand",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.parameters10 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.RequestRateByIntervalInput,
};
exports.parameters11 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.ThrottledRequestsInput,
};
exports.typeParam = {
    parameterPath: "typeParam",
    mapper: {
        serializedName: "type",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String",
        },
    },
};
exports.accept1 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json, text/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.commandId = {
    parameterPath: "commandId",
    mapper: {
        serializedName: "commandId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.vmName = {
    parameterPath: "vmName",
    mapper: {
        serializedName: "vmName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.runCommandName = {
    parameterPath: "runCommandName",
    mapper: {
        serializedName: "runCommandName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.runCommand = {
    parameterPath: "runCommand",
    mapper: mappers_js_1.VirtualMachineRunCommand,
};
exports.runCommand1 = {
    parameterPath: "runCommand",
    mapper: mappers_js_1.VirtualMachineRunCommandUpdate,
};
exports.vmScaleSetName = {
    parameterPath: "vmScaleSetName",
    mapper: {
        serializedName: "vmScaleSetName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand5 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.parameters12 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VirtualMachineScaleSet,
};
exports.ifMatch = {
    parameterPath: ["options", "ifMatch"],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String",
        },
    },
};
exports.ifNoneMatch = {
    parameterPath: ["options", "ifNoneMatch"],
    mapper: {
        serializedName: "If-None-Match",
        type: {
            name: "String",
        },
    },
};
exports.parameters13 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VirtualMachineScaleSetUpdate,
};
exports.forceDeletion = {
    parameterPath: ["options", "forceDeletion"],
    mapper: {
        serializedName: "forceDeletion",
        type: {
            name: "Boolean",
        },
    },
};
exports.vmInstanceIDs = {
    parameterPath: ["options", "vmInstanceIDs"],
    mapper: mappers_js_1.VirtualMachineScaleSetVMInstanceIDs,
};
exports.parameters14 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VMScaleSetConvertToSinglePlacementGroupInput,
};
exports.hibernate = {
    parameterPath: ["options", "hibernate"],
    mapper: {
        serializedName: "hibernate",
        type: {
            name: "Boolean",
        },
    },
};
exports.vmInstanceIDs1 = {
    parameterPath: "vmInstanceIDs",
    mapper: mappers_js_1.VirtualMachineScaleSetVMInstanceRequiredIDs,
};
exports.platformUpdateDomain = {
    parameterPath: "platformUpdateDomain",
    mapper: {
        serializedName: "platformUpdateDomain",
        required: true,
        type: {
            name: "Number",
        },
    },
};
exports.zone = {
    parameterPath: ["options", "zone"],
    mapper: {
        serializedName: "zone",
        type: {
            name: "String",
        },
    },
};
exports.placementGroupId = {
    parameterPath: ["options", "placementGroupId"],
    mapper: {
        serializedName: "placementGroupId",
        type: {
            name: "String",
        },
    },
};
exports.skipShutdown = {
    parameterPath: ["options", "skipShutdown"],
    mapper: {
        serializedName: "skipShutdown",
        type: {
            name: "Boolean",
        },
    },
};
exports.vmScaleSetReimageInput = {
    parameterPath: ["options", "vmScaleSetReimageInput"],
    mapper: mappers_js_1.VirtualMachineScaleSetReimageParameters,
};
exports.parameters15 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.OrchestrationServiceStateInput,
};
exports.statusOnly = {
    parameterPath: ["options", "statusOnly"],
    mapper: {
        serializedName: "statusOnly",
        type: {
            name: "String",
        },
    },
};
exports.expand6 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.expand7 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.parameters16 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VirtualMachine,
};
exports.parameters17 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VirtualMachineUpdate,
};
exports.parameters18 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.AttachDetachDataDisksRequest,
};
exports.parameters19 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VirtualMachineCaptureParameters,
};
exports.installPatchesInput = {
    parameterPath: "installPatchesInput",
    mapper: mappers_js_1.VirtualMachineInstallPatchesParameters,
};
exports.parameters20 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.MigrateVMToVirtualMachineScaleSetInput,
};
exports.parameters21 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.VirtualMachineReimageParameters,
};
exports.sasUriExpirationTimeInMinutes = {
    parameterPath: ["options", "sasUriExpirationTimeInMinutes"],
    mapper: {
        serializedName: "sasUriExpirationTimeInMinutes",
        type: {
            name: "Number",
        },
    },
};
exports.parameters22 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.RunCommandInput,
};
exports.proximityPlacementGroupName = {
    parameterPath: "proximityPlacementGroupName",
    mapper: {
        serializedName: "proximityPlacementGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.includeColocationStatus = {
    parameterPath: ["options", "includeColocationStatus"],
    mapper: {
        serializedName: "includeColocationStatus",
        type: {
            name: "String",
        },
    },
};
exports.parameters23 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.ProximityPlacementGroup,
};
exports.parameters24 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.ProximityPlacementGroupUpdate,
};
exports.restorePointCollectionName = {
    parameterPath: "restorePointCollectionName",
    mapper: {
        serializedName: "restorePointCollectionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand8 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.parameters25 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.RestorePointCollection,
};
exports.parameters26 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.RestorePointCollectionUpdate,
};
exports.sshPublicKeyName = {
    parameterPath: "sshPublicKeyName",
    mapper: {
        serializedName: "sshPublicKeyName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.parameters27 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.SshPublicKeyResource,
};
exports.parameters28 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.SshPublicKeyUpdateResource,
};
exports.parameters29 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.SshGenerateKeyPairInputParameters,
};
exports.capacityReservationName = {
    parameterPath: "capacityReservationName",
    mapper: {
        serializedName: "capacityReservationName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand9 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.parameters30 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.CapacityReservation,
};
exports.parameters31 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.CapacityReservationUpdate,
};
exports.hostName = {
    parameterPath: "hostName",
    mapper: {
        serializedName: "hostName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.parameters32 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.DedicatedHost,
};
exports.parameters33 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.DedicatedHostUpdate,
};
exports.restorePointName = {
    parameterPath: "restorePointName",
    mapper: {
        serializedName: "restorePointName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand10 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.parameters34 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.RestorePoint,
};
exports.vmssExtensionName = {
    parameterPath: "vmssExtensionName",
    mapper: {
        serializedName: "vmssExtensionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.extensionParameters = {
    parameterPath: "extensionParameters",
    mapper: mappers_js_1.VirtualMachineScaleSetExtension,
};
exports.extensionParameters1 = {
    parameterPath: "extensionParameters",
    mapper: mappers_js_1.VirtualMachineScaleSetExtensionUpdate,
};
exports.virtualMachineScaleSetName = {
    parameterPath: "virtualMachineScaleSetName",
    mapper: {
        serializedName: "virtualMachineScaleSetName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.select = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$select",
        type: {
            name: "String",
        },
    },
};
exports.instanceId = {
    parameterPath: "instanceId",
    mapper: {
        serializedName: "instanceId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.parameters35 = {
    parameterPath: "parameters",
    mapper: mappers_js_1.VirtualMachineScaleSetVM,
};
exports.vmScaleSetVMReimageInput = {
    parameterPath: ["options", "vmScaleSetVMReimageInput"],
    mapper: mappers_js_1.VirtualMachineScaleSetVMReimageParameters,
};
exports.vmExtensionName = {
    parameterPath: "vmExtensionName",
    mapper: {
        serializedName: "vmExtensionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.extensionParameters2 = {
    parameterPath: "extensionParameters",
    mapper: mappers_js_1.VirtualMachineScaleSetVMExtension,
};
exports.extensionParameters3 = {
    parameterPath: "extensionParameters",
    mapper: mappers_js_1.VirtualMachineScaleSetVMExtensionUpdate,
};
exports.extensionParameters4 = {
    parameterPath: "extensionParameters",
    mapper: mappers_js_1.VirtualMachineExtension,
};
exports.extensionParameters5 = {
    parameterPath: "extensionParameters",
    mapper: mappers_js_1.VirtualMachineExtensionUpdate,
};
exports.apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2025-01-02",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.diskAccessName = {
    parameterPath: "diskAccessName",
    mapper: {
        serializedName: "diskAccessName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.diskAccess = {
    parameterPath: "diskAccess",
    mapper: mappers_js_1.DiskAccess,
};
exports.diskAccess1 = {
    parameterPath: "diskAccess",
    mapper: mappers_js_1.DiskAccessUpdate,
};
exports.privateEndpointConnectionName = {
    parameterPath: "privateEndpointConnectionName",
    mapper: {
        serializedName: "privateEndpointConnectionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.privateEndpointConnection = {
    parameterPath: "privateEndpointConnection",
    mapper: mappers_js_1.PrivateEndpointConnection,
};
exports.diskEncryptionSetName = {
    parameterPath: "diskEncryptionSetName",
    mapper: {
        serializedName: "diskEncryptionSetName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.diskEncryptionSet = {
    parameterPath: "diskEncryptionSet",
    mapper: mappers_js_1.DiskEncryptionSet,
};
exports.diskEncryptionSet1 = {
    parameterPath: "diskEncryptionSet",
    mapper: mappers_js_1.DiskEncryptionSetUpdate,
};
exports.diskName = {
    parameterPath: "diskName",
    mapper: {
        serializedName: "diskName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.disk = {
    parameterPath: "disk",
    mapper: mappers_js_1.Disk,
};
exports.disk1 = {
    parameterPath: "disk",
    mapper: mappers_js_1.DiskUpdate,
};
exports.grantAccessData = {
    parameterPath: "grantAccessData",
    mapper: mappers_js_1.GrantAccessData,
};
exports.snapshotName = {
    parameterPath: "snapshotName",
    mapper: {
        serializedName: "snapshotName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.snapshot = {
    parameterPath: "snapshot",
    mapper: mappers_js_1.Snapshot,
};
exports.snapshot1 = {
    parameterPath: "snapshot",
    mapper: mappers_js_1.SnapshotUpdate,
};
exports.vmRestorePointName = {
    parameterPath: "vmRestorePointName",
    mapper: {
        serializedName: "vmRestorePointName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.diskRestorePointName = {
    parameterPath: "diskRestorePointName",
    mapper: {
        serializedName: "diskRestorePointName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2021-07-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.includeExtendedLocations = {
    parameterPath: ["options", "includeExtendedLocations"],
    mapper: {
        serializedName: "includeExtendedLocations",
        type: {
            name: "String",
        },
    },
};
exports.apiVersion3 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-03-03",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.galleryName = {
    parameterPath: "galleryName",
    mapper: {
        serializedName: "galleryName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.select1 = {
    parameterPath: ["options", "select"],
    mapper: {
        serializedName: "$select",
        type: {
            name: "String",
        },
    },
};
exports.expand11 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.gallery = {
    parameterPath: "gallery",
    mapper: mappers_js_1.Gallery,
};
exports.gallery1 = {
    parameterPath: "gallery",
    mapper: mappers_js_1.GalleryUpdate,
};
exports.publicGalleryName = {
    parameterPath: "publicGalleryName",
    mapper: {
        serializedName: "publicGalleryName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.galleryImageName = {
    parameterPath: "galleryImageName",
    mapper: {
        serializedName: "galleryImageName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.galleryImageVersionName = {
    parameterPath: "galleryImageVersionName",
    mapper: {
        serializedName: "galleryImageVersionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.sharedTo = {
    parameterPath: ["options", "sharedTo"],
    mapper: {
        serializedName: "sharedTo",
        type: {
            name: "String",
        },
    },
};
exports.galleryUniqueName = {
    parameterPath: "galleryUniqueName",
    mapper: {
        serializedName: "galleryUniqueName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.galleryApplicationName = {
    parameterPath: "galleryApplicationName",
    mapper: {
        serializedName: "galleryApplicationName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.galleryApplication = {
    parameterPath: "galleryApplication",
    mapper: mappers_js_1.GalleryApplication,
};
exports.galleryApplication1 = {
    parameterPath: "galleryApplication",
    mapper: mappers_js_1.GalleryApplicationUpdate,
};
exports.galleryApplicationVersionName = {
    parameterPath: "galleryApplicationVersionName",
    mapper: {
        serializedName: "galleryApplicationVersionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.expand12 = {
    parameterPath: ["options", "expand"],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String",
        },
    },
};
exports.galleryApplicationVersion = {
    parameterPath: "galleryApplicationVersion",
    mapper: mappers_js_1.GalleryApplicationVersion,
};
exports.galleryApplicationVersion1 = {
    parameterPath: "galleryApplicationVersion",
    mapper: mappers_js_1.GalleryApplicationVersionUpdate,
};
exports.galleryImage = {
    parameterPath: "galleryImage",
    mapper: mappers_js_1.GalleryImage,
};
exports.galleryImage1 = {
    parameterPath: "galleryImage",
    mapper: mappers_js_1.GalleryImageUpdate,
};
exports.galleryImageVersion = {
    parameterPath: "galleryImageVersion",
    mapper: mappers_js_1.GalleryImageVersion,
};
exports.galleryImageVersion1 = {
    parameterPath: "galleryImageVersion",
    mapper: mappers_js_1.GalleryImageVersionUpdate,
};
exports.inVMAccessControlProfileName = {
    parameterPath: "inVMAccessControlProfileName",
    mapper: {
        serializedName: "inVMAccessControlProfileName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.galleryInVMAccessControlProfile = {
    parameterPath: "galleryInVMAccessControlProfile",
    mapper: mappers_js_1.GalleryInVMAccessControlProfile,
};
exports.galleryInVMAccessControlProfile1 = {
    parameterPath: "galleryInVMAccessControlProfile",
    mapper: mappers_js_1.GalleryInVMAccessControlProfileUpdate,
};
exports.inVMAccessControlProfileVersionName = {
    parameterPath: "inVMAccessControlProfileVersionName",
    mapper: {
        serializedName: "inVMAccessControlProfileVersionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.galleryInVMAccessControlProfileVersion = {
    parameterPath: "galleryInVMAccessControlProfileVersion",
    mapper: mappers_js_1.GalleryInVMAccessControlProfileVersion,
};
exports.galleryInVMAccessControlProfileVersion1 = {
    parameterPath: "galleryInVMAccessControlProfileVersion",
    mapper: mappers_js_1.GalleryInVMAccessControlProfileVersionUpdate,
};
exports.sharingUpdate = {
    parameterPath: "sharingUpdate",
    mapper: mappers_js_1.SharingUpdate,
};
exports.artifactType = {
    parameterPath: "artifactType",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"),
        },
        serializedName: "artifactType",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.artifactName = {
    parameterPath: "artifactName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[a-zA-Z0-9]+([_]?[a-zA-Z0-9]+)*$"),
        },
        serializedName: "artifactName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.roleInstanceName = {
    parameterPath: "roleInstanceName",
    mapper: {
        serializedName: "roleInstanceName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.resourceGroupName1 = {
    parameterPath: "resourceGroupName",
    mapper: {
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.cloudServiceName = {
    parameterPath: "cloudServiceName",
    mapper: {
        serializedName: "cloudServiceName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.apiVersion4 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-11-04",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.accept2 = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/x-rdp",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.roleName = {
    parameterPath: "roleName",
    mapper: {
        serializedName: "roleName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.parameters36 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.CloudService,
};
exports.parameters37 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.CloudServiceUpdate,
};
exports.parameters38 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.RoleInstances,
};
exports.parameters39 = {
    parameterPath: ["options", "parameters"],
    mapper: mappers_js_1.UpdateDomain,
};
exports.updateDomain = {
    parameterPath: "updateDomain",
    mapper: {
        serializedName: "updateDomain",
        required: true,
        type: {
            name: "Number",
        },
    },
};
exports.location1 = {
    parameterPath: "location",
    mapper: {
        serializedName: "location",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.osVersionName = {
    parameterPath: "osVersionName",
    mapper: {
        serializedName: "osVersionName",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.osFamilyName = {
    parameterPath: "osFamilyName",
    mapper: {
        serializedName: "osFamilyName",
        required: true,
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map