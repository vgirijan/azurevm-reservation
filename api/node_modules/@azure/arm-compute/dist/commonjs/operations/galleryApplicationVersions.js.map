{"version":3,"file":"galleryApplicationVersions.js","sourceRoot":"","sources":["../../../src/operations/galleryApplicationVersions.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { GalleryApplicationVersions } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ComputeManagementClient } from \"../computeManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  GalleryApplicationVersion,\n  GalleryApplicationVersionsListByGalleryApplicationNextOptionalParams,\n  GalleryApplicationVersionsListByGalleryApplicationOptionalParams,\n  GalleryApplicationVersionsListByGalleryApplicationResponse,\n  GalleryApplicationVersionsGetOptionalParams,\n  GalleryApplicationVersionsGetResponse,\n  GalleryApplicationVersionsCreateOrUpdateOptionalParams,\n  GalleryApplicationVersionsCreateOrUpdateResponse,\n  GalleryApplicationVersionUpdate,\n  GalleryApplicationVersionsUpdateOptionalParams,\n  GalleryApplicationVersionsUpdateResponse,\n  GalleryApplicationVersionsDeleteOptionalParams,\n  GalleryApplicationVersionsListByGalleryApplicationNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GalleryApplicationVersions operations. */\nexport class GalleryApplicationVersionsImpl\n  implements GalleryApplicationVersions\n{\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class GalleryApplicationVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List gallery Application Versions in a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param options The options parameters.\n   */\n  public listByGalleryApplication(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams,\n  ): PagedAsyncIterableIterator<GalleryApplicationVersion> {\n    const iter = this.listByGalleryApplicationPagingAll(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByGalleryApplicationPagingPage(\n          resourceGroupName,\n          galleryName,\n          galleryApplicationName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listByGalleryApplicationPagingPage(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<GalleryApplicationVersion[]> {\n    let result: GalleryApplicationVersionsListByGalleryApplicationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByGalleryApplication(\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByGalleryApplicationNext(\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByGalleryApplicationPagingAll(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams,\n  ): AsyncIterableIterator<GalleryApplicationVersion> {\n    for await (const page of this.listByGalleryApplicationPagingPage(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List gallery Application Versions in a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param options The options parameters.\n   */\n  private _listByGalleryApplication(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams,\n  ): Promise<GalleryApplicationVersionsListByGalleryApplicationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, galleryApplicationName, options },\n      listByGalleryApplicationOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves information about a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    options?: GalleryApplicationVersionsGetOptionalParams,\n  ): Promise<GalleryApplicationVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        options,\n      },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * Create or update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application\n   *                                  Version operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersion,\n    options?: GalleryApplicationVersionsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GalleryApplicationVersionsCreateOrUpdateResponse>,\n      GalleryApplicationVersionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<GalleryApplicationVersionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        galleryApplicationVersion,\n        options,\n      },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      GalleryApplicationVersionsCreateOrUpdateResponse,\n      OperationState<GalleryApplicationVersionsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application\n   *                                  Version operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersion,\n    options?: GalleryApplicationVersionsCreateOrUpdateOptionalParams,\n  ): Promise<GalleryApplicationVersionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplicationVersionName,\n      galleryApplicationVersion,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version\n   *                                  operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersionUpdate,\n    options?: GalleryApplicationVersionsUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GalleryApplicationVersionsUpdateResponse>,\n      GalleryApplicationVersionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<GalleryApplicationVersionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        galleryApplicationVersion,\n        options,\n      },\n      spec: updateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      GalleryApplicationVersionsUpdateResponse,\n      OperationState<GalleryApplicationVersionsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version\n   *                                  operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersionUpdate,\n    options?: GalleryApplicationVersionsUpdateOptionalParams,\n  ): Promise<GalleryApplicationVersionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplicationVersionName,\n      galleryApplicationVersion,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    options?: GalleryApplicationVersionsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        options,\n      },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete a gallery Application Version.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    options?: GalleryApplicationVersionsDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplicationVersionName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByGalleryApplicationNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param nextLink The nextLink from the previous successful call to the ListByGalleryApplication\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByGalleryApplicationNext(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    nextLink: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationNextOptionalParams,\n  ): Promise<GalleryApplicationVersionsListByGalleryApplicationNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        nextLink,\n        options,\n      },\n      listByGalleryApplicationNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByGalleryApplicationOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersionList,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expand12],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n    },\n    201: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n    },\n    202: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n    },\n    204: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.galleryApplicationVersion,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n      headersMapper: Mappers.GalleryApplicationVersionsUpdateHeaders,\n    },\n    201: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n      headersMapper: Mappers.GalleryApplicationVersionsUpdateHeaders,\n    },\n    202: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n      headersMapper: Mappers.GalleryApplicationVersionsUpdateHeaders,\n    },\n    204: {\n      bodyMapper: Mappers.GalleryApplicationVersion,\n      headersMapper: Mappers.GalleryApplicationVersionsUpdateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.galleryApplicationVersion1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByGalleryApplicationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersionList,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}