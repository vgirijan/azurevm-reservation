import { RestorePoints } from "../operationsInterfaces/index.js";
import { ComputeManagementClient } from "../computeManagementClient.js";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { RestorePointsGetOptionalParams, RestorePointsGetResponse, RestorePoint, RestorePointsCreateOptionalParams, RestorePointsCreateResponse, RestorePointsDeleteOptionalParams } from "../models/index.js";
/** Class containing RestorePoints operations. */
export declare class RestorePointsImpl implements RestorePoints {
    private readonly client;
    /**
     * Initialize a new instance of the class RestorePoints class.
     * @param client Reference to the service client
     */
    constructor(client: ComputeManagementClient);
    /**
     * The operation to get the restore point.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, restorePointCollectionName: string, restorePointName: string, options?: RestorePointsGetOptionalParams): Promise<RestorePointsGetResponse>;
    /**
     * The operation to create the restore point. Updating properties of an existing restore point is not
     * allowed
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param parameters Parameters supplied to the Create restore point operation.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, restorePointCollectionName: string, restorePointName: string, parameters: RestorePoint, options?: RestorePointsCreateOptionalParams): Promise<SimplePollerLike<OperationState<RestorePointsCreateResponse>, RestorePointsCreateResponse>>;
    /**
     * The operation to create the restore point. Updating properties of an existing restore point is not
     * allowed
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param parameters Parameters supplied to the Create restore point operation.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, restorePointCollectionName: string, restorePointName: string, parameters: RestorePoint, options?: RestorePointsCreateOptionalParams): Promise<RestorePointsCreateResponse>;
    /**
     * The operation to delete the restore point.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, restorePointCollectionName: string, restorePointName: string, options?: RestorePointsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to delete the restore point.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param restorePointCollectionName The name of the restore point collection.
     * @param restorePointName The name of the restore point.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, restorePointCollectionName: string, restorePointName: string, options?: RestorePointsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=restorePoints.d.ts.map