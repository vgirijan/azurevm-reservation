{"version":3,"file":"virtualMachineExtensionImages.js","sourceRoot":"","sources":["../../../src/operations/virtualMachineExtensionImages.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineExtensionImages } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ComputeManagementClient } from \"../computeManagementClient.js\";\nimport {\n  VirtualMachineExtensionImagesListTypesOptionalParams,\n  VirtualMachineExtensionImagesListTypesResponse,\n  VirtualMachineExtensionImagesListVersionsOptionalParams,\n  VirtualMachineExtensionImagesListVersionsResponse,\n  VirtualMachineExtensionImagesGetOptionalParams,\n  VirtualMachineExtensionImagesGetResponse,\n} from \"../models/index.js\";\n\n/** Class containing VirtualMachineExtensionImages operations. */\nexport class VirtualMachineExtensionImagesImpl\n  implements VirtualMachineExtensionImages\n{\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineExtensionImages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of virtual machine extension image types.\n   * @param location The name of Azure region.\n   * @param publisherName\n   * @param options The options parameters.\n   */\n  listTypes(\n    location: string,\n    publisherName: string,\n    options?: VirtualMachineExtensionImagesListTypesOptionalParams,\n  ): Promise<VirtualMachineExtensionImagesListTypesResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, options },\n      listTypesOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine extension image versions.\n   * @param location The name of Azure region.\n   * @param publisherName\n   * @param typeParam\n   * @param options The options parameters.\n   */\n  listVersions(\n    location: string,\n    publisherName: string,\n    typeParam: string,\n    options?: VirtualMachineExtensionImagesListVersionsOptionalParams,\n  ): Promise<VirtualMachineExtensionImagesListVersionsResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, typeParam, options },\n      listVersionsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a virtual machine extension image.\n   * @param location The name of Azure region.\n   * @param publisherName\n   * @param typeParam\n   * @param version\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    publisherName: string,\n    typeParam: string,\n    version: string,\n    options?: VirtualMachineExtensionImagesGetOptionalParams,\n  ): Promise<VirtualMachineExtensionImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, typeParam, version, options },\n      getOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listTypesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionImage\",\n            },\n          },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listVersionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionImage\",\n            },\n          },\n        },\n      },\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.top,\n    Parameters.orderby,\n    Parameters.filter,\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.typeParam,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineExtensionImage,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.version,\n    Parameters.typeParam,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}