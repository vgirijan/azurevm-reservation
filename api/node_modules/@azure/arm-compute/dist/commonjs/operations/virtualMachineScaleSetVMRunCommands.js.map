{"version":3,"file":"virtualMachineScaleSetVMRunCommands.js","sourceRoot":"","sources":["../../../src/operations/virtualMachineScaleSetVMRunCommands.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { VirtualMachineScaleSetVMRunCommands } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ComputeManagementClient } from \"../computeManagementClient.js\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller,\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl.js\";\nimport {\n  VirtualMachineRunCommand,\n  VirtualMachineScaleSetVMRunCommandsListNextOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsListOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsListResponse,\n  VirtualMachineScaleSetVMRunCommandsGetOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsGetResponse,\n  VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse,\n  VirtualMachineRunCommandUpdate,\n  VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsUpdateResponse,\n  VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsListNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineScaleSetVMRunCommands operations. */\nexport class VirtualMachineScaleSetVMRunCommandsImpl\n  implements VirtualMachineScaleSetVMRunCommands\n{\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSetVMRunCommands class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to get all run commands of an instance in Virtual Machine Scaleset.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineRunCommand> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          vmScaleSetName,\n          instanceId,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<VirtualMachineRunCommand[]> {\n    let result: VirtualMachineScaleSetVMRunCommandsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams,\n  ): AsyncIterableIterator<VirtualMachineRunCommand> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to get all run commands of an instance in Virtual Machine Scaleset.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMRunCommandsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      listOperationSpec,\n    );\n  }\n\n  /**\n   * The operation to get the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    options?: VirtualMachineScaleSetVMRunCommandsGetOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMRunCommandsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        options,\n      },\n      getOperationSpec,\n    );\n  }\n\n  /**\n   * The operation to create or update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommand,\n    options?: VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse>,\n      VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        runCommand,\n        options,\n      },\n      spec: createOrUpdateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse,\n      OperationState<VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * The operation to create or update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommand,\n    options?: VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      runCommandName,\n      runCommand,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param runCommand Resource create parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommandUpdate,\n    options?: VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetVMRunCommandsUpdateResponse>,\n      VirtualMachineScaleSetVMRunCommandsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<VirtualMachineScaleSetVMRunCommandsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        runCommand,\n        options,\n      },\n      spec: updateOperationSpec,\n    });\n    const poller = await createHttpPoller<\n      VirtualMachineScaleSetVMRunCommandsUpdateResponse,\n      OperationState<VirtualMachineScaleSetVMRunCommandsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * The operation to update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param runCommand Resource create parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommandUpdate,\n    options?: VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMRunCommandsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      runCommandName,\n      runCommand,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    options?: VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec,\n    ) => {\n      let currentRawResponse: coreClient.FullOperationResponse | undefined =\n        undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown,\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback,\n        },\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON(),\n        },\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        options,\n      },\n      spec: deleteOperationSpec,\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\",\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * The operation to delete the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param runCommandName The name of the VirtualMachineRunCommand\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    options?: VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams,\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      runCommandName,\n      options,\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VirtualMachineScaleSet\n   * @param instanceId The name of the VirtualMachineScaleSetVM\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListNextOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMRunCommandsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, nextLink, options },\n      listNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommandsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.runCommandName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.runCommand,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.runCommandName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n      headersMapper: Mappers.VirtualMachineScaleSetVMRunCommandsUpdateHeaders,\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n      headersMapper: Mappers.VirtualMachineScaleSetVMRunCommandsUpdateHeaders,\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n      headersMapper: Mappers.VirtualMachineScaleSetVMRunCommandsUpdateHeaders,\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineRunCommand,\n      headersMapper: Mappers.VirtualMachineScaleSetVMRunCommandsUpdateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  requestBody: Parameters.runCommand1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.runCommandName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.runCommandName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommandsListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}