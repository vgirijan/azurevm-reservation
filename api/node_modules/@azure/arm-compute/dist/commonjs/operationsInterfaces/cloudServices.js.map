{"version":3,"file":"cloudServices.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/cloudServices.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  CloudService,\n  CloudServicesListAllOptionalParams,\n  CloudServicesListOptionalParams,\n  CloudServicesCreateOrUpdateOptionalParams,\n  CloudServicesCreateOrUpdateResponse,\n  CloudServicesUpdateOptionalParams,\n  CloudServicesUpdateResponse,\n  CloudServicesDeleteOptionalParams,\n  CloudServicesGetOptionalParams,\n  CloudServicesGetResponse,\n  CloudServicesGetInstanceViewOptionalParams,\n  CloudServicesGetInstanceViewResponse,\n  CloudServicesStartOptionalParams,\n  CloudServicesPowerOffOptionalParams,\n  CloudServicesRestartOptionalParams,\n  CloudServicesReimageOptionalParams,\n  CloudServicesRebuildOptionalParams,\n  CloudServicesDeleteInstancesOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a CloudServices. */\nexport interface CloudServices {\n  /**\n   * Gets a list of all cloud services in the subscription, regardless of the associated resource group.\n   * Use nextLink property in the response to get the next page of Cloud Services. Do this till nextLink\n   * is null to fetch all the Cloud Services.\n   * @param options The options parameters.\n   */\n  listAll(\n    options?: CloudServicesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<CloudService>;\n  /**\n   * Gets a list of all cloud services under a resource group. Use nextLink property in the response to\n   * get the next page of Cloud Services. Do this till nextLink is null to fetch all the Cloud Services.\n   * @param resourceGroupName Name of the resource group.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: CloudServicesListOptionalParams,\n  ): PagedAsyncIterableIterator<CloudService>;\n  /**\n   * Create or update a cloud service. Please note some properties can be set only during cloud service\n   * creation.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CloudServicesCreateOrUpdateResponse>,\n      CloudServicesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a cloud service. Please note some properties can be set only during cloud service\n   * creation.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesCreateOrUpdateOptionalParams,\n  ): Promise<CloudServicesCreateOrUpdateResponse>;\n  /**\n   * Update a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CloudServicesUpdateResponse>,\n      CloudServicesUpdateResponse\n    >\n  >;\n  /**\n   * Update a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateOptionalParams,\n  ): Promise<CloudServicesUpdateResponse>;\n  /**\n   * Deletes a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Display information about a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesGetOptionalParams,\n  ): Promise<CloudServicesGetResponse>;\n  /**\n   * Gets the status of a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesGetInstanceViewOptionalParams,\n  ): Promise<CloudServicesGetInstanceViewResponse>;\n  /**\n   * Starts the cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginStart(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesStartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Starts the cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginStartAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesStartOptionalParams,\n  ): Promise<void>;\n  /**\n   * Power off the cloud service. Note that resources are still attached and you are getting charged for\n   * the resources.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginPowerOff(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesPowerOffOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Power off the cloud service. Note that resources are still attached and you are getting charged for\n   * the resources.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginPowerOffAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesPowerOffOptionalParams,\n  ): Promise<void>;\n  /**\n   * Restarts one or more role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRestartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Restarts one or more role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRestartOptionalParams,\n  ): Promise<void>;\n  /**\n   * Reimage asynchronous operation reinstalls the operating system on instances of web roles or worker\n   * roles.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginReimage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesReimageOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Reimage asynchronous operation reinstalls the operating system on instances of web roles or worker\n   * roles.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginReimageAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesReimageOptionalParams,\n  ): Promise<void>;\n  /**\n   * Rebuild Role Instances reinstalls the operating system on instances of web roles or worker roles and\n   * initializes the storage resources that are used by them. If you do not want to initialize storage\n   * resources, you can use Reimage Role Instances.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginRebuild(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRebuildOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Rebuild Role Instances reinstalls the operating system on instances of web roles or worker roles and\n   * initializes the storage resources that are used by them. If you do not want to initialize storage\n   * resources, you can use Reimage Role Instances.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginRebuildAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRebuildOptionalParams,\n  ): Promise<void>;\n  /**\n   * Deletes role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginDeleteInstances(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteInstancesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  beginDeleteInstancesAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteInstancesOptionalParams,\n  ): Promise<void>;\n}\n"]}