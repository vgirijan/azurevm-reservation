{"version":3,"file":"images.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/images.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  Image,\n  ImagesListOptionalParams,\n  ImagesListByResourceGroupOptionalParams,\n  ImagesGetOptionalParams,\n  ImagesGetResponse,\n  ImagesCreateOrUpdateOptionalParams,\n  ImagesCreateOrUpdateResponse,\n  ImageUpdate,\n  ImagesUpdateOptionalParams,\n  ImagesUpdateResponse,\n  ImagesDeleteOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a Images. */\nexport interface Images {\n  /**\n   * Gets the list of Images in the subscription. Use nextLink property in the response to get the next\n   * page of Images. Do this till nextLink is null to fetch all the Images.\n   * @param options The options parameters.\n   */\n  list(options?: ImagesListOptionalParams): PagedAsyncIterableIterator<Image>;\n  /**\n   * Gets the list of images under a resource group. Use nextLink property in the response to get the\n   * next page of Images. Do this till nextLink is null to fetch all the Images.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: ImagesListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<Image>;\n  /**\n   * Gets an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    imageName: string,\n    options?: ImagesGetOptionalParams,\n  ): Promise<ImagesGetResponse>;\n  /**\n   * Create or update an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Create Image operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: Image,\n    options?: ImagesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ImagesCreateOrUpdateResponse>,\n      ImagesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Create Image operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: Image,\n    options?: ImagesCreateOrUpdateOptionalParams,\n  ): Promise<ImagesCreateOrUpdateResponse>;\n  /**\n   * Update an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Update Image operation.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: ImageUpdate,\n    options?: ImagesUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<OperationState<ImagesUpdateResponse>, ImagesUpdateResponse>\n  >;\n  /**\n   * Update an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Update Image operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: ImageUpdate,\n    options?: ImagesUpdateOptionalParams,\n  ): Promise<ImagesUpdateResponse>;\n  /**\n   * Deletes an Image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    imageName: string,\n    options?: ImagesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes an Image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param imageName The name of the image.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    imageName: string,\n    options?: ImagesDeleteOptionalParams,\n  ): Promise<void>;\n}\n"]}