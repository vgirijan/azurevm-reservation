{"version":3,"file":"virtualMachineScaleSetVMs.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualMachineScaleSetVMs.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualMachineScaleSetVM,\n  VirtualMachineScaleSetVMsListOptionalParams,\n  VirtualMachineScaleSetVMsGetOptionalParams,\n  VirtualMachineScaleSetVMsGetResponse,\n  VirtualMachineScaleSetVMsUpdateOptionalParams,\n  VirtualMachineScaleSetVMsUpdateResponse,\n  VirtualMachineScaleSetVMsDeleteOptionalParams,\n  VirtualMachineScaleSetVMsApproveRollingUpgradeOptionalParams,\n  VirtualMachineScaleSetVMsApproveRollingUpgradeResponse,\n  AttachDetachDataDisksRequest,\n  VirtualMachineScaleSetVMsAttachDetachDataDisksOptionalParams,\n  VirtualMachineScaleSetVMsAttachDetachDataDisksResponse,\n  VirtualMachineScaleSetVMsDeallocateOptionalParams,\n  VirtualMachineScaleSetVMsGetInstanceViewOptionalParams,\n  VirtualMachineScaleSetVMsGetInstanceViewResponse,\n  VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams,\n  VirtualMachineScaleSetVMsPowerOffOptionalParams,\n  VirtualMachineScaleSetVMsRedeployOptionalParams,\n  VirtualMachineScaleSetVMsReimageOptionalParams,\n  VirtualMachineScaleSetVMsReimageAllOptionalParams,\n  VirtualMachineScaleSetVMsRestartOptionalParams,\n  VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataOptionalParams,\n  VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataResponse,\n  RunCommandInput,\n  VirtualMachineScaleSetVMsRunCommandOptionalParams,\n  VirtualMachineScaleSetVMsRunCommandResponse,\n  VirtualMachineScaleSetVMsSimulateEvictionOptionalParams,\n  VirtualMachineScaleSetVMsStartOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualMachineScaleSetVMs. */\nexport interface VirtualMachineScaleSetVMs {\n  /**\n   * Gets a list of all virtual machines in a VM scale sets.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param virtualMachineScaleSetName The name of the VirtualMachineScaleSet\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: VirtualMachineScaleSetVMsListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSetVM>;\n  /**\n   * Gets a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsGetOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsGetResponse>;\n  /**\n   * Updates a virtual machine of a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine Scale Sets VM operation.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: VirtualMachineScaleSetVM,\n    options?: VirtualMachineScaleSetVMsUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetVMsUpdateResponse>,\n      VirtualMachineScaleSetVMsUpdateResponse\n    >\n  >;\n  /**\n   * Updates a virtual machine of a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine Scale Sets VM operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: VirtualMachineScaleSetVM,\n    options?: VirtualMachineScaleSetVMsUpdateOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsUpdateResponse>;\n  /**\n   * Deletes a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Approve upgrade on deferred rolling upgrade for OS disk on a VM scale set instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginApproveRollingUpgrade(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsApproveRollingUpgradeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetVMsApproveRollingUpgradeResponse>,\n      VirtualMachineScaleSetVMsApproveRollingUpgradeResponse\n    >\n  >;\n  /**\n   * Approve upgrade on deferred rolling upgrade for OS disk on a VM scale set instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginApproveRollingUpgradeAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsApproveRollingUpgradeOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsApproveRollingUpgradeResponse>;\n  /**\n   * Attach and detach data disks to/from a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the attach and detach data disks operation on a Virtual\n   *                   Machine Scale Sets VM.\n   * @param options The options parameters.\n   */\n  beginAttachDetachDataDisks(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: AttachDetachDataDisksRequest,\n    options?: VirtualMachineScaleSetVMsAttachDetachDataDisksOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetVMsAttachDetachDataDisksResponse>,\n      VirtualMachineScaleSetVMsAttachDetachDataDisksResponse\n    >\n  >;\n  /**\n   * Attach and detach data disks to/from a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the attach and detach data disks operation on a Virtual\n   *                   Machine Scale Sets VM.\n   * @param options The options parameters.\n   */\n  beginAttachDetachDataDisksAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: AttachDetachDataDisksRequest,\n    options?: VirtualMachineScaleSetVMsAttachDetachDataDisksOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsAttachDetachDataDisksResponse>;\n  /**\n   * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and\n   * releases the compute resources it uses. You are not billed for the compute resources of this virtual\n   * machine once it is deallocated.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDeallocate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeallocateOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and\n   * releases the compute resources it uses. You are not billed for the compute resources of this virtual\n   * machine once it is deallocated.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDeallocateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeallocateOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the status of a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsGetInstanceViewOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsGetInstanceViewResponse>;\n  /**\n   * Performs maintenance on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPerformMaintenance(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Performs maintenance on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPerformMaintenanceAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams,\n  ): Promise<void>;\n  /**\n   * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you\n   * are getting charged for the resources. Instead, use deallocate to release resources and avoid\n   * charges.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPowerOff(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPowerOffOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you\n   * are getting charged for the resources. Instead, use deallocate to release resources and avoid\n   * charges.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPowerOffAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPowerOffOptionalParams,\n  ): Promise<void>;\n  /**\n   * Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers\n   * it back on.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRedeploy(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRedeployOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers\n   * it back on.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRedeployAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRedeployOptionalParams,\n  ): Promise<void>;\n  /**\n   * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReimage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReimageAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageOptionalParams,\n  ): Promise<void>;\n  /**\n   * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReimageAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageAllOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReimageAllAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageAllOptionalParams,\n  ): Promise<void>;\n  /**\n   * Restarts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRestartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Restarts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRestartOptionalParams,\n  ): Promise<void>;\n  /**\n   * The operation to retrieve SAS URIs of boot diagnostic logs for a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  retrieveBootDiagnosticsData(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataResponse>;\n  /**\n   * Run command on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  beginRunCommand(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachineScaleSetVMsRunCommandOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetVMsRunCommandResponse>,\n      VirtualMachineScaleSetVMsRunCommandResponse\n    >\n  >;\n  /**\n   * Run command on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  beginRunCommandAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachineScaleSetVMsRunCommandOptionalParams,\n  ): Promise<VirtualMachineScaleSetVMsRunCommandResponse>;\n  /**\n   * The operation to simulate the eviction of spot virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  simulateEviction(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsSimulateEvictionOptionalParams,\n  ): Promise<void>;\n  /**\n   * Starts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginStart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsStartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Starts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginStartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsStartOptionalParams,\n  ): Promise<void>;\n}\n"]}