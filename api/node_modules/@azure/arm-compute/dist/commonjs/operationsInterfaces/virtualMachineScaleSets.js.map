{"version":3,"file":"virtualMachineScaleSets.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualMachineScaleSets.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualMachineScaleSet,\n  VirtualMachineScaleSetsListByLocationOptionalParams,\n  VirtualMachineScaleSetsListAllOptionalParams,\n  VirtualMachineScaleSetsListOptionalParams,\n  UpgradeOperationHistoricalStatusInfo,\n  VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams,\n  VirtualMachineScaleSetSku,\n  VirtualMachineScaleSetsListSkusOptionalParams,\n  VirtualMachineScaleSetsGetOptionalParams,\n  VirtualMachineScaleSetsGetResponse,\n  VirtualMachineScaleSetsCreateOrUpdateOptionalParams,\n  VirtualMachineScaleSetsCreateOrUpdateResponse,\n  VirtualMachineScaleSetUpdate,\n  VirtualMachineScaleSetsUpdateOptionalParams,\n  VirtualMachineScaleSetsUpdateResponse,\n  VirtualMachineScaleSetsDeleteOptionalParams,\n  VirtualMachineScaleSetsApproveRollingUpgradeOptionalParams,\n  VirtualMachineScaleSetsApproveRollingUpgradeResponse,\n  VMScaleSetConvertToSinglePlacementGroupInput,\n  VirtualMachineScaleSetsConvertToSinglePlacementGroupOptionalParams,\n  VirtualMachineScaleSetsDeallocateOptionalParams,\n  VirtualMachineScaleSetVMInstanceRequiredIDs,\n  VirtualMachineScaleSetsDeleteInstancesOptionalParams,\n  VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkOptionalParams,\n  VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse,\n  VirtualMachineScaleSetsGetInstanceViewOptionalParams,\n  VirtualMachineScaleSetsGetInstanceViewResponse,\n  VirtualMachineScaleSetsUpdateInstancesOptionalParams,\n  VirtualMachineScaleSetsPerformMaintenanceOptionalParams,\n  VirtualMachineScaleSetsPowerOffOptionalParams,\n  VirtualMachineScaleSetsReapplyOptionalParams,\n  VirtualMachineScaleSetsRedeployOptionalParams,\n  VirtualMachineScaleSetsReimageOptionalParams,\n  VirtualMachineScaleSetsReimageAllOptionalParams,\n  VirtualMachineScaleSetsRestartOptionalParams,\n  OrchestrationServiceStateInput,\n  VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams,\n  VirtualMachineScaleSetsStartOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualMachineScaleSets. */\nexport interface VirtualMachineScaleSets {\n  /**\n   * Gets all the VM scale sets under the specified subscription for the specified location.\n   * @param location The name of Azure region.\n   * @param options The options parameters.\n   */\n  listByLocation(\n    location: string,\n    options?: VirtualMachineScaleSetsListByLocationOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSet>;\n  /**\n   * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group.\n   * Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink\n   * is null to fetch all the VM Scale Sets.\n   * @param options The options parameters.\n   */\n  listAll(\n    options?: VirtualMachineScaleSetsListAllOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSet>;\n  /**\n   * Gets a list of all VM scale sets under a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: VirtualMachineScaleSetsListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSet>;\n  /**\n   * Gets list of OS upgrades on a VM scale set instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  listOSUpgradeHistory(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams,\n  ): PagedAsyncIterableIterator<UpgradeOperationHistoricalStatusInfo>;\n  /**\n   * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances\n   * allowed for each SKU.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  listSkus(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsListSkusOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSetSku>;\n  /**\n   * Display information about a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOptionalParams,\n  ): Promise<VirtualMachineScaleSetsGetResponse>;\n  /**\n   * Create or update a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSet,\n    options?: VirtualMachineScaleSetsCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetsCreateOrUpdateResponse>,\n      VirtualMachineScaleSetsCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Create or update a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSet,\n    options?: VirtualMachineScaleSetsCreateOrUpdateOptionalParams,\n  ): Promise<VirtualMachineScaleSetsCreateOrUpdateResponse>;\n  /**\n   * Update a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSetUpdate,\n    options?: VirtualMachineScaleSetsUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetsUpdateResponse>,\n      VirtualMachineScaleSetsUpdateResponse\n    >\n  >;\n  /**\n   * Update a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSetUpdate,\n    options?: VirtualMachineScaleSetsUpdateOptionalParams,\n  ): Promise<VirtualMachineScaleSetsUpdateResponse>;\n  /**\n   * Deletes a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Approve upgrade on deferred rolling upgrades for OS disks in the virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginApproveRollingUpgrade(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsApproveRollingUpgradeOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachineScaleSetsApproveRollingUpgradeResponse>,\n      VirtualMachineScaleSetsApproveRollingUpgradeResponse\n    >\n  >;\n  /**\n   * Approve upgrade on deferred rolling upgrades for OS disks in the virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginApproveRollingUpgradeAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsApproveRollingUpgradeOptionalParams,\n  ): Promise<VirtualMachineScaleSetsApproveRollingUpgradeResponse>;\n  /**\n   * Converts SinglePlacementGroup property to false for a existing virtual machine scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The input object for ConvertToSinglePlacementGroup API.\n   * @param options The options parameters.\n   */\n  convertToSinglePlacementGroup(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VMScaleSetConvertToSinglePlacementGroupInput,\n    options?: VirtualMachineScaleSetsConvertToSinglePlacementGroupOptionalParams,\n  ): Promise<void>;\n  /**\n   * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and\n   * releases the compute resources. You are not billed for the compute resources that this virtual\n   * machine scale set deallocates.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginDeallocate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeallocateOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and\n   * releases the compute resources. You are not billed for the compute resources that this virtual\n   * machine scale set deallocates.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginDeallocateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeallocateOptionalParams,\n  ): Promise<void>;\n  /**\n   * Deletes virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  beginDeleteInstances(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsDeleteInstancesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  beginDeleteInstancesAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsDeleteInstancesOptionalParams,\n  ): Promise<void>;\n  /**\n   * Manual platform update domain walk to update virtual machines in a service fabric virtual machine\n   * scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param platformUpdateDomain The platform update domain for which a manual recovery walk is requested\n   * @param options The options parameters.\n   */\n  forceRecoveryServiceFabricPlatformUpdateDomainWalk(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    platformUpdateDomain: number,\n    options?: VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkOptionalParams,\n  ): Promise<VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse>;\n  /**\n   * Gets the status of a VM scale set instance.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetInstanceViewOptionalParams,\n  ): Promise<VirtualMachineScaleSetsGetInstanceViewResponse>;\n  /**\n   * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  beginUpdateInstances(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsUpdateInstancesOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  beginUpdateInstancesAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsUpdateInstancesOptionalParams,\n  ): Promise<void>;\n  /**\n   * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which\n   * are not eligible for perform maintenance will be failed. Please refer to best practices for more\n   * details:\n   * https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginPerformMaintenance(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPerformMaintenanceOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which\n   * are not eligible for perform maintenance will be failed. Please refer to best practices for more\n   * details:\n   * https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginPerformMaintenanceAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPerformMaintenanceOptionalParams,\n  ): Promise<void>;\n  /**\n   * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still\n   * attached and you are getting charged for the resources. Instead, use deallocate to release resources\n   * and avoid charges.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginPowerOff(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPowerOffOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still\n   * attached and you are getting charged for the resources. Instead, use deallocate to release resources\n   * and avoid charges.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginPowerOffAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPowerOffOptionalParams,\n  ): Promise<void>;\n  /**\n   * Reapplies the Virtual Machine Scale Set Virtual Machine Profile to the Virtual Machine Instances\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginReapply(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReapplyOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Reapplies the Virtual Machine Scale Set Virtual Machine Profile to the Virtual Machine Instances\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginReapplyAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReapplyOptionalParams,\n  ): Promise<void>;\n  /**\n   * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and\n   * powers them back on.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginRedeploy(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRedeployOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and\n   * powers them back on.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginRedeployAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRedeployOptionalParams,\n  ): Promise<void>;\n  /**\n   * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't\n   * have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is\n   * reset to initial state.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginReimage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't\n   * have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is\n   * reset to initial state.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginReimageAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageOptionalParams,\n  ): Promise<void>;\n  /**\n   * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginReimageAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageAllOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginReimageAllAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageAllOptionalParams,\n  ): Promise<void>;\n  /**\n   * Restarts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRestartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Restarts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRestartOptionalParams,\n  ): Promise<void>;\n  /**\n   * Changes ServiceState property for a given service\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The input object for SetOrchestrationServiceState API.\n   * @param options The options parameters.\n   */\n  beginSetOrchestrationServiceState(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: OrchestrationServiceStateInput,\n    options?: VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Changes ServiceState property for a given service\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param parameters The input object for SetOrchestrationServiceState API.\n   * @param options The options parameters.\n   */\n  beginSetOrchestrationServiceStateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: OrchestrationServiceStateInput,\n    options?: VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams,\n  ): Promise<void>;\n  /**\n   * Starts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginStart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsStartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Starts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  beginStartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsStartOptionalParams,\n  ): Promise<void>;\n}\n"]}