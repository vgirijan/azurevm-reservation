{"version":3,"file":"virtualMachines.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/virtualMachines.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  VirtualMachine,\n  VirtualMachinesListByLocationOptionalParams,\n  VirtualMachinesListAllOptionalParams,\n  VirtualMachinesListOptionalParams,\n  VirtualMachineSize,\n  VirtualMachinesListAvailableSizesOptionalParams,\n  VirtualMachinesGetOptionalParams,\n  VirtualMachinesGetResponse,\n  VirtualMachinesCreateOrUpdateOptionalParams,\n  VirtualMachinesCreateOrUpdateResponse,\n  VirtualMachineUpdate,\n  VirtualMachinesUpdateOptionalParams,\n  VirtualMachinesUpdateResponse,\n  VirtualMachinesDeleteOptionalParams,\n  VirtualMachinesAssessPatchesOptionalParams,\n  VirtualMachinesAssessPatchesResponse,\n  AttachDetachDataDisksRequest,\n  VirtualMachinesAttachDetachDataDisksOptionalParams,\n  VirtualMachinesAttachDetachDataDisksResponse,\n  VirtualMachineCaptureParameters,\n  VirtualMachinesCaptureOptionalParams,\n  VirtualMachinesCaptureResponse,\n  VirtualMachinesConvertToManagedDisksOptionalParams,\n  VirtualMachinesDeallocateOptionalParams,\n  VirtualMachinesGeneralizeOptionalParams,\n  VirtualMachineInstallPatchesParameters,\n  VirtualMachinesInstallPatchesOptionalParams,\n  VirtualMachinesInstallPatchesResponse,\n  VirtualMachinesInstanceViewOptionalParams,\n  VirtualMachinesInstanceViewResponse,\n  VirtualMachinesMigrateToVMScaleSetOptionalParams,\n  VirtualMachinesMigrateToVMScaleSetResponse,\n  VirtualMachinesPerformMaintenanceOptionalParams,\n  VirtualMachinesPowerOffOptionalParams,\n  VirtualMachinesReapplyOptionalParams,\n  VirtualMachinesRedeployOptionalParams,\n  VirtualMachinesReimageOptionalParams,\n  VirtualMachinesRestartOptionalParams,\n  VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams,\n  VirtualMachinesRetrieveBootDiagnosticsDataResponse,\n  RunCommandInput,\n  VirtualMachinesRunCommandOptionalParams,\n  VirtualMachinesRunCommandResponse,\n  VirtualMachinesSimulateEvictionOptionalParams,\n  VirtualMachinesStartOptionalParams,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a VirtualMachines. */\nexport interface VirtualMachines {\n  /**\n   * Gets all the virtual machines under the specified subscription for the specified location.\n   * @param location The name of Azure region.\n   * @param options The options parameters.\n   */\n  listByLocation(\n    location: string,\n    options?: VirtualMachinesListByLocationOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachine>;\n  /**\n   * Lists all of the virtual machines in the specified subscription. Use the nextLink property in the\n   * response to get the next page of virtual machines.\n   * @param options The options parameters.\n   */\n  listAll(\n    options?: VirtualMachinesListAllOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachine>;\n  /**\n   * Lists all of the virtual machines in the specified resource group. Use the nextLink property in the\n   * response to get the next page of virtual machines.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    options?: VirtualMachinesListOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachine>;\n  /**\n   * Lists all available virtual machine sizes to which the specified virtual machine can be resized.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  listAvailableSizes(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesListAvailableSizesOptionalParams,\n  ): PagedAsyncIterableIterator<VirtualMachineSize>;\n  /**\n   * Retrieves information about the model view or the instance view of a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesGetOptionalParams,\n  ): Promise<VirtualMachinesGetResponse>;\n  /**\n   * The operation to create or update a virtual machine. Please note some properties can be set only\n   * during virtual machine creation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Create Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachine,\n    options?: VirtualMachinesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesCreateOrUpdateResponse>,\n      VirtualMachinesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * The operation to create or update a virtual machine. Please note some properties can be set only\n   * during virtual machine creation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Create Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachine,\n    options?: VirtualMachinesCreateOrUpdateOptionalParams,\n  ): Promise<VirtualMachinesCreateOrUpdateResponse>;\n  /**\n   * The operation to update a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineUpdate,\n    options?: VirtualMachinesUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesUpdateResponse>,\n      VirtualMachinesUpdateResponse\n    >\n  >;\n  /**\n   * The operation to update a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineUpdate,\n    options?: VirtualMachinesUpdateOptionalParams,\n  ): Promise<VirtualMachinesUpdateResponse>;\n  /**\n   * The operation to delete a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * The operation to delete a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Assess patches on the VM.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginAssessPatches(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesAssessPatchesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesAssessPatchesResponse>,\n      VirtualMachinesAssessPatchesResponse\n    >\n  >;\n  /**\n   * Assess patches on the VM.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginAssessPatchesAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesAssessPatchesOptionalParams,\n  ): Promise<VirtualMachinesAssessPatchesResponse>;\n  /**\n   * Attach and detach data disks to/from the virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the attach and detach data disks operation on the virtual\n   *                   machine.\n   * @param options The options parameters.\n   */\n  beginAttachDetachDataDisks(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: AttachDetachDataDisksRequest,\n    options?: VirtualMachinesAttachDetachDataDisksOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesAttachDetachDataDisksResponse>,\n      VirtualMachinesAttachDetachDataDisksResponse\n    >\n  >;\n  /**\n   * Attach and detach data disks to/from the virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the attach and detach data disks operation on the virtual\n   *                   machine.\n   * @param options The options parameters.\n   */\n  beginAttachDetachDataDisksAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: AttachDetachDataDisksRequest,\n    options?: VirtualMachinesAttachDetachDataDisksOptionalParams,\n  ): Promise<VirtualMachinesAttachDetachDataDisksResponse>;\n  /**\n   * Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to\n   * create similar VMs.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Capture Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  beginCapture(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineCaptureParameters,\n    options?: VirtualMachinesCaptureOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesCaptureResponse>,\n      VirtualMachinesCaptureResponse\n    >\n  >;\n  /**\n   * Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to\n   * create similar VMs.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Capture Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  beginCaptureAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineCaptureParameters,\n    options?: VirtualMachinesCaptureOptionalParams,\n  ): Promise<VirtualMachinesCaptureResponse>;\n  /**\n   * Converts virtual machine disks from blob-based to managed disks. Virtual machine must be\n   * stop-deallocated before invoking this operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginConvertToManagedDisks(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesConvertToManagedDisksOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Converts virtual machine disks from blob-based to managed disks. Virtual machine must be\n   * stop-deallocated before invoking this operation.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginConvertToManagedDisksAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesConvertToManagedDisksOptionalParams,\n  ): Promise<void>;\n  /**\n   * Shuts down the virtual machine and releases the compute resources. You are not billed for the\n   * compute resources that this virtual machine uses.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDeallocate(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeallocateOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Shuts down the virtual machine and releases the compute resources. You are not billed for the\n   * compute resources that this virtual machine uses.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginDeallocateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeallocateOptionalParams,\n  ): Promise<void>;\n  /**\n   * Sets the OS state of the virtual machine to generalized. It is recommended to sysprep the virtual\n   * machine before performing this operation. For Windows, please refer to [Create a managed image of a\n   * generalized VM in\n   * Azure](https://docs.microsoft.com/azure/virtual-machines/windows/capture-image-resource). For Linux,\n   * please refer to [How to create an image of a virtual machine or\n   * VHD](https://docs.microsoft.com/azure/virtual-machines/linux/capture-image).\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  generalize(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesGeneralizeOptionalParams,\n  ): Promise<void>;\n  /**\n   * Installs patches on the VM.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param installPatchesInput Input for InstallPatches as directly received by the API\n   * @param options The options parameters.\n   */\n  beginInstallPatches(\n    resourceGroupName: string,\n    vmName: string,\n    installPatchesInput: VirtualMachineInstallPatchesParameters,\n    options?: VirtualMachinesInstallPatchesOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesInstallPatchesResponse>,\n      VirtualMachinesInstallPatchesResponse\n    >\n  >;\n  /**\n   * Installs patches on the VM.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param installPatchesInput Input for InstallPatches as directly received by the API\n   * @param options The options parameters.\n   */\n  beginInstallPatchesAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    installPatchesInput: VirtualMachineInstallPatchesParameters,\n    options?: VirtualMachinesInstallPatchesOptionalParams,\n  ): Promise<VirtualMachinesInstallPatchesResponse>;\n  /**\n   * Retrieves information about the run-time state of a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  instanceView(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesInstanceViewOptionalParams,\n  ): Promise<VirtualMachinesInstanceViewResponse>;\n  /**\n   * Migrate a virtual machine from availability set to Flexible Virtual Machine Scale Set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginMigrateToVMScaleSet(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesMigrateToVMScaleSetOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesMigrateToVMScaleSetResponse>,\n      VirtualMachinesMigrateToVMScaleSetResponse\n    >\n  >;\n  /**\n   * Migrate a virtual machine from availability set to Flexible Virtual Machine Scale Set.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginMigrateToVMScaleSetAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesMigrateToVMScaleSetOptionalParams,\n  ): Promise<VirtualMachinesMigrateToVMScaleSetResponse>;\n  /**\n   * The operation to perform maintenance on a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPerformMaintenance(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPerformMaintenanceOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * The operation to perform maintenance on a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPerformMaintenanceAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPerformMaintenanceOptionalParams,\n  ): Promise<void>;\n  /**\n   * The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the\n   * same provisioned resources. You are still charged for this virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPowerOff(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPowerOffOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the\n   * same provisioned resources. You are still charged for this virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginPowerOffAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPowerOffOptionalParams,\n  ): Promise<void>;\n  /**\n   * The operation to reapply a virtual machine's state.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReapply(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReapplyOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * The operation to reapply a virtual machine's state.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReapplyAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReapplyOptionalParams,\n  ): Promise<void>;\n  /**\n   * Shuts down the virtual machine, moves it to a new node, and powers it back on.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRedeploy(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRedeployOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Shuts down the virtual machine, moves it to a new node, and powers it back on.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRedeployAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRedeployOptionalParams,\n  ): Promise<void>;\n  /**\n   * Reimages (upgrade the operating system) a virtual machine which don't have a ephemeral OS disk, for\n   * virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state. NOTE:\n   * The retaining of old OS disk depends on the value of deleteOption of OS disk. If deleteOption is\n   * detach, the old OS disk will be preserved after reimage. If deleteOption is delete, the old OS disk\n   * will be deleted after reimage. The deleteOption of the OS disk should be updated accordingly before\n   * performing the reimage.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReimage(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReimageOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Reimages (upgrade the operating system) a virtual machine which don't have a ephemeral OS disk, for\n   * virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state. NOTE:\n   * The retaining of old OS disk depends on the value of deleteOption of OS disk. If deleteOption is\n   * detach, the old OS disk will be preserved after reimage. If deleteOption is delete, the old OS disk\n   * will be deleted after reimage. The deleteOption of the OS disk should be updated accordingly before\n   * performing the reimage.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginReimageAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReimageOptionalParams,\n  ): Promise<void>;\n  /**\n   * The operation to restart a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRestart(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRestartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * The operation to restart a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginRestartAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRestartOptionalParams,\n  ): Promise<void>;\n  /**\n   * The operation to retrieve SAS URIs for a virtual machine's boot diagnostic logs.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  retrieveBootDiagnosticsData(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams,\n  ): Promise<VirtualMachinesRetrieveBootDiagnosticsDataResponse>;\n  /**\n   * Run command on the VM.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  beginRunCommand(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachinesRunCommandOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<VirtualMachinesRunCommandResponse>,\n      VirtualMachinesRunCommandResponse\n    >\n  >;\n  /**\n   * Run command on the VM.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  beginRunCommandAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachinesRunCommandOptionalParams,\n  ): Promise<VirtualMachinesRunCommandResponse>;\n  /**\n   * The operation to simulate the eviction of spot virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  simulateEviction(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesSimulateEvictionOptionalParams,\n  ): Promise<void>;\n  /**\n   * The operation to start a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginStart(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesStartOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * The operation to start a virtual machine.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  beginStartAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesStartOptionalParams,\n  ): Promise<void>;\n}\n"]}