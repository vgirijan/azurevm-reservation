{"version":3,"file":"cloudServiceOperatingSystems.js","sourceRoot":"","sources":["../../../src/operations/cloudServiceOperatingSystems.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { CloudServiceOperatingSystems } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ComputeManagementClient } from \"../computeManagementClient.js\";\nimport {\n  OSVersion,\n  CloudServiceOperatingSystemsListOSVersionsNextOptionalParams,\n  CloudServiceOperatingSystemsListOSVersionsOptionalParams,\n  CloudServiceOperatingSystemsListOSVersionsResponse,\n  OSFamily,\n  CloudServiceOperatingSystemsListOSFamiliesNextOptionalParams,\n  CloudServiceOperatingSystemsListOSFamiliesOptionalParams,\n  CloudServiceOperatingSystemsListOSFamiliesResponse,\n  CloudServiceOperatingSystemsGetOSVersionOptionalParams,\n  CloudServiceOperatingSystemsGetOSVersionResponse,\n  CloudServiceOperatingSystemsGetOSFamilyOptionalParams,\n  CloudServiceOperatingSystemsGetOSFamilyResponse,\n  CloudServiceOperatingSystemsListOSVersionsNextResponse,\n  CloudServiceOperatingSystemsListOSFamiliesNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CloudServiceOperatingSystems operations. */\nexport class CloudServiceOperatingSystemsImpl\n  implements CloudServiceOperatingSystems\n{\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CloudServiceOperatingSystems class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all guest operating system versions available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS versions. Do this till nextLink is null to fetch all the OS versions.\n   * @param location Name of the location that the OS versions pertain to.\n   * @param options The options parameters.\n   */\n  public listOSVersions(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams,\n  ): PagedAsyncIterableIterator<OSVersion> {\n    const iter = this.listOSVersionsPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listOSVersionsPagingPage(location, options, settings);\n      },\n    };\n  }\n\n  private async *listOSVersionsPagingPage(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<OSVersion[]> {\n    let result: CloudServiceOperatingSystemsListOSVersionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listOSVersions(location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listOSVersionsNext(\n        location,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listOSVersionsPagingAll(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams,\n  ): AsyncIterableIterator<OSVersion> {\n    for await (const page of this.listOSVersionsPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all guest operating system families available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS Families. Do this till nextLink is null to fetch all the OS Families.\n   * @param location Name of the location that the OS families pertain to.\n   * @param options The options parameters.\n   */\n  public listOSFamilies(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams,\n  ): PagedAsyncIterableIterator<OSFamily> {\n    const iter = this.listOSFamiliesPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listOSFamiliesPagingPage(location, options, settings);\n      },\n    };\n  }\n\n  private async *listOSFamiliesPagingPage(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<OSFamily[]> {\n    let result: CloudServiceOperatingSystemsListOSFamiliesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listOSFamilies(location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listOSFamiliesNext(\n        location,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listOSFamiliesPagingAll(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams,\n  ): AsyncIterableIterator<OSFamily> {\n    for await (const page of this.listOSFamiliesPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets properties of a guest operating system version that can be specified in the XML service\n   * configuration (.cscfg) for a cloud service.\n   * @param location Name of the location that the OS version pertains to.\n   * @param osVersionName Name of the OS version.\n   * @param options The options parameters.\n   */\n  getOSVersion(\n    location: string,\n    osVersionName: string,\n    options?: CloudServiceOperatingSystemsGetOSVersionOptionalParams,\n  ): Promise<CloudServiceOperatingSystemsGetOSVersionResponse> {\n    return this.client.sendOperationRequest(\n      { location, osVersionName, options },\n      getOSVersionOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a list of all guest operating system versions available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS versions. Do this till nextLink is null to fetch all the OS versions.\n   * @param location Name of the location that the OS versions pertain to.\n   * @param options The options parameters.\n   */\n  private _listOSVersions(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams,\n  ): Promise<CloudServiceOperatingSystemsListOSVersionsResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOSVersionsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets properties of a guest operating system family that can be specified in the XML service\n   * configuration (.cscfg) for a cloud service.\n   * @param location Name of the location that the OS family pertains to.\n   * @param osFamilyName Name of the OS family.\n   * @param options The options parameters.\n   */\n  getOSFamily(\n    location: string,\n    osFamilyName: string,\n    options?: CloudServiceOperatingSystemsGetOSFamilyOptionalParams,\n  ): Promise<CloudServiceOperatingSystemsGetOSFamilyResponse> {\n    return this.client.sendOperationRequest(\n      { location, osFamilyName, options },\n      getOSFamilyOperationSpec,\n    );\n  }\n\n  /**\n   * Gets a list of all guest operating system families available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS Families. Do this till nextLink is null to fetch all the OS Families.\n   * @param location Name of the location that the OS families pertain to.\n   * @param options The options parameters.\n   */\n  private _listOSFamilies(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams,\n  ): Promise<CloudServiceOperatingSystemsListOSFamiliesResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOSFamiliesOperationSpec,\n    );\n  }\n\n  /**\n   * ListOSVersionsNext\n   * @param location Name of the location that the OS versions pertain to.\n   * @param nextLink The nextLink from the previous successful call to the ListOSVersions method.\n   * @param options The options parameters.\n   */\n  private _listOSVersionsNext(\n    location: string,\n    nextLink: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsNextOptionalParams,\n  ): Promise<CloudServiceOperatingSystemsListOSVersionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listOSVersionsNextOperationSpec,\n    );\n  }\n\n  /**\n   * ListOSFamiliesNext\n   * @param location Name of the location that the OS families pertain to.\n   * @param nextLink The nextLink from the previous successful call to the ListOSFamilies method.\n   * @param options The options parameters.\n   */\n  private _listOSFamiliesNext(\n    location: string,\n    nextLink: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesNextOptionalParams,\n  ): Promise<CloudServiceOperatingSystemsListOSFamiliesNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listOSFamiliesNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOSVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsVersions/{osVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSVersion,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1,\n    Parameters.osVersionName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOSVersionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsVersions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSVersionListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOSFamilyOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsFamilies/{osFamilyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSFamily,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1,\n    Parameters.osFamilyName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOSFamiliesOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsFamilies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSFamilyListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOSVersionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSVersionListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.location1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listOSFamiliesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSFamilyListResult,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.location1,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}