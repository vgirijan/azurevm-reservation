{"version":3,"file":"diskAccesses.js","sourceRoot":"","sources":["../../../src/operationsInterfaces/diskAccesses.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SimplePollerLike, OperationState } from \"@azure/core-lro\";\nimport {\n  DiskAccess,\n  DiskAccessesListOptionalParams,\n  DiskAccessesListByResourceGroupOptionalParams,\n  PrivateEndpointConnection,\n  DiskAccessesListPrivateEndpointConnectionsOptionalParams,\n  DiskAccessesGetOptionalParams,\n  DiskAccessesGetResponse,\n  DiskAccessesCreateOrUpdateOptionalParams,\n  DiskAccessesCreateOrUpdateResponse,\n  DiskAccessUpdate,\n  DiskAccessesUpdateOptionalParams,\n  DiskAccessesUpdateResponse,\n  DiskAccessesDeleteOptionalParams,\n  DiskAccessesGetAPrivateEndpointConnectionOptionalParams,\n  DiskAccessesGetAPrivateEndpointConnectionResponse,\n  DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams,\n  DiskAccessesUpdateAPrivateEndpointConnectionResponse,\n  DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams,\n  DiskAccessesGetPrivateLinkResourcesOptionalParams,\n  DiskAccessesGetPrivateLinkResourcesResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Interface representing a DiskAccesses. */\nexport interface DiskAccesses {\n  /**\n   * Lists all the disk access resources under a subscription.\n   * @param options The options parameters.\n   */\n  list(\n    options?: DiskAccessesListOptionalParams,\n  ): PagedAsyncIterableIterator<DiskAccess>;\n  /**\n   * Lists all the disk access resources under a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  listByResourceGroup(\n    resourceGroupName: string,\n    options?: DiskAccessesListByResourceGroupOptionalParams,\n  ): PagedAsyncIterableIterator<DiskAccess>;\n  /**\n   * List information about private endpoint connections under a disk access resource\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  listPrivateEndpointConnections(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesListPrivateEndpointConnectionsOptionalParams,\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection>;\n  /**\n   * Gets information about a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesGetOptionalParams,\n  ): Promise<DiskAccessesGetResponse>;\n  /**\n   * Creates or updates a disk access resource\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Put disk access operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdate(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccess,\n    options?: DiskAccessesCreateOrUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DiskAccessesCreateOrUpdateResponse>,\n      DiskAccessesCreateOrUpdateResponse\n    >\n  >;\n  /**\n   * Creates or updates a disk access resource\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Put disk access operation.\n   * @param options The options parameters.\n   */\n  beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccess,\n    options?: DiskAccessesCreateOrUpdateOptionalParams,\n  ): Promise<DiskAccessesCreateOrUpdateResponse>;\n  /**\n   * Updates (patches) a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Patch disk access operation.\n   * @param options The options parameters.\n   */\n  beginUpdate(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccessUpdate,\n    options?: DiskAccessesUpdateOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DiskAccessesUpdateResponse>,\n      DiskAccessesUpdateResponse\n    >\n  >;\n  /**\n   * Updates (patches) a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Patch disk access operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccessUpdate,\n    options?: DiskAccessesUpdateOptionalParams,\n  ): Promise<DiskAccessesUpdateResponse>;\n  /**\n   * Deletes a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  beginDelete(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesDeleteOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  beginDeleteAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesDeleteOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets information about a private endpoint connection under a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  getAPrivateEndpointConnection(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    options?: DiskAccessesGetAPrivateEndpointConnectionOptionalParams,\n  ): Promise<DiskAccessesGetAPrivateEndpointConnectionResponse>;\n  /**\n   * Approve or reject a private endpoint connection under disk access resource, this can't be used to\n   * create a new private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param privateEndpointConnection private endpoint connection object supplied in the body of the Put\n   *                                  private endpoint connection operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAPrivateEndpointConnection(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams,\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DiskAccessesUpdateAPrivateEndpointConnectionResponse>,\n      DiskAccessesUpdateAPrivateEndpointConnectionResponse\n    >\n  >;\n  /**\n   * Approve or reject a private endpoint connection under disk access resource, this can't be used to\n   * create a new private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param privateEndpointConnection private endpoint connection object supplied in the body of the Put\n   *                                  private endpoint connection operation.\n   * @param options The options parameters.\n   */\n  beginUpdateAPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams,\n  ): Promise<DiskAccessesUpdateAPrivateEndpointConnectionResponse>;\n  /**\n   * Deletes a private endpoint connection under a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  beginDeleteAPrivateEndpointConnection(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    options?: DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams,\n  ): Promise<SimplePollerLike<OperationState<void>, void>>;\n  /**\n   * Deletes a private endpoint connection under a disk access resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  beginDeleteAPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    options?: DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams,\n  ): Promise<void>;\n  /**\n   * Gets the private link resources possible under disk access resource\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  getPrivateLinkResources(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesGetPrivateLinkResourcesOptionalParams,\n  ): Promise<DiskAccessesGetPrivateLinkResourcesResponse>;\n}\n"]}