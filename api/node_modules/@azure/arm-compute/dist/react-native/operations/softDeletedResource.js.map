{"version":3,"file":"softDeletedResource.js","sourceRoot":"","sources":["../../../src/operations/softDeletedResource.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper.js\";\nimport { SoftDeletedResource } from \"../operationsInterfaces/index.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers.js\";\nimport * as Parameters from \"../models/parameters.js\";\nimport { ComputeManagementClient } from \"../computeManagementClient.js\";\nimport {\n  GallerySoftDeletedResource,\n  SoftDeletedResourceListByArtifactNameNextOptionalParams,\n  SoftDeletedResourceListByArtifactNameOptionalParams,\n  SoftDeletedResourceListByArtifactNameResponse,\n  SoftDeletedResourceListByArtifactNameNextResponse,\n} from \"../models/index.js\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SoftDeletedResource operations. */\nexport class SoftDeletedResourceImpl implements SoftDeletedResource {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class SoftDeletedResource class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List soft-deleted resources of an artifact in the gallery, such as soft-deleted gallery image\n   * version of an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param artifactType The type of the artifact to be listed, such as gallery image version.\n   * @param artifactName The artifact name to be listed. If artifact type is Images, then the artifact\n   *                     name should be the gallery image name.\n   * @param options The options parameters.\n   */\n  public listByArtifactName(\n    resourceGroupName: string,\n    galleryName: string,\n    artifactType: string,\n    artifactName: string,\n    options?: SoftDeletedResourceListByArtifactNameOptionalParams,\n  ): PagedAsyncIterableIterator<GallerySoftDeletedResource> {\n    const iter = this.listByArtifactNamePagingAll(\n      resourceGroupName,\n      galleryName,\n      artifactType,\n      artifactName,\n      options,\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByArtifactNamePagingPage(\n          resourceGroupName,\n          galleryName,\n          artifactType,\n          artifactName,\n          options,\n          settings,\n        );\n      },\n    };\n  }\n\n  private async *listByArtifactNamePagingPage(\n    resourceGroupName: string,\n    galleryName: string,\n    artifactType: string,\n    artifactName: string,\n    options?: SoftDeletedResourceListByArtifactNameOptionalParams,\n    settings?: PageSettings,\n  ): AsyncIterableIterator<GallerySoftDeletedResource[]> {\n    let result: SoftDeletedResourceListByArtifactNameResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByArtifactName(\n        resourceGroupName,\n        galleryName,\n        artifactType,\n        artifactName,\n        options,\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByArtifactNameNext(\n        resourceGroupName,\n        galleryName,\n        artifactType,\n        artifactName,\n        continuationToken,\n        options,\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByArtifactNamePagingAll(\n    resourceGroupName: string,\n    galleryName: string,\n    artifactType: string,\n    artifactName: string,\n    options?: SoftDeletedResourceListByArtifactNameOptionalParams,\n  ): AsyncIterableIterator<GallerySoftDeletedResource> {\n    for await (const page of this.listByArtifactNamePagingPage(\n      resourceGroupName,\n      galleryName,\n      artifactType,\n      artifactName,\n      options,\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List soft-deleted resources of an artifact in the gallery, such as soft-deleted gallery image\n   * version of an image.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param artifactType The type of the artifact to be listed, such as gallery image version.\n   * @param artifactName The artifact name to be listed. If artifact type is Images, then the artifact\n   *                     name should be the gallery image name.\n   * @param options The options parameters.\n   */\n  private _listByArtifactName(\n    resourceGroupName: string,\n    galleryName: string,\n    artifactType: string,\n    artifactName: string,\n    options?: SoftDeletedResourceListByArtifactNameOptionalParams,\n  ): Promise<SoftDeletedResourceListByArtifactNameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, artifactType, artifactName, options },\n      listByArtifactNameOperationSpec,\n    );\n  }\n\n  /**\n   * ListByArtifactNameNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param artifactType The type of the artifact to be listed, such as gallery image version.\n   * @param artifactName The artifact name to be listed. If artifact type is Images, then the artifact\n   *                     name should be the gallery image name.\n   * @param nextLink The nextLink from the previous successful call to the ListByArtifactName method.\n   * @param options The options parameters.\n   */\n  private _listByArtifactNameNext(\n    resourceGroupName: string,\n    galleryName: string,\n    artifactType: string,\n    artifactName: string,\n    nextLink: string,\n    options?: SoftDeletedResourceListByArtifactNameNextOptionalParams,\n  ): Promise<SoftDeletedResourceListByArtifactNameNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        galleryName,\n        artifactType,\n        artifactName,\n        nextLink,\n        options,\n      },\n      listByArtifactNameNextOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByArtifactNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/softdeletedartifacttypes/{artifactType}/artifacts/{artifactName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GallerySoftDeletedResourceList,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.artifactType,\n    Parameters.artifactName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst listByArtifactNameNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GallerySoftDeletedResourceList,\n    },\n    default: {\n      bodyMapper: Mappers.CloudError,\n    },\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.galleryName,\n    Parameters.artifactType,\n    Parameters.artifactName,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n"]}