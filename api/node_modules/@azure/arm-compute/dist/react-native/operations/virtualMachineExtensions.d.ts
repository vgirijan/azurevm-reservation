import { VirtualMachineExtensions } from "../operationsInterfaces/index.js";
import { ComputeManagementClient } from "../computeManagementClient.js";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { VirtualMachineExtensionsListOptionalParams, VirtualMachineExtensionsListResponse, VirtualMachineExtensionsGetOptionalParams, VirtualMachineExtensionsGetResponse, VirtualMachineExtension, VirtualMachineExtensionsCreateOrUpdateOptionalParams, VirtualMachineExtensionsCreateOrUpdateResponse, VirtualMachineExtensionUpdate, VirtualMachineExtensionsUpdateOptionalParams, VirtualMachineExtensionsUpdateResponse, VirtualMachineExtensionsDeleteOptionalParams } from "../models/index.js";
/** Class containing VirtualMachineExtensions operations. */
export declare class VirtualMachineExtensionsImpl implements VirtualMachineExtensions {
    private readonly client;
    /**
     * Initialize a new instance of the class VirtualMachineExtensions class.
     * @param client Reference to the service client
     */
    constructor(client: ComputeManagementClient);
    /**
     * The operation to get all extensions of a Virtual Machine.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, vmName: string, options?: VirtualMachineExtensionsListOptionalParams): Promise<VirtualMachineExtensionsListResponse>;
    /**
     * The operation to get the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, vmName: string, vmExtensionName: string, options?: VirtualMachineExtensionsGetOptionalParams): Promise<VirtualMachineExtensionsGetResponse>;
    /**
     * The operation to create or update the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, vmName: string, vmExtensionName: string, extensionParameters: VirtualMachineExtension, options?: VirtualMachineExtensionsCreateOrUpdateOptionalParams): Promise<SimplePollerLike<OperationState<VirtualMachineExtensionsCreateOrUpdateResponse>, VirtualMachineExtensionsCreateOrUpdateResponse>>;
    /**
     * The operation to create or update the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, vmName: string, vmExtensionName: string, extensionParameters: VirtualMachineExtension, options?: VirtualMachineExtensionsCreateOrUpdateOptionalParams): Promise<VirtualMachineExtensionsCreateOrUpdateResponse>;
    /**
     * The operation to update the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, vmName: string, vmExtensionName: string, extensionParameters: VirtualMachineExtensionUpdate, options?: VirtualMachineExtensionsUpdateOptionalParams): Promise<SimplePollerLike<OperationState<VirtualMachineExtensionsUpdateResponse>, VirtualMachineExtensionsUpdateResponse>>;
    /**
     * The operation to update the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, vmName: string, vmExtensionName: string, extensionParameters: VirtualMachineExtensionUpdate, options?: VirtualMachineExtensionsUpdateOptionalParams): Promise<VirtualMachineExtensionsUpdateResponse>;
    /**
     * The operation to delete the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, vmName: string, vmExtensionName: string, options?: VirtualMachineExtensionsDeleteOptionalParams): Promise<SimplePollerLike<OperationState<void>, void>>;
    /**
     * The operation to delete the extension.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param vmName The name of the virtual machine.
     * @param vmExtensionName The name of the virtual machine extension.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, vmName: string, vmExtensionName: string, options?: VirtualMachineExtensionsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=virtualMachineExtensions.d.ts.map