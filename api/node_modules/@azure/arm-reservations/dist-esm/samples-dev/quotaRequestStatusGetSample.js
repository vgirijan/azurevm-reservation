/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureReservationAPI } from "@azure/arm-reservations";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
 *
 * @summary For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
 * x-ms-original-file: specification/reservations/resource-manager/Microsoft.Capacity/stable/2020-10-25/examples/getQuotaRequestStatusFailed.json
 */
function quotaRequestFailed() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const providerId = "Microsoft.Compute";
        const location = "eastus";
        const id = "2B5C8515-37D8-4B6A-879B-CD641A2CF605";
        const credential = new DefaultAzureCredential();
        const client = new AzureReservationAPI(credential);
        const result = yield client.quotaRequestStatus.get(subscriptionId, providerId, location, id);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
 *
 * @summary For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
 * x-ms-original-file: specification/reservations/resource-manager/Microsoft.Capacity/stable/2020-10-25/examples/getQuotaRequestStatusInProgress.json
 */
function quotaRequestInProgress() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const providerId = "Microsoft.Compute";
        const location = "eastus";
        const id = "2B5C8515-37D8-4B6A-879B-CD641A2CF605";
        const credential = new DefaultAzureCredential();
        const client = new AzureReservationAPI(credential);
        const result = yield client.quotaRequestStatus.get(subscriptionId, providerId, location, id);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
 *
 * @summary For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
 * x-ms-original-file: specification/reservations/resource-manager/Microsoft.Capacity/stable/2020-10-25/examples/getQuotaRequestStatusById.json
 */
function quotaRequestStatus() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const providerId = "Microsoft.Compute";
        const location = "eastus";
        const id = "2B5C8515-37D8-4B6A-879B-CD641A2CF605";
        const credential = new DefaultAzureCredential();
        const client = new AzureReservationAPI(credential);
        const result = yield client.quotaRequestStatus.get(subscriptionId, providerId, location, id);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        quotaRequestFailed();
        quotaRequestInProgress();
        quotaRequestStatus();
    });
}
main().catch(console.error);
//# sourceMappingURL=quotaRequestStatusGetSample.js.map