import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Reservation, ReservationOrder, Operation, CalculateRefund, Return, CalculateExchange, Exchange, Quota, QuotaRequestStatus } from "./operationsInterfaces";
import { AzureReservationAPIOptionalParams, Catalog, GetCatalogOptionalParams, GetAppliedReservationListOptionalParams, GetAppliedReservationListResponse } from "./models";
export declare class AzureReservationAPI extends coreClient.ServiceClient {
    $host: string;
    /**
     * Initializes a new instance of the AzureReservationAPI class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, options?: AzureReservationAPIOptionalParams);
    /**
     * Get the regions and skus that are available for RI purchase for the specified Azure subscription.
     * @param subscriptionId Id of the subscription
     * @param options The options parameters.
     */
    listCatalog(subscriptionId: string, options?: GetCatalogOptionalParams): PagedAsyncIterableIterator<Catalog>;
    private getCatalogPagingPage;
    private getCatalogPagingAll;
    /**
     * Get the regions and skus that are available for RI purchase for the specified Azure subscription.
     * @param subscriptionId Id of the subscription
     * @param options The options parameters.
     */
    private _getCatalog;
    /**
     * Get applicable `Reservation`s that are applied to this subscription or a resource group under this
     * subscription.
     * @param subscriptionId Id of the subscription
     * @param options The options parameters.
     */
    getAppliedReservationList(subscriptionId: string, options?: GetAppliedReservationListOptionalParams): Promise<GetAppliedReservationListResponse>;
    /**
     * GetCatalogNext
     * @param subscriptionId Id of the subscription
     * @param nextLink The nextLink from the previous successful call to the GetCatalog method.
     * @param options The options parameters.
     */
    private _getCatalogNext;
    reservation: Reservation;
    reservationOrder: ReservationOrder;
    operation: Operation;
    calculateRefund: CalculateRefund;
    return: Return;
    calculateExchange: CalculateExchange;
    exchange: Exchange;
    quota: Quota;
    quotaRequestStatus: QuotaRequestStatus;
}
//# sourceMappingURL=azureReservationAPI.d.ts.map