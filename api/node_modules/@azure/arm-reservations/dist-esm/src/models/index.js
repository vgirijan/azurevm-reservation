/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link ErrorResponseCode} that the service accepts. */
export var KnownErrorResponseCode;
(function (KnownErrorResponseCode) {
    /** NotSpecified */
    KnownErrorResponseCode["NotSpecified"] = "NotSpecified";
    /** InternalServerError */
    KnownErrorResponseCode["InternalServerError"] = "InternalServerError";
    /** ServerTimeout */
    KnownErrorResponseCode["ServerTimeout"] = "ServerTimeout";
    /** AuthorizationFailed */
    KnownErrorResponseCode["AuthorizationFailed"] = "AuthorizationFailed";
    /** BadRequest */
    KnownErrorResponseCode["BadRequest"] = "BadRequest";
    /** ClientCertificateThumbprintNotSet */
    KnownErrorResponseCode["ClientCertificateThumbprintNotSet"] = "ClientCertificateThumbprintNotSet";
    /** InvalidRequestContent */
    KnownErrorResponseCode["InvalidRequestContent"] = "InvalidRequestContent";
    /** OperationFailed */
    KnownErrorResponseCode["OperationFailed"] = "OperationFailed";
    /** HttpMethodNotSupported */
    KnownErrorResponseCode["HttpMethodNotSupported"] = "HttpMethodNotSupported";
    /** InvalidRequestUri */
    KnownErrorResponseCode["InvalidRequestUri"] = "InvalidRequestUri";
    /** MissingTenantId */
    KnownErrorResponseCode["MissingTenantId"] = "MissingTenantId";
    /** InvalidTenantId */
    KnownErrorResponseCode["InvalidTenantId"] = "InvalidTenantId";
    /** InvalidReservationOrderId */
    KnownErrorResponseCode["InvalidReservationOrderId"] = "InvalidReservationOrderId";
    /** InvalidReservationId */
    KnownErrorResponseCode["InvalidReservationId"] = "InvalidReservationId";
    /** ReservationIdNotInReservationOrder */
    KnownErrorResponseCode["ReservationIdNotInReservationOrder"] = "ReservationIdNotInReservationOrder";
    /** ReservationOrderNotFound */
    KnownErrorResponseCode["ReservationOrderNotFound"] = "ReservationOrderNotFound";
    /** InvalidSubscriptionId */
    KnownErrorResponseCode["InvalidSubscriptionId"] = "InvalidSubscriptionId";
    /** InvalidAccessToken */
    KnownErrorResponseCode["InvalidAccessToken"] = "InvalidAccessToken";
    /** InvalidLocationId */
    KnownErrorResponseCode["InvalidLocationId"] = "InvalidLocationId";
    /** UnauthenticatedRequestsThrottled */
    KnownErrorResponseCode["UnauthenticatedRequestsThrottled"] = "UnauthenticatedRequestsThrottled";
    /** InvalidHealthCheckType */
    KnownErrorResponseCode["InvalidHealthCheckType"] = "InvalidHealthCheckType";
    /** Forbidden */
    KnownErrorResponseCode["Forbidden"] = "Forbidden";
    /** BillingScopeIdCannotBeChanged */
    KnownErrorResponseCode["BillingScopeIdCannotBeChanged"] = "BillingScopeIdCannotBeChanged";
    /** AppliedScopesNotAssociatedWithCommerceAccount */
    KnownErrorResponseCode["AppliedScopesNotAssociatedWithCommerceAccount"] = "AppliedScopesNotAssociatedWithCommerceAccount";
    /** PatchValuesSameAsExisting */
    KnownErrorResponseCode["PatchValuesSameAsExisting"] = "PatchValuesSameAsExisting";
    /** RoleAssignmentCreationFailed */
    KnownErrorResponseCode["RoleAssignmentCreationFailed"] = "RoleAssignmentCreationFailed";
    /** ReservationOrderCreationFailed */
    KnownErrorResponseCode["ReservationOrderCreationFailed"] = "ReservationOrderCreationFailed";
    /** ReservationOrderNotEnabled */
    KnownErrorResponseCode["ReservationOrderNotEnabled"] = "ReservationOrderNotEnabled";
    /** CapacityUpdateScopesFailed */
    KnownErrorResponseCode["CapacityUpdateScopesFailed"] = "CapacityUpdateScopesFailed";
    /** UnsupportedReservationTerm */
    KnownErrorResponseCode["UnsupportedReservationTerm"] = "UnsupportedReservationTerm";
    /** ReservationOrderIdAlreadyExists */
    KnownErrorResponseCode["ReservationOrderIdAlreadyExists"] = "ReservationOrderIdAlreadyExists";
    /** RiskCheckFailed */
    KnownErrorResponseCode["RiskCheckFailed"] = "RiskCheckFailed";
    /** CreateQuoteFailed */
    KnownErrorResponseCode["CreateQuoteFailed"] = "CreateQuoteFailed";
    /** ActivateQuoteFailed */
    KnownErrorResponseCode["ActivateQuoteFailed"] = "ActivateQuoteFailed";
    /** NonsupportedAccountId */
    KnownErrorResponseCode["NonsupportedAccountId"] = "NonsupportedAccountId";
    /** PaymentInstrumentNotFound */
    KnownErrorResponseCode["PaymentInstrumentNotFound"] = "PaymentInstrumentNotFound";
    /** MissingAppliedScopesForSingle */
    KnownErrorResponseCode["MissingAppliedScopesForSingle"] = "MissingAppliedScopesForSingle";
    /** NoValidReservationsToReRate */
    KnownErrorResponseCode["NoValidReservationsToReRate"] = "NoValidReservationsToReRate";
    /** ReRateOnlyAllowedForEA */
    KnownErrorResponseCode["ReRateOnlyAllowedForEA"] = "ReRateOnlyAllowedForEA";
    /** OperationCannotBePerformedInCurrentState */
    KnownErrorResponseCode["OperationCannotBePerformedInCurrentState"] = "OperationCannotBePerformedInCurrentState";
    /** InvalidSingleAppliedScopesCount */
    KnownErrorResponseCode["InvalidSingleAppliedScopesCount"] = "InvalidSingleAppliedScopesCount";
    /** InvalidFulfillmentRequestParameters */
    KnownErrorResponseCode["InvalidFulfillmentRequestParameters"] = "InvalidFulfillmentRequestParameters";
    /** NotSupportedCountry */
    KnownErrorResponseCode["NotSupportedCountry"] = "NotSupportedCountry";
    /** InvalidRefundQuantity */
    KnownErrorResponseCode["InvalidRefundQuantity"] = "InvalidRefundQuantity";
    /** PurchaseError */
    KnownErrorResponseCode["PurchaseError"] = "PurchaseError";
    /** BillingCustomerInputError */
    KnownErrorResponseCode["BillingCustomerInputError"] = "BillingCustomerInputError";
    /** BillingPaymentInstrumentSoftError */
    KnownErrorResponseCode["BillingPaymentInstrumentSoftError"] = "BillingPaymentInstrumentSoftError";
    /** BillingPaymentInstrumentHardError */
    KnownErrorResponseCode["BillingPaymentInstrumentHardError"] = "BillingPaymentInstrumentHardError";
    /** BillingTransientError */
    KnownErrorResponseCode["BillingTransientError"] = "BillingTransientError";
    /** BillingError */
    KnownErrorResponseCode["BillingError"] = "BillingError";
    /** FulfillmentConfigurationError */
    KnownErrorResponseCode["FulfillmentConfigurationError"] = "FulfillmentConfigurationError";
    /** FulfillmentOutOfStockError */
    KnownErrorResponseCode["FulfillmentOutOfStockError"] = "FulfillmentOutOfStockError";
    /** FulfillmentTransientError */
    KnownErrorResponseCode["FulfillmentTransientError"] = "FulfillmentTransientError";
    /** FulfillmentError */
    KnownErrorResponseCode["FulfillmentError"] = "FulfillmentError";
    /** CalculatePriceFailed */
    KnownErrorResponseCode["CalculatePriceFailed"] = "CalculatePriceFailed";
    /** AppliedScopesSameAsExisting */
    KnownErrorResponseCode["AppliedScopesSameAsExisting"] = "AppliedScopesSameAsExisting";
    /** SelfServiceRefundNotSupported */
    KnownErrorResponseCode["SelfServiceRefundNotSupported"] = "SelfServiceRefundNotSupported";
    /** RefundLimitExceeded */
    KnownErrorResponseCode["RefundLimitExceeded"] = "RefundLimitExceeded";
})(KnownErrorResponseCode || (KnownErrorResponseCode = {}));
/** Known values of {@link ReservationBillingPlan} that the service accepts. */
export var KnownReservationBillingPlan;
(function (KnownReservationBillingPlan) {
    /** Upfront */
    KnownReservationBillingPlan["Upfront"] = "Upfront";
    /** Monthly */
    KnownReservationBillingPlan["Monthly"] = "Monthly";
})(KnownReservationBillingPlan || (KnownReservationBillingPlan = {}));
/** Known values of {@link ReservationTerm} that the service accepts. */
export var KnownReservationTerm;
(function (KnownReservationTerm) {
    /** P1Y */
    KnownReservationTerm["P1Y"] = "P1Y";
    /** P3Y */
    KnownReservationTerm["P3Y"] = "P3Y";
    /** P5Y */
    KnownReservationTerm["P5Y"] = "P5Y";
})(KnownReservationTerm || (KnownReservationTerm = {}));
/** Known values of {@link ReservedResourceType} that the service accepts. */
export var KnownReservedResourceType;
(function (KnownReservedResourceType) {
    /** VirtualMachines */
    KnownReservedResourceType["VirtualMachines"] = "VirtualMachines";
    /** SqlDatabases */
    KnownReservedResourceType["SqlDatabases"] = "SqlDatabases";
    /** SuseLinux */
    KnownReservedResourceType["SuseLinux"] = "SuseLinux";
    /** CosmosDb */
    KnownReservedResourceType["CosmosDb"] = "CosmosDb";
    /** RedHat */
    KnownReservedResourceType["RedHat"] = "RedHat";
    /** SqlDataWarehouse */
    KnownReservedResourceType["SqlDataWarehouse"] = "SqlDataWarehouse";
    /** VMwareCloudSimple */
    KnownReservedResourceType["VMwareCloudSimple"] = "VMwareCloudSimple";
    /** RedHatOsa */
    KnownReservedResourceType["RedHatOsa"] = "RedHatOsa";
    /** Databricks */
    KnownReservedResourceType["Databricks"] = "Databricks";
    /** AppService */
    KnownReservedResourceType["AppService"] = "AppService";
    /** ManagedDisk */
    KnownReservedResourceType["ManagedDisk"] = "ManagedDisk";
    /** BlockBlob */
    KnownReservedResourceType["BlockBlob"] = "BlockBlob";
    /** RedisCache */
    KnownReservedResourceType["RedisCache"] = "RedisCache";
    /** AzureDataExplorer */
    KnownReservedResourceType["AzureDataExplorer"] = "AzureDataExplorer";
    /** MySql */
    KnownReservedResourceType["MySql"] = "MySql";
    /** MariaDb */
    KnownReservedResourceType["MariaDb"] = "MariaDb";
    /** PostgreSql */
    KnownReservedResourceType["PostgreSql"] = "PostgreSql";
    /** DedicatedHost */
    KnownReservedResourceType["DedicatedHost"] = "DedicatedHost";
    /** SapHana */
    KnownReservedResourceType["SapHana"] = "SapHana";
    /** SqlAzureHybridBenefit */
    KnownReservedResourceType["SqlAzureHybridBenefit"] = "SqlAzureHybridBenefit";
    /** AVS */
    KnownReservedResourceType["AVS"] = "AVS";
    /** DataFactory */
    KnownReservedResourceType["DataFactory"] = "DataFactory";
    /** NetAppStorage */
    KnownReservedResourceType["NetAppStorage"] = "NetAppStorage";
    /** AzureFiles */
    KnownReservedResourceType["AzureFiles"] = "AzureFiles";
    /** SqlEdge */
    KnownReservedResourceType["SqlEdge"] = "SqlEdge";
    /** VirtualMachineSoftware */
    KnownReservedResourceType["VirtualMachineSoftware"] = "VirtualMachineSoftware";
})(KnownReservedResourceType || (KnownReservedResourceType = {}));
/** Known values of {@link AppliedScopeType} that the service accepts. */
export var KnownAppliedScopeType;
(function (KnownAppliedScopeType) {
    /** Single */
    KnownAppliedScopeType["Single"] = "Single";
    /** Shared */
    KnownAppliedScopeType["Shared"] = "Shared";
    /** ManagementGroup */
    KnownAppliedScopeType["ManagementGroup"] = "ManagementGroup";
})(KnownAppliedScopeType || (KnownAppliedScopeType = {}));
/** Known values of {@link InstanceFlexibility} that the service accepts. */
export var KnownInstanceFlexibility;
(function (KnownInstanceFlexibility) {
    /** On */
    KnownInstanceFlexibility["On"] = "On";
    /** Off */
    KnownInstanceFlexibility["Off"] = "Off";
})(KnownInstanceFlexibility || (KnownInstanceFlexibility = {}));
/** Known values of {@link PaymentStatus} that the service accepts. */
export var KnownPaymentStatus;
(function (KnownPaymentStatus) {
    /** Succeeded */
    KnownPaymentStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownPaymentStatus["Failed"] = "Failed";
    /** Scheduled */
    KnownPaymentStatus["Scheduled"] = "Scheduled";
    /** Cancelled */
    KnownPaymentStatus["Cancelled"] = "Cancelled";
})(KnownPaymentStatus || (KnownPaymentStatus = {}));
/** Known values of {@link ReservationStatusCode} that the service accepts. */
export var KnownReservationStatusCode;
(function (KnownReservationStatusCode) {
    /** None */
    KnownReservationStatusCode["None"] = "None";
    /** Pending */
    KnownReservationStatusCode["Pending"] = "Pending";
    /** Processing */
    KnownReservationStatusCode["Processing"] = "Processing";
    /** Active */
    KnownReservationStatusCode["Active"] = "Active";
    /** PurchaseError */
    KnownReservationStatusCode["PurchaseError"] = "PurchaseError";
    /** PaymentInstrumentError */
    KnownReservationStatusCode["PaymentInstrumentError"] = "PaymentInstrumentError";
    /** Split */
    KnownReservationStatusCode["Split"] = "Split";
    /** Merged */
    KnownReservationStatusCode["Merged"] = "Merged";
    /** Expired */
    KnownReservationStatusCode["Expired"] = "Expired";
    /** Succeeded */
    KnownReservationStatusCode["Succeeded"] = "Succeeded";
})(KnownReservationStatusCode || (KnownReservationStatusCode = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Creating */
    KnownProvisioningState["Creating"] = "Creating";
    /** PendingResourceHold */
    KnownProvisioningState["PendingResourceHold"] = "PendingResourceHold";
    /** ConfirmedResourceHold */
    KnownProvisioningState["ConfirmedResourceHold"] = "ConfirmedResourceHold";
    /** PendingBilling */
    KnownProvisioningState["PendingBilling"] = "PendingBilling";
    /** ConfirmedBilling */
    KnownProvisioningState["ConfirmedBilling"] = "ConfirmedBilling";
    /** Created */
    KnownProvisioningState["Created"] = "Created";
    /** Succeeded */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Cancelled */
    KnownProvisioningState["Cancelled"] = "Cancelled";
    /** Expired */
    KnownProvisioningState["Expired"] = "Expired";
    /** BillingFailed */
    KnownProvisioningState["BillingFailed"] = "BillingFailed";
    /** Failed */
    KnownProvisioningState["Failed"] = "Failed";
    /** Split */
    KnownProvisioningState["Split"] = "Split";
    /** Merged */
    KnownProvisioningState["Merged"] = "Merged";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link SavingsPlanTerm} that the service accepts. */
export var KnownSavingsPlanTerm;
(function (KnownSavingsPlanTerm) {
    /** P1Y */
    KnownSavingsPlanTerm["P1Y"] = "P1Y";
    /** P3Y */
    KnownSavingsPlanTerm["P3Y"] = "P3Y";
})(KnownSavingsPlanTerm || (KnownSavingsPlanTerm = {}));
/** Known values of {@link BillingPlan} that the service accepts. */
export var KnownBillingPlan;
(function (KnownBillingPlan) {
    /** P1M */
    KnownBillingPlan["P1M"] = "P1M";
})(KnownBillingPlan || (KnownBillingPlan = {}));
/** Known values of {@link CommitmentGrain} that the service accepts. */
export var KnownCommitmentGrain;
(function (KnownCommitmentGrain) {
    /** Hourly */
    KnownCommitmentGrain["Hourly"] = "Hourly";
})(KnownCommitmentGrain || (KnownCommitmentGrain = {}));
/** Known values of {@link CalculateExchangeOperationResultStatus} that the service accepts. */
export var KnownCalculateExchangeOperationResultStatus;
(function (KnownCalculateExchangeOperationResultStatus) {
    /** Succeeded */
    KnownCalculateExchangeOperationResultStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownCalculateExchangeOperationResultStatus["Failed"] = "Failed";
    /** Cancelled */
    KnownCalculateExchangeOperationResultStatus["Cancelled"] = "Cancelled";
    /** Pending */
    KnownCalculateExchangeOperationResultStatus["Pending"] = "Pending";
})(KnownCalculateExchangeOperationResultStatus || (KnownCalculateExchangeOperationResultStatus = {}));
/** Known values of {@link ExchangeOperationResultStatus} that the service accepts. */
export var KnownExchangeOperationResultStatus;
(function (KnownExchangeOperationResultStatus) {
    /** Succeeded */
    KnownExchangeOperationResultStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownExchangeOperationResultStatus["Failed"] = "Failed";
    /** Cancelled */
    KnownExchangeOperationResultStatus["Cancelled"] = "Cancelled";
    /** PendingRefunds */
    KnownExchangeOperationResultStatus["PendingRefunds"] = "PendingRefunds";
    /** PendingPurchases */
    KnownExchangeOperationResultStatus["PendingPurchases"] = "PendingPurchases";
})(KnownExchangeOperationResultStatus || (KnownExchangeOperationResultStatus = {}));
/** Known values of {@link OperationStatus} that the service accepts. */
export var KnownOperationStatus;
(function (KnownOperationStatus) {
    /** Succeeded */
    KnownOperationStatus["Succeeded"] = "Succeeded";
    /** Failed */
    KnownOperationStatus["Failed"] = "Failed";
    /** Cancelled */
    KnownOperationStatus["Cancelled"] = "Cancelled";
    /** Pending */
    KnownOperationStatus["Pending"] = "Pending";
})(KnownOperationStatus || (KnownOperationStatus = {}));
/** Known values of {@link ResourceType} that the service accepts. */
export var KnownResourceType;
(function (KnownResourceType) {
    /** Standard */
    KnownResourceType["Standard"] = "standard";
    /** Dedicated */
    KnownResourceType["Dedicated"] = "dedicated";
    /** LowPriority */
    KnownResourceType["LowPriority"] = "lowPriority";
    /** Shared */
    KnownResourceType["Shared"] = "shared";
    /** ServiceSpecific */
    KnownResourceType["ServiceSpecific"] = "serviceSpecific";
})(KnownResourceType || (KnownResourceType = {}));
/** Known values of {@link QuotaRequestState} that the service accepts. */
export var KnownQuotaRequestState;
(function (KnownQuotaRequestState) {
    /** Accepted */
    KnownQuotaRequestState["Accepted"] = "Accepted";
    /** Invalid */
    KnownQuotaRequestState["Invalid"] = "Invalid";
    /** Succeeded */
    KnownQuotaRequestState["Succeeded"] = "Succeeded";
    /** Failed */
    KnownQuotaRequestState["Failed"] = "Failed";
    /** InProgress */
    KnownQuotaRequestState["InProgress"] = "InProgress";
})(KnownQuotaRequestState || (KnownQuotaRequestState = {}));
/** Known values of {@link Location} that the service accepts. */
export var KnownLocation;
(function (KnownLocation) {
    /** Westus */
    KnownLocation["Westus"] = "westus";
    /** Eastus */
    KnownLocation["Eastus"] = "eastus";
    /** Eastus2 */
    KnownLocation["Eastus2"] = "eastus2";
    /** Northcentralus */
    KnownLocation["Northcentralus"] = "northcentralus";
    /** Westus2 */
    KnownLocation["Westus2"] = "westus2";
    /** Southcentralus */
    KnownLocation["Southcentralus"] = "southcentralus";
    /** Centralus */
    KnownLocation["Centralus"] = "centralus";
    /** Westeurope */
    KnownLocation["Westeurope"] = "westeurope";
    /** Northeurope */
    KnownLocation["Northeurope"] = "northeurope";
    /** Eastasia */
    KnownLocation["Eastasia"] = "eastasia";
    /** Southeastasia */
    KnownLocation["Southeastasia"] = "southeastasia";
    /** Japaneast */
    KnownLocation["Japaneast"] = "japaneast";
    /** Japanwest */
    KnownLocation["Japanwest"] = "japanwest";
    /** Brazilsouth */
    KnownLocation["Brazilsouth"] = "brazilsouth";
    /** Australiaeast */
    KnownLocation["Australiaeast"] = "australiaeast";
    /** Australiasoutheast */
    KnownLocation["Australiasoutheast"] = "australiasoutheast";
    /** Southindia */
    KnownLocation["Southindia"] = "southindia";
    /** Westindia */
    KnownLocation["Westindia"] = "westindia";
    /** Centralindia */
    KnownLocation["Centralindia"] = "centralindia";
    /** Canadacentral */
    KnownLocation["Canadacentral"] = "canadacentral";
    /** Canadaeast */
    KnownLocation["Canadaeast"] = "canadaeast";
    /** Uksouth */
    KnownLocation["Uksouth"] = "uksouth";
    /** Westcentralus */
    KnownLocation["Westcentralus"] = "westcentralus";
    /** Ukwest */
    KnownLocation["Ukwest"] = "ukwest";
})(KnownLocation || (KnownLocation = {}));
/** Known values of {@link DisplayProvisioningState} that the service accepts. */
export var KnownDisplayProvisioningState;
(function (KnownDisplayProvisioningState) {
    /** Succeeded */
    KnownDisplayProvisioningState["Succeeded"] = "Succeeded";
    /** Expiring */
    KnownDisplayProvisioningState["Expiring"] = "Expiring";
    /** Expired */
    KnownDisplayProvisioningState["Expired"] = "Expired";
    /** Pending */
    KnownDisplayProvisioningState["Pending"] = "Pending";
    /** Processing */
    KnownDisplayProvisioningState["Processing"] = "Processing";
    /** Cancelled */
    KnownDisplayProvisioningState["Cancelled"] = "Cancelled";
    /** Failed */
    KnownDisplayProvisioningState["Failed"] = "Failed";
    /** Warning */
    KnownDisplayProvisioningState["Warning"] = "Warning";
    /** NoBenefit */
    KnownDisplayProvisioningState["NoBenefit"] = "NoBenefit";
})(KnownDisplayProvisioningState || (KnownDisplayProvisioningState = {}));
/** Known values of {@link UserFriendlyAppliedScopeType} that the service accepts. */
export var KnownUserFriendlyAppliedScopeType;
(function (KnownUserFriendlyAppliedScopeType) {
    /** None */
    KnownUserFriendlyAppliedScopeType["None"] = "None";
    /** Shared */
    KnownUserFriendlyAppliedScopeType["Shared"] = "Shared";
    /** Single */
    KnownUserFriendlyAppliedScopeType["Single"] = "Single";
    /** ResourceGroup */
    KnownUserFriendlyAppliedScopeType["ResourceGroup"] = "ResourceGroup";
    /** ManagementGroup */
    KnownUserFriendlyAppliedScopeType["ManagementGroup"] = "ManagementGroup";
})(KnownUserFriendlyAppliedScopeType || (KnownUserFriendlyAppliedScopeType = {}));
/** Known values of {@link UserFriendlyRenewState} that the service accepts. */
export var KnownUserFriendlyRenewState;
(function (KnownUserFriendlyRenewState) {
    /** On */
    KnownUserFriendlyRenewState["On"] = "On";
    /** Off */
    KnownUserFriendlyRenewState["Off"] = "Off";
    /** Renewed */
    KnownUserFriendlyRenewState["Renewed"] = "Renewed";
    /** NotRenewed */
    KnownUserFriendlyRenewState["NotRenewed"] = "NotRenewed";
    /** NotApplicable */
    KnownUserFriendlyRenewState["NotApplicable"] = "NotApplicable";
})(KnownUserFriendlyRenewState || (KnownUserFriendlyRenewState = {}));
//# sourceMappingURL=index.js.map