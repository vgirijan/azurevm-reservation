import { Exchange } from "../operationsInterfaces";
import { AzureReservationAPI } from "../azureReservationAPI";
import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { ExchangeRequest, ExchangePostOptionalParams, ExchangePostResponse } from "../models";
/** Class containing Exchange operations. */
export declare class ExchangeImpl implements Exchange {
    private readonly client;
    /**
     * Initialize a new instance of the class Exchange class.
     * @param client Reference to the service client
     */
    constructor(client: AzureReservationAPI);
    /**
     * Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
     *
     * @param body Request containing the refunds and purchases that need to be executed.
     * @param options The options parameters.
     */
    beginPost(body: ExchangeRequest, options?: ExchangePostOptionalParams): Promise<SimplePollerLike<OperationState<ExchangePostResponse>, ExchangePostResponse>>;
    /**
     * Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
     *
     * @param body Request containing the refunds and purchases that need to be executed.
     * @param options The options parameters.
     */
    beginPostAndWait(body: ExchangeRequest, options?: ExchangePostOptionalParams): Promise<ExchangePostResponse>;
}
//# sourceMappingURL=exchange.d.ts.map