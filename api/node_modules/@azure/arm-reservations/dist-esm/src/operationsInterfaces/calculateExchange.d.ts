import { SimplePollerLike, OperationState } from "@azure/core-lro";
import { CalculateExchangeRequest, CalculateExchangePostOptionalParams, CalculateExchangePostResponse } from "../models";
/** Interface representing a CalculateExchange. */
export interface CalculateExchange {
    /**
     * Calculates price for exchanging `Reservations` if there are no policy errors.
     *
     * @param body Request containing purchases and refunds that need to be executed.
     * @param options The options parameters.
     */
    beginPost(body: CalculateExchangeRequest, options?: CalculateExchangePostOptionalParams): Promise<SimplePollerLike<OperationState<CalculateExchangePostResponse>, CalculateExchangePostResponse>>;
    /**
     * Calculates price for exchanging `Reservations` if there are no policy errors.
     *
     * @param body Request containing purchases and refunds that need to be executed.
     * @param options The options parameters.
     */
    beginPostAndWait(body: CalculateExchangeRequest, options?: CalculateExchangePostOptionalParams): Promise<CalculateExchangePostResponse>;
}
//# sourceMappingURL=calculateExchange.d.ts.map