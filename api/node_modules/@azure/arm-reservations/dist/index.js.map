{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/lroImpl.ts","../src/operations/reservation.ts","../src/operations/reservationOrder.ts","../src/operations/operation.ts","../src/operations/calculateRefund.ts","../src/operations/return.ts","../src/operations/calculateExchange.ts","../src/operations/exchange.ts","../src/operations/quota.ts","../src/operations/quotaRequestStatus.ts","../src/azureReservationAPI.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Available scope */\nexport interface AvailableScopeRequest {\n  /** Available scope request properties */\n  properties?: AvailableScopeRequestProperties;\n}\n\n/** Available scope request properties */\nexport interface AvailableScopeRequestProperties {\n  scopes?: string[];\n}\n\n/** The response of available scope api containing scopes and their eligibilities. */\nexport interface AvailableScopeProperties {\n  /** The scopes checked by the available scope api. */\n  properties?: SubscriptionScopeProperties;\n}\n\n/** The scopes checked by the available scope api. */\nexport interface SubscriptionScopeProperties {\n  scopes?: ScopeProperties[];\n}\n\n/** The scope and whether it is valid. */\nexport interface ScopeProperties {\n  scope?: string;\n  valid?: boolean;\n}\n\n/** Error information */\nexport interface ErrorModel {\n  /** Extended error information including error code and error message */\n  error?: ExtendedErrorInfo;\n}\n\n/** Extended error information including error code and error message */\nexport interface ExtendedErrorInfo {\n  /** Error code describing the reason that service is not able to process the incoming request */\n  code?: ErrorResponseCode;\n  message?: string;\n}\n\n/** The list of catalogs and pagination information. */\nexport interface CatalogsResult {\n  /**\n   * The list of catalogs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Catalog[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n  /** The total amount of catalog items. */\n  totalItems?: number;\n}\n\n/** Product details of a type of resource. */\nexport interface Catalog {\n  /**\n   * The type of resource the sku applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The name of sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The billing plan options available for this sku. */\n  billingPlans?: { [propertyName: string]: ReservationBillingPlan[] };\n  /**\n   * Available reservation terms for this resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly terms?: ReservationTerm[];\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly locations?: string[];\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly skuProperties?: SkuProperty[];\n  /**\n   * Pricing information about the sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly msrp?: CatalogMsrp;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly restrictions?: SkuRestriction[];\n  /**\n   * The tier of this sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n  /**\n   * The size of this sku\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly capabilities?: SkuCapability[];\n}\n\n/** Property of a sku. */\nexport interface SkuProperty {\n  /** An invariant to describe the feature. */\n  name?: string;\n  /** An invariant if the feature is measured by quantity. */\n  value?: string;\n}\n\n/** Pricing information about the sku */\nexport interface CatalogMsrp {\n  /** Amount in pricing currency. Tax not included. */\n  p1Y?: Price;\n  /** Amount in pricing currency. Tax not included. */\n  p3Y?: Price;\n  /** Amount in pricing currency. Tax not included. */\n  p5Y?: Price;\n}\n\n/** Pricing information containing the amount and the currency code */\nexport interface Price {\n  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */\n  currencyCode?: string;\n  amount?: number;\n}\n\n/** Restriction of a sku. */\nexport interface SkuRestriction {\n  /** The type of restrictions. */\n  type?: string;\n  /** The value of restrictions. If the restriction type is set to location. This would be different locations where the sku is restricted. */\n  values?: string[];\n  /** The reason for restriction. */\n  reasonCode?: string;\n}\n\n/** Capability of a sku. */\nexport interface SkuCapability {\n  /** An invariant to describe the feature. */\n  name?: string;\n  /** An invariant if the feature is measured by quantity. */\n  value?: string;\n}\n\n/** The response for applied reservations api */\nexport interface AppliedReservations {\n  /**\n   * Identifier of the applied reservations\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Name of resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Type of resource. \"Microsoft.Capacity/AppliedReservations\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Paginated list of applied reservations */\n  reservationOrderIds?: AppliedReservationList;\n}\n\n/** Paginated list of applied reservations */\nexport interface AppliedReservationList {\n  value?: string[];\n  /** Url to get the next page of reservations */\n  nextLink?: string;\n}\n\n/** The request for reservation purchase */\nexport interface PurchaseRequest {\n  /** The name of sku */\n  sku?: SkuName;\n  /** The Azure region where the reserved resource lives. */\n  location?: string;\n  /** The type of the resource that is being reserved. */\n  reservedResourceType?: ReservedResourceType;\n  /** Subscription that will be charged for purchasing reservation or savings plan */\n  billingScopeId?: string;\n  /** Represent the term of reservation. */\n  term?: ReservationTerm;\n  /** Represent the billing plans. */\n  billingPlan?: ReservationBillingPlan;\n  /** Quantity of the skus that are part of the reservation. */\n  quantity?: number;\n  /** Friendly name of the reservation */\n  displayName?: string;\n  /** Type of the Applied Scope. */\n  appliedScopeType?: AppliedScopeType;\n  /** List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType. */\n  appliedScopes?: string[];\n  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */\n  appliedScopeProperties?: AppliedScopeProperties;\n  /** Setting this to true will automatically purchase a new reservation on the expiration date time. */\n  renew?: boolean;\n  /** Properties specific to each reserved resource type. Not required if not applicable. */\n  reservedResourceProperties?: PurchaseRequestPropertiesReservedResourceProperties;\n  /** This is the date-time when the Azure hybrid benefit needs to be reviewed. */\n  reviewDateTime?: Date;\n}\n\n/** The name of sku */\nexport interface SkuName {\n  name?: string;\n}\n\n/** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */\nexport interface AppliedScopeProperties {\n  /** Tenant ID where the savings plan should apply benefit. */\n  tenantId?: string;\n  /** Fully-qualified identifier of the management group where the benefit must be applied. */\n  managementGroupId?: string;\n  /** Fully-qualified identifier of the subscription. */\n  subscriptionId?: string;\n  /** Fully-qualified identifier of the resource group. */\n  resourceGroupId?: string;\n  /** Display name */\n  displayName?: string;\n}\n\n/** Properties specific to each reserved resource type. Not required if not applicable. */\nexport interface PurchaseRequestPropertiesReservedResourceProperties {\n  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type. */\n  instanceFlexibility?: InstanceFlexibility;\n}\n\n/** The response of calculate price for reservation. */\nexport interface CalculatePriceResponse {\n  /** Properties for calculate price response */\n  properties?: CalculatePriceResponseProperties;\n}\n\n/** Properties for calculate price response */\nexport interface CalculatePriceResponseProperties {\n  /** Currency and amount that customer will be charged in customer's local currency. Tax is not included. */\n  billingCurrencyTotal?: CalculatePriceResponsePropertiesBillingCurrencyTotal;\n  /** Net total amount in pricing currency. */\n  netTotal?: number;\n  /** Tax amount in pricing currency. */\n  taxTotal?: number;\n  /** Total amount in pricing currency. */\n  grandTotal?: number;\n  /** Whether or not tax is included in grand total */\n  isTaxIncluded?: boolean;\n  /** True if billing is managed by Microsoft Partner. Used only for CSP accounts. */\n  isBillingPartnerManaged?: boolean;\n  /** GUID that represents reservation order that can be placed after calculating price. */\n  reservationOrderId?: string;\n  /** Title of sku that is being purchased. */\n  skuTitle?: string;\n  /** Description of sku that is being purchased. */\n  skuDescription?: string;\n  /** Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. */\n  pricingCurrencyTotal?: CalculatePriceResponsePropertiesPricingCurrencyTotal;\n  paymentSchedule?: PaymentDetail[];\n}\n\n/** Currency and amount that customer will be charged in customer's local currency. Tax is not included. */\nexport interface CalculatePriceResponsePropertiesBillingCurrencyTotal {\n  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */\n  currencyCode?: string;\n  /** Amount in pricing currency. Tax is not included. */\n  amount?: number;\n}\n\n/** Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. */\nexport interface CalculatePriceResponsePropertiesPricingCurrencyTotal {\n  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */\n  currencyCode?: string;\n  amount?: number;\n}\n\n/** Information about payment related to a reservation order. */\nexport interface PaymentDetail {\n  /** Date when the payment needs to be done. */\n  dueDate?: Date;\n  /** Date when the transaction is completed. Is null when it is scheduled. */\n  paymentDate?: Date;\n  /** Amount in pricing currency. Tax not included. */\n  pricingCurrencyTotal?: Price;\n  /** Amount charged in Billing currency. Tax not included. Is null for future payments */\n  billingCurrencyTotal?: Price;\n  /** Shows the Account that is charged for this payment. */\n  billingAccount?: string;\n  /** Describes whether the payment is completed, failed, cancelled or scheduled in the future. */\n  status?: PaymentStatus;\n  extendedStatusInfo?: ExtendedStatusInfo;\n}\n\nexport interface ExtendedStatusInfo {\n  statusCode?: ReservationStatusCode;\n  /** The message giving detailed information about the status code. */\n  message?: string;\n}\n\n/** List of `ReservationOrder`s */\nexport interface ReservationOrderList {\n  value?: ReservationOrderResponse[];\n  /** Url to get the next page of reservationOrders. */\n  nextLink?: string;\n}\n\n/** Details of a reservation order being returned. */\nexport interface ReservationOrderResponse {\n  etag?: number;\n  /**\n   * Identifier of the reservation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Name of the reservation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Type of resource. \"Microsoft.Capacity/reservations\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Friendly name for user to easily identified the reservation. */\n  displayName?: string;\n  /** This is the DateTime when the reservation was initially requested for purchase. */\n  requestDateTime?: Date;\n  /** This is the DateTime when the reservation was created. */\n  createdDateTime?: Date;\n  /** This is the date when the reservation will expire. */\n  expiryDate?: Date;\n  /** This is the date-time when the reservation will expire. */\n  expiryDateTime?: Date;\n  /** This is the DateTime when the reservation benefit started. */\n  benefitStartTime?: Date;\n  /** Total Quantity of the skus purchased in the reservation. */\n  originalQuantity?: number;\n  /** Represent the term of reservation. */\n  term?: ReservationTerm;\n  /** Current state of the reservation. */\n  provisioningState?: ProvisioningState;\n  /** Represent the billing plans. */\n  billingPlan?: ReservationBillingPlan;\n  /** Information describing the type of billing plan for this reservation. */\n  planInformation?: ReservationOrderBillingPlanInformation;\n  reservations?: ReservationResponse[];\n  /** This is the date-time when the Azure Hybrid Benefit needs to be reviewed. */\n  reviewDateTime?: Date;\n}\n\n/** Information describing the type of billing plan for this reservation. */\nexport interface ReservationOrderBillingPlanInformation {\n  /** Amount of money to be paid for the Order. Tax is not included. */\n  pricingCurrencyTotal?: Price;\n  /** Date when the billing plan has started. */\n  startDate?: Date;\n  /** For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off. */\n  nextPaymentDueDate?: Date;\n  transactions?: PaymentDetail[];\n}\n\n/** The properties of the reservations */\nexport interface ReservationsProperties {\n  /** The type of the resource that is being reserved. */\n  reservedResourceType?: ReservedResourceType;\n  /** Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size flexibility. */\n  instanceFlexibility?: InstanceFlexibility;\n  /** Friendly name for user to easily identify the reservation */\n  displayName?: string;\n  /** The list of applied scopes */\n  appliedScopes?: string[];\n  /** The applied scope type */\n  appliedScopeType?: AppliedScopeType;\n  /** Indicates if the reservation is archived */\n  archived?: boolean;\n  /** Capabilities of the reservation */\n  capabilities?: string;\n  /** Quantity of the skus that are part of the reservation. */\n  quantity?: number;\n  /** Current state of the reservation. */\n  provisioningState?: ProvisioningState;\n  /** DateTime of the reservation starting when this version is effective from. */\n  effectiveDateTime?: Date;\n  /** This is the DateTime when the reservation benefit started. */\n  benefitStartTime?: Date;\n  /**\n   * DateTime of the last time the reservation was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdatedDateTime?: Date;\n  /** This is the date when the reservation will expire. */\n  expiryDate?: Date;\n  /** This is the date-time when the reservation will expire. */\n  expiryDateTime?: Date;\n  /** This is the date-time when the Azure Hybrid Benefit needs to be reviewed. */\n  reviewDateTime?: Date;\n  /** Description of the sku in english. */\n  skuDescription?: string;\n  /** The message giving detailed information about the status code. */\n  extendedStatusInfo?: ExtendedStatusInfo;\n  /** The billing plan options available for this sku. */\n  billingPlan?: ReservationBillingPlan;\n  /**\n   * The provisioning state of the reservation for display, e.g. Succeeded\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayProvisioningState?: string;\n  /**\n   * The provisioning sub-state of the reservation, e.g. Succeeded\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningSubState?: string;\n  /** This is the date when the reservation was purchased. */\n  purchaseDate?: Date;\n  /** This is the date-time when the reservation was purchased. */\n  purchaseDateTime?: Date;\n  /** Properties of reservation split */\n  splitProperties?: ReservationSplitProperties;\n  /** Properties of reservation merge */\n  mergeProperties?: ReservationMergeProperties;\n  /** Properties of reservation swap */\n  swapProperties?: ReservationSwapProperties;\n  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */\n  appliedScopeProperties?: AppliedScopeProperties;\n  /** Subscription that will be charged for purchasing reservation or savings plan */\n  billingScopeId?: string;\n  /** Setting this to true will automatically purchase a new reservation on the expiration date time. */\n  renew?: boolean;\n  /** Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}. */\n  renewSource?: string;\n  /** Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}. */\n  renewDestination?: string;\n  /** The renew properties for a reservation. */\n  renewProperties?: RenewPropertiesResponse;\n  /** Represent the term of reservation. */\n  term?: ReservationTerm;\n  /**\n   * The applied scope type of the reservation for display, e.g. Shared\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userFriendlyAppliedScopeType?: string;\n  /**\n   * The renew state of the reservation for display, e.g. On\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userFriendlyRenewState?: string;\n  /**\n   * Reservation utilization\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly utilization?: ReservationsPropertiesUtilization;\n}\n\n/** Properties of reservation split */\nexport interface ReservationSplitProperties {\n  /** List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  splitDestinations?: string[];\n  /** Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  splitSource?: string;\n}\n\n/** Properties of reservation merge */\nexport interface ReservationMergeProperties {\n  /** Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  mergeDestination?: string;\n  /** Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  mergeSources?: string[];\n}\n\n/** Properties of reservation swap */\nexport interface ReservationSwapProperties {\n  /** Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  swapSource?: string;\n  /** Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  swapDestination?: string;\n}\n\n/** The renew properties for a reservation. */\nexport interface RenewPropertiesResponse {\n  /** The request for reservation purchase */\n  purchaseProperties?: PurchaseRequest;\n  /** Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry. */\n  pricingCurrencyTotal?: RenewPropertiesResponsePricingCurrencyTotal;\n  /** Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included. */\n  billingCurrencyTotal?: RenewPropertiesResponseBillingCurrencyTotal;\n}\n\n/** Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry. */\nexport interface RenewPropertiesResponsePricingCurrencyTotal {\n  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */\n  currencyCode?: string;\n  amount?: number;\n}\n\n/** Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included. */\nexport interface RenewPropertiesResponseBillingCurrencyTotal {\n  /** The ISO 4217 3-letter currency code for the currency used by this purchase record. */\n  currencyCode?: string;\n  amount?: number;\n}\n\n/** Reservation utilization */\nexport interface ReservationsPropertiesUtilization {\n  /**\n   * last 7 day utilization trend for a reservation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trend?: string;\n  /** The array of aggregates of a reservation's utilization */\n  aggregates?: ReservationUtilizationAggregates[];\n}\n\n/** The aggregate values of reservation utilization */\nexport interface ReservationUtilizationAggregates {\n  /**\n   * The grain of the aggregate\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly grain?: number;\n  /**\n   * The grain unit of the aggregate\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly grainUnit?: string;\n  /**\n   * The aggregate value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n  /**\n   * The aggregate value unit\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly valueUnit?: string;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** The request for reservation split */\nexport interface SplitRequest {\n  /** List of the quantities in the new reservations to create. */\n  quantities?: number[];\n  /** Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  reservationId?: string;\n}\n\n/** The request for reservation merge */\nexport interface MergeRequest {\n  /** Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId} */\n  sources?: string[];\n}\n\n/** List of `Reservation`s */\nexport interface ReservationList {\n  value?: ReservationResponse[];\n  /** Url to get the next page of reservations. */\n  nextLink?: string;\n}\n\n/** The request for reservation patch */\nexport interface Patch {\n  /** Type of the Applied Scope. */\n  appliedScopeType?: AppliedScopeType;\n  /** List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType. */\n  appliedScopes?: string[];\n  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */\n  appliedScopeProperties?: AppliedScopeProperties;\n  /** Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type. */\n  instanceFlexibility?: InstanceFlexibility;\n  /** Display name of the reservation */\n  name?: string;\n  /** Setting this to true will automatically purchase a new reservation on the expiration date time. */\n  renew?: boolean;\n  renewProperties?: PatchPropertiesRenewProperties;\n  /** This is the date-time when the Azure hybrid benefit needs to be reviewed. */\n  reviewDateTime?: Date;\n}\n\nexport interface PatchPropertiesRenewProperties {\n  /** The request for reservation purchase */\n  purchaseProperties?: PurchaseRequest;\n}\n\n/** Paginated list of operations */\nexport interface OperationList {\n  value?: OperationResponse[];\n  /** Url to get the next page of items. */\n  nextLink?: string;\n}\n\n/** The response containing operation information */\nexport interface OperationResponse {\n  /** Name of the operation */\n  name?: string;\n  /** Indicates whether the operation is a data action */\n  isDataAction?: boolean;\n  /** Display of the operation */\n  display?: OperationDisplay;\n  /** Origin of the operation */\n  origin?: string;\n  /** Properties of the operation */\n  properties?: Record<string, unknown>;\n}\n\n/** Information about an operation */\nexport interface OperationDisplay {\n  provider?: string;\n  resource?: string;\n  operation?: string;\n  description?: string;\n}\n\n/** Request containing information needed for calculating refund. */\nexport interface CalculateRefundRequest {\n  /** Fully qualified identifier of the reservation order being returned */\n  id?: string;\n  /** Properties needed for calculate refund including the scope and the reservation to be returned. */\n  properties?: CalculateRefundRequestProperties;\n}\n\n/** Properties needed for calculate refund including the scope and the reservation to be returned. */\nexport interface CalculateRefundRequestProperties {\n  /** The scope of the refund, e.g. Reservation */\n  scope?: string;\n  /** Reservation to return */\n  reservationToReturn?: ReservationToReturn;\n}\n\n/** Reservation to return */\nexport interface ReservationToReturn {\n  /** Fully qualified identifier of the reservation being returned */\n  reservationId?: string;\n  /** Quantity to be returned. Must be greater than zero. */\n  quantity?: number;\n}\n\n/** The response of calculate refund containing refund information of reservation */\nexport interface CalculateRefundResponse {\n  /** Fully qualified identifier of the reservation being returned */\n  id?: string;\n  /** The refund properties of reservation */\n  properties?: RefundResponseProperties;\n}\n\n/** The refund properties of reservation */\nexport interface RefundResponseProperties {\n  /** Refund session identifier */\n  sessionId?: string;\n  /** Quantity to be returned */\n  quantity?: number;\n  /** Pricing information containing the amount and the currency code */\n  billingRefundAmount?: Price;\n  /** Pricing information containing the amount and the currency code */\n  pricingRefundAmount?: Price;\n  /** Refund policy result */\n  policyResult?: RefundPolicyResult;\n  /** billing information */\n  billingInformation?: RefundBillingInformation;\n}\n\n/** Refund policy result */\nexport interface RefundPolicyResult {\n  /** Refund policy result property */\n  properties?: RefundPolicyResultProperty;\n}\n\n/** Refund policy result property */\nexport interface RefundPolicyResultProperty {\n  /** Pricing information containing the amount and the currency code */\n  consumedRefundsTotal?: Price;\n  /** Pricing information containing the amount and the currency code */\n  maxRefundLimit?: Price;\n  /** Refund Policy errors */\n  policyErrors?: RefundPolicyError[];\n}\n\n/** error details */\nexport interface RefundPolicyError {\n  /** Error code describing the reason that service is not able to process the incoming request */\n  code?: ErrorResponseCode;\n  message?: string;\n}\n\n/** billing information */\nexport interface RefundBillingInformation {\n  /** Represent the billing plans. */\n  billingPlan?: ReservationBillingPlan;\n  /** The number of completed transactions in this reservation's payment */\n  completedTransactions?: number;\n  /** The number of total transactions in this reservation's payment */\n  totalTransactions?: number;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyTotalPaidAmount?: Price;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyProratedAmount?: Price;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyRemainingCommitmentAmount?: Price;\n}\n\n/** Request containing information needed for returning reservation. */\nexport interface RefundRequest {\n  /** Properties needed for refund request including the session id from calculate refund, the scope, the reservation to be returned and the return reason. */\n  properties?: RefundRequestProperties;\n}\n\n/** Properties needed for refund request including the session id from calculate refund, the scope, the reservation to be returned and the return reason. */\nexport interface RefundRequestProperties {\n  /** SessionId that was returned by CalculateRefund API. */\n  sessionId?: string;\n  /** The scope of the refund, e.g. Reservation */\n  scope?: string;\n  /** Reservation to return */\n  reservationToReturn?: ReservationToReturn;\n  /** The reason of returning the reservation */\n  returnReason?: string;\n}\n\n/** The response of refund request containing refund information of reservation */\nexport interface RefundResponse {\n  /** Fully qualified identifier of the reservation being returned */\n  id?: string;\n  /** The refund properties of reservation */\n  properties?: RefundResponseProperties;\n}\n\n/** Calculate exchange request */\nexport interface CalculateExchangeRequest {\n  /** Calculate exchange request properties */\n  properties?: CalculateExchangeRequestProperties;\n}\n\n/** Calculate exchange request properties */\nexport interface CalculateExchangeRequestProperties {\n  /** List of reservations that are being purchased in this exchange. */\n  reservationsToPurchase?: PurchaseRequest[];\n  /** List of savings plans that are being purchased in this exchange. */\n  savingsPlansToPurchase?: SavingsPlanPurchaseRequest[];\n  /** List of reservations that are being returned in this exchange. */\n  reservationsToExchange?: ReservationToReturn[];\n}\n\n/** Request body for savings plan purchase */\nexport interface SavingsPlanPurchaseRequest {\n  /** The name of sku */\n  sku?: SkuName;\n  /** Friendly name of the savings plan */\n  displayName?: string;\n  /** Subscription that will be charged for purchasing reservation or savings plan */\n  billingScopeId?: string;\n  /** Represent savings plan term in ISO 8601 format. */\n  term?: SavingsPlanTerm;\n  /** Represents the billing plan in ISO 8601 format. Required only for monthly billing plans. */\n  billingPlan?: BillingPlan;\n  /** Type of the Applied Scope. */\n  appliedScopeType?: AppliedScopeType;\n  /** Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup */\n  appliedScopeProperties?: AppliedScopeProperties;\n  /** Commitment towards the benefit. */\n  commitment?: Commitment;\n}\n\n/** CalculateExchange operation result */\nexport interface CalculateExchangeOperationResultResponse {\n  /** It should match what is used to GET the operation result. */\n  id?: string;\n  /** It must match the last segment of the id field, and will typically be a GUID / system generated value. */\n  name?: string;\n  /** Status of the operation. */\n  status?: CalculateExchangeOperationResultStatus;\n  /** CalculateExchange response properties */\n  properties?: CalculateExchangeResponseProperties;\n  /** Required if status == failed or status == canceled. */\n  error?: OperationResultError;\n}\n\n/** CalculateExchange response properties */\nexport interface CalculateExchangeResponseProperties {\n  /** Exchange session identifier */\n  sessionId?: string;\n  /** Pricing information containing the amount and the currency code */\n  netPayable?: Price;\n  /** Pricing information containing the amount and the currency code */\n  refundsTotal?: Price;\n  /** Pricing information containing the amount and the currency code */\n  purchasesTotal?: Price;\n  /** Details of the reservations being purchased */\n  reservationsToPurchase?: ReservationToPurchaseCalculateExchange[];\n  /** Details of the savings plans being purchased */\n  savingsPlansToPurchase?: SavingsPlanToPurchaseCalculateExchange[];\n  /** Details of the reservations being returned */\n  reservationsToExchange?: ReservationToExchange[];\n  /** Exchange policy errors */\n  policyResult?: ExchangePolicyErrors;\n}\n\n/** Reservation purchase details */\nexport interface ReservationToPurchaseCalculateExchange {\n  /** The request for reservation purchase */\n  properties?: PurchaseRequest;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyTotal?: Price;\n}\n\n/** Savings plan purchase details */\nexport interface SavingsPlanToPurchaseCalculateExchange {\n  /** Request body for savings plan purchase */\n  properties?: SavingsPlanPurchaseRequest;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyTotal?: Price;\n}\n\n/** Reservation refund details */\nexport interface ReservationToExchange {\n  /** Fully qualified id of the reservation being returned. */\n  reservationId?: string;\n  /** Quantity to be returned */\n  quantity?: number;\n  /** Pricing information containing the amount and the currency code */\n  billingRefundAmount?: Price;\n  /** billing information */\n  billingInformation?: BillingInformation;\n}\n\n/** billing information */\nexport interface BillingInformation {\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyTotalPaidAmount?: Price;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyProratedAmount?: Price;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyRemainingCommitmentAmount?: Price;\n}\n\n/** Exchange policy errors */\nexport interface ExchangePolicyErrors {\n  /** Exchange Policy errors */\n  policyErrors?: ExchangePolicyError[];\n}\n\n/** error details */\nexport interface ExchangePolicyError {\n  code?: string;\n  message?: string;\n}\n\n/** Required if status == failed or status == canceled. */\nexport interface OperationResultError {\n  /** Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis. */\n  code?: string;\n  /** Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue. */\n  message?: string;\n}\n\n/** Exchange request */\nexport interface ExchangeRequest {\n  /** Exchange request properties */\n  properties?: ExchangeRequestProperties;\n}\n\n/** Exchange request properties */\nexport interface ExchangeRequestProperties {\n  /** SessionId that was returned by CalculateExchange API. */\n  sessionId?: string;\n}\n\n/** Exchange operation result */\nexport interface ExchangeOperationResultResponse {\n  /** It should match what is used to GET the operation result. */\n  id?: string;\n  /** It must match the last segment of the id field, and will typically be a GUID / system generated value. */\n  name?: string;\n  /** Status of the operation. */\n  status?: ExchangeOperationResultStatus;\n  /** Exchange response properties */\n  properties?: ExchangeResponseProperties;\n  /** Required if status == failed or status == canceled. */\n  error?: OperationResultError;\n}\n\n/** Exchange response properties */\nexport interface ExchangeResponseProperties {\n  /** Exchange session identifier */\n  sessionId?: string;\n  /** Pricing information containing the amount and the currency code */\n  netPayable?: Price;\n  /** Pricing information containing the amount and the currency code */\n  refundsTotal?: Price;\n  /** Pricing information containing the amount and the currency code */\n  purchasesTotal?: Price;\n  /** Details of the reservations being purchased */\n  reservationsToPurchase?: ReservationToPurchaseExchange[];\n  /** Details of the savings plans being purchased */\n  savingsPlansToPurchase?: SavingsPlanToPurchaseExchange[];\n  /** Details of the reservations being returned */\n  reservationsToExchange?: ReservationToReturnForExchange[];\n  /** Exchange policy errors */\n  policyResult?: ExchangePolicyErrors;\n}\n\n/** Reservation purchase details */\nexport interface ReservationToPurchaseExchange {\n  /** Fully qualified id of the reservationOrder being purchased */\n  reservationOrderId?: string;\n  /** Fully qualified id of the reservation being purchased. This value is only guaranteed to be non-null if the purchase is successful. */\n  reservationId?: string;\n  /** The request for reservation purchase */\n  properties?: PurchaseRequest;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyTotal?: Price;\n  /** Status of the individual operation. */\n  status?: OperationStatus;\n}\n\n/** Savings plan purchase details */\nexport interface SavingsPlanToPurchaseExchange {\n  /** Fully qualified id of the savings plan order being purchased */\n  savingsPlanOrderId?: string;\n  /** Fully qualified id of the savings plan being purchased. This value is only guaranteed to be non-null if the purchase is successful. */\n  savingsPlanId?: string;\n  /** Request body for savings plan purchase */\n  properties?: SavingsPlanPurchaseRequest;\n  /** Pricing information containing the amount and the currency code */\n  billingCurrencyTotal?: Price;\n  /** Status of the individual operation. */\n  status?: OperationStatus;\n}\n\n/** Reservation refund details */\nexport interface ReservationToReturnForExchange {\n  /** Fully qualified id of the reservation being returned. */\n  reservationId?: string;\n  /** Quantity to be returned */\n  quantity?: number;\n  /** Pricing information containing the amount and the currency code */\n  billingRefundAmount?: Price;\n  /** billing information */\n  billingInformation?: BillingInformation;\n  /** Status of the individual operation. */\n  status?: OperationStatus;\n}\n\n/** The list of reservations and summary of roll out count of reservations in each state. */\nexport interface ReservationsListResult {\n  /**\n   * The list of reservations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ReservationResponse[];\n  /**\n   * The link (url) to the next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n  /** The roll out count summary of the reservations */\n  summary?: ReservationSummary;\n}\n\n/** The roll up count summary of reservations in each state */\nexport interface ReservationSummary {\n  /**\n   * The number of reservation in Succeeded state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly succeededCount?: number;\n  /**\n   * The number of reservation in Failed state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedCount?: number;\n  /**\n   * The number of reservation in Expiring state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiringCount?: number;\n  /**\n   * The number of reservation in Expired state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiredCount?: number;\n  /**\n   * The number of reservation in Pending state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pendingCount?: number;\n  /**\n   * The number of reservation in Cancelled state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cancelledCount?: number;\n  /**\n   * The number of reservation in Processing state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly processingCount?: number;\n  /**\n   * The number of reservation in Warning state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly warningCount?: number;\n  /**\n   * The number of reservation in NoBenefit state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly noBenefitCount?: number;\n}\n\n/** Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. */\nexport interface ErrorResponse {\n  /** The details of the error. */\n  error?: ErrorDetails;\n}\n\n/** The details of the error. */\nexport interface ErrorDetails {\n  /**\n   * Error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Error message indicating why the operation failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The target of the particular error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n}\n\n/** Request body for change directory of a reservation. */\nexport interface ChangeDirectoryRequest {\n  /** Tenant id GUID that reservation order is to be transferred to */\n  destinationTenantId?: string;\n}\n\n/** Change directory response */\nexport interface ChangeDirectoryResponse {\n  /** Change directory result for reservation order or reservation */\n  reservationOrder?: ChangeDirectoryResult;\n  reservations?: ChangeDirectoryResult[];\n}\n\n/** Change directory result for reservation order or reservation */\nexport interface ChangeDirectoryResult {\n  /** Identifier of the reservation order or reservation */\n  id?: string;\n  /** Name of the reservation order or reservation */\n  name?: string;\n  /** True if change directory operation succeeded on this reservation order or reservation */\n  isSucceeded?: boolean;\n  /** Error reason if operation failed. Null otherwise */\n  error?: string;\n}\n\n/** Quota properties. */\nexport interface CurrentQuotaLimitBase {\n  /**\n   * The quota request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the quota request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Type of resource. \"Microsoft.Capacity/ServiceLimits\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Quota properties for the resource. */\n  properties?: QuotaProperties;\n}\n\n/** Quota properties for the resource. */\nexport interface QuotaProperties {\n  /** Quota properties. */\n  limit?: number;\n  /**\n   * Current usage value for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**  The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation. */\n  unit?: string;\n  /** Name of the resource provide by the resource provider. Use this property for quotaRequests resource operations. */\n  name?: ResourceName;\n  /** The name of the resource type. */\n  resourceType?: ResourceType;\n  /**\n   * The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quotaPeriod?: string;\n  /** Additional properties for the specified resource provider. */\n  properties?: Record<string, unknown>;\n}\n\n/** Resource name provided by the resource provider. Use this property for quotaRequest parameter. */\nexport interface ResourceName {\n  /** Resource name. */\n  value?: string;\n  /**\n   * Resource display localized name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** The API error. */\nexport interface ExceptionResponse {\n  /** The API error details. */\n  error?: ServiceError;\n}\n\n/** The API error details. */\nexport interface ServiceError {\n  /** The error code. */\n  code?: string;\n  /** The error message text. */\n  message?: string;\n  /**\n   * The list of error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ServiceErrorDetail[];\n}\n\n/** The error details. */\nexport interface ServiceErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Response with request ID that the quota request was accepted. */\nexport interface QuotaRequestSubmitResponse201 {\n  /**\n   * The quota request ID. Use the requestId parameter to check the request status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Operation ID\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The details of the quota request status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: QuotaRequestState;\n  /**\n   * A user friendly message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Quota limits. */\nexport interface QuotaLimits {\n  /** List of quotas (service limits). */\n  value?: CurrentQuotaLimitBase[];\n  /** The URI for fetching the next page of quotas (service limits). When no more pages exist, the value is null. */\n  nextLink?: string;\n}\n\n/** Quota request details. */\nexport interface QuotaRequestDetails {\n  /**\n   * Quota request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Quota request name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The quota request status. */\n  provisioningState?: QuotaRequestState;\n  /**\n   * User friendly status message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestSubmitTime?: Date;\n  /** The quotaRequests. */\n  value?: SubRequest[];\n}\n\n/** The details of quota request. */\nexport interface QuotaRequestProperties {\n  /** The quota request status. */\n  provisioningState?: QuotaRequestState;\n  /**\n   * User friendly status message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestSubmitTime?: Date;\n  /** The quotaRequests. */\n  value?: SubRequest[];\n}\n\n/** The sub-request submitted with the quota request. */\nexport interface SubRequest {\n  /**\n   * Quota (resource limit).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /** The resource name. */\n  name?: ResourceName;\n  /**\n   * Resource type for which the quota check was made.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**  The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation. */\n  unit?: string;\n  /** The quota request status. */\n  provisioningState?: QuotaRequestState;\n  /**\n   * User-friendly status message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * Sub request ID for individual request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subRequestId?: string;\n}\n\n/** Quota request details. */\nexport interface QuotaRequestDetailsList {\n  /** The quota requests. */\n  value?: QuotaRequestDetails[];\n  /** The URI to fetch the next page of quota limits. When there are no more pages, this is null. */\n  nextLink?: string;\n}\n\n/** Current quota limits. */\nexport interface CurrentQuotaLimit {\n  /**\n   * The details of the quota request status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: QuotaRequestState;\n  /**\n   * A user friendly message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The quota request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the quota request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Type of resource. \"Microsoft.Capacity/ServiceLimits\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Quota properties for the resource. */\n  properties?: QuotaProperties;\n}\n\n/** Quotas (service limits) in the request response. */\nexport interface QuotaLimitsResponse {\n  /** List of quotas with the quota request status. */\n  value?: CurrentQuotaLimit[];\n  /** The URI for fetching the next page of quota limits. When no more pages exist, the value is null. */\n  nextLink?: string;\n}\n\n/** Quota change requests information. */\nexport interface CreateGenericQuotaRequestParameters {\n  /** Quota change requests. */\n  value?: CurrentQuotaLimitBase[];\n}\n\n/** Response for the quota submission request. */\nexport interface QuotaRequestOneResourceSubmitResponse {\n  /**\n   * The quota request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the quota request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Type of resource. \"Microsoft.Capacity/ServiceLimits\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The quota request status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: QuotaRequestState;\n  /**\n   * User friendly status message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestSubmitTime?: Date;\n  /**\n   * The quota request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idPropertiesId?: string;\n  /**\n   * The name of the quota request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly namePropertiesName?: string;\n  /**\n   * Type of resource. \"Microsoft.Capacity/ServiceLimits\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly typePropertiesType?: string;\n  /** Quota properties for the resource. */\n  properties?: QuotaProperties;\n}\n\n/** Response for the quota submission request. */\nexport interface QuotaRequestSubmitResponse {\n  /**\n   * The quota request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the quota request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** The quota request details. */\n  properties?: QuotaRequestProperties;\n  /**\n   * Type of resource. \"Microsoft.Capacity/serviceLimits\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Commitment towards the benefit. */\nexport interface Commitment extends Price {\n  /** Commitment grain. */\n  grain?: CommitmentGrain;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The definition of the reservation. */\nexport interface ReservationResponse extends ProxyResource {\n  /** The Azure region where the reserved resource lives. */\n  location?: string;\n  etag?: number;\n  /** The sku information associated to this reservation */\n  sku?: SkuName;\n  /** The properties associated to this reservation */\n  properties?: ReservationsProperties;\n  /** Resource Provider type to be reserved. */\n  kind?: \"Microsoft.Compute\";\n}\n\n/** Defines headers for Reservation_split operation. */\nexport interface ReservationSplitHeaders {\n  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */\n  location?: string;\n  /** Clients should wait for the Retry-After interval before polling again */\n  retryAfter?: number;\n}\n\n/** Defines headers for Reservation_merge operation. */\nexport interface ReservationMergeHeaders {\n  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */\n  location?: string;\n  /** Clients should wait for the Retry-After interval before polling again */\n  retryAfter?: number;\n}\n\n/** Defines headers for Reservation_update operation. */\nexport interface ReservationUpdateHeaders {\n  /** URL for checking the ongoing status of the operation. */\n  azureAsyncOperation?: string;\n  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */\n  location?: string;\n  /** Clients should wait for the Retry-After interval before polling again */\n  retryAfter?: number;\n}\n\n/** Defines headers for ReservationOrder_purchase operation. */\nexport interface ReservationOrderPurchaseHeaders {\n  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */\n  location?: string;\n  /** Clients should wait for the Retry-After interval before polling again */\n  retryAfter?: number;\n}\n\n/** Defines headers for Return_post operation. */\nexport interface ReturnPostHeaders {\n  location?: string;\n}\n\n/** Defines headers for CalculateExchange_post operation. */\nexport interface CalculateExchangePostHeaders {\n  /** URL for checking the ongoing status of the operation. */\n  azureAsyncOperation?: string;\n  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */\n  location?: string;\n  /** Clients should wait for the Retry-After interval before polling again */\n  retryAfter?: number;\n}\n\n/** Defines headers for Exchange_post operation. */\nexport interface ExchangePostHeaders {\n  /** URL for checking the ongoing status of the operation. */\n  azureAsyncOperation?: string;\n  /** URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned. */\n  location?: string;\n  /** Clients should wait for the Retry-After interval before polling again */\n  retryAfter?: number;\n}\n\n/** Defines headers for Quota_get operation. */\nexport interface QuotaGetHeaders {\n  /** Current entity state version. It should be treated as opaque and used to make conditional HTTP requests. */\n  eTag?: string;\n}\n\n/** Defines headers for Quota_list operation. */\nexport interface QuotaListHeaders {\n  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */\n  eTag?: string;\n}\n\n/** Defines headers for Quota_listNext operation. */\nexport interface QuotaListNextHeaders {\n  /** Current entity state version. Should be treated as opaque and used to make conditional HTTP requests. */\n  eTag?: string;\n}\n\n/** Known values of {@link ErrorResponseCode} that the service accepts. */\nexport enum KnownErrorResponseCode {\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** InternalServerError */\n  InternalServerError = \"InternalServerError\",\n  /** ServerTimeout */\n  ServerTimeout = \"ServerTimeout\",\n  /** AuthorizationFailed */\n  AuthorizationFailed = \"AuthorizationFailed\",\n  /** BadRequest */\n  BadRequest = \"BadRequest\",\n  /** ClientCertificateThumbprintNotSet */\n  ClientCertificateThumbprintNotSet = \"ClientCertificateThumbprintNotSet\",\n  /** InvalidRequestContent */\n  InvalidRequestContent = \"InvalidRequestContent\",\n  /** OperationFailed */\n  OperationFailed = \"OperationFailed\",\n  /** HttpMethodNotSupported */\n  HttpMethodNotSupported = \"HttpMethodNotSupported\",\n  /** InvalidRequestUri */\n  InvalidRequestUri = \"InvalidRequestUri\",\n  /** MissingTenantId */\n  MissingTenantId = \"MissingTenantId\",\n  /** InvalidTenantId */\n  InvalidTenantId = \"InvalidTenantId\",\n  /** InvalidReservationOrderId */\n  InvalidReservationOrderId = \"InvalidReservationOrderId\",\n  /** InvalidReservationId */\n  InvalidReservationId = \"InvalidReservationId\",\n  /** ReservationIdNotInReservationOrder */\n  ReservationIdNotInReservationOrder = \"ReservationIdNotInReservationOrder\",\n  /** ReservationOrderNotFound */\n  ReservationOrderNotFound = \"ReservationOrderNotFound\",\n  /** InvalidSubscriptionId */\n  InvalidSubscriptionId = \"InvalidSubscriptionId\",\n  /** InvalidAccessToken */\n  InvalidAccessToken = \"InvalidAccessToken\",\n  /** InvalidLocationId */\n  InvalidLocationId = \"InvalidLocationId\",\n  /** UnauthenticatedRequestsThrottled */\n  UnauthenticatedRequestsThrottled = \"UnauthenticatedRequestsThrottled\",\n  /** InvalidHealthCheckType */\n  InvalidHealthCheckType = \"InvalidHealthCheckType\",\n  /** Forbidden */\n  Forbidden = \"Forbidden\",\n  /** BillingScopeIdCannotBeChanged */\n  BillingScopeIdCannotBeChanged = \"BillingScopeIdCannotBeChanged\",\n  /** AppliedScopesNotAssociatedWithCommerceAccount */\n  AppliedScopesNotAssociatedWithCommerceAccount = \"AppliedScopesNotAssociatedWithCommerceAccount\",\n  /** PatchValuesSameAsExisting */\n  PatchValuesSameAsExisting = \"PatchValuesSameAsExisting\",\n  /** RoleAssignmentCreationFailed */\n  RoleAssignmentCreationFailed = \"RoleAssignmentCreationFailed\",\n  /** ReservationOrderCreationFailed */\n  ReservationOrderCreationFailed = \"ReservationOrderCreationFailed\",\n  /** ReservationOrderNotEnabled */\n  ReservationOrderNotEnabled = \"ReservationOrderNotEnabled\",\n  /** CapacityUpdateScopesFailed */\n  CapacityUpdateScopesFailed = \"CapacityUpdateScopesFailed\",\n  /** UnsupportedReservationTerm */\n  UnsupportedReservationTerm = \"UnsupportedReservationTerm\",\n  /** ReservationOrderIdAlreadyExists */\n  ReservationOrderIdAlreadyExists = \"ReservationOrderIdAlreadyExists\",\n  /** RiskCheckFailed */\n  RiskCheckFailed = \"RiskCheckFailed\",\n  /** CreateQuoteFailed */\n  CreateQuoteFailed = \"CreateQuoteFailed\",\n  /** ActivateQuoteFailed */\n  ActivateQuoteFailed = \"ActivateQuoteFailed\",\n  /** NonsupportedAccountId */\n  NonsupportedAccountId = \"NonsupportedAccountId\",\n  /** PaymentInstrumentNotFound */\n  PaymentInstrumentNotFound = \"PaymentInstrumentNotFound\",\n  /** MissingAppliedScopesForSingle */\n  MissingAppliedScopesForSingle = \"MissingAppliedScopesForSingle\",\n  /** NoValidReservationsToReRate */\n  NoValidReservationsToReRate = \"NoValidReservationsToReRate\",\n  /** ReRateOnlyAllowedForEA */\n  ReRateOnlyAllowedForEA = \"ReRateOnlyAllowedForEA\",\n  /** OperationCannotBePerformedInCurrentState */\n  OperationCannotBePerformedInCurrentState = \"OperationCannotBePerformedInCurrentState\",\n  /** InvalidSingleAppliedScopesCount */\n  InvalidSingleAppliedScopesCount = \"InvalidSingleAppliedScopesCount\",\n  /** InvalidFulfillmentRequestParameters */\n  InvalidFulfillmentRequestParameters = \"InvalidFulfillmentRequestParameters\",\n  /** NotSupportedCountry */\n  NotSupportedCountry = \"NotSupportedCountry\",\n  /** InvalidRefundQuantity */\n  InvalidRefundQuantity = \"InvalidRefundQuantity\",\n  /** PurchaseError */\n  PurchaseError = \"PurchaseError\",\n  /** BillingCustomerInputError */\n  BillingCustomerInputError = \"BillingCustomerInputError\",\n  /** BillingPaymentInstrumentSoftError */\n  BillingPaymentInstrumentSoftError = \"BillingPaymentInstrumentSoftError\",\n  /** BillingPaymentInstrumentHardError */\n  BillingPaymentInstrumentHardError = \"BillingPaymentInstrumentHardError\",\n  /** BillingTransientError */\n  BillingTransientError = \"BillingTransientError\",\n  /** BillingError */\n  BillingError = \"BillingError\",\n  /** FulfillmentConfigurationError */\n  FulfillmentConfigurationError = \"FulfillmentConfigurationError\",\n  /** FulfillmentOutOfStockError */\n  FulfillmentOutOfStockError = \"FulfillmentOutOfStockError\",\n  /** FulfillmentTransientError */\n  FulfillmentTransientError = \"FulfillmentTransientError\",\n  /** FulfillmentError */\n  FulfillmentError = \"FulfillmentError\",\n  /** CalculatePriceFailed */\n  CalculatePriceFailed = \"CalculatePriceFailed\",\n  /** AppliedScopesSameAsExisting */\n  AppliedScopesSameAsExisting = \"AppliedScopesSameAsExisting\",\n  /** SelfServiceRefundNotSupported */\n  SelfServiceRefundNotSupported = \"SelfServiceRefundNotSupported\",\n  /** RefundLimitExceeded */\n  RefundLimitExceeded = \"RefundLimitExceeded\"\n}\n\n/**\n * Defines values for ErrorResponseCode. \\\n * {@link KnownErrorResponseCode} can be used interchangeably with ErrorResponseCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSpecified** \\\n * **InternalServerError** \\\n * **ServerTimeout** \\\n * **AuthorizationFailed** \\\n * **BadRequest** \\\n * **ClientCertificateThumbprintNotSet** \\\n * **InvalidRequestContent** \\\n * **OperationFailed** \\\n * **HttpMethodNotSupported** \\\n * **InvalidRequestUri** \\\n * **MissingTenantId** \\\n * **InvalidTenantId** \\\n * **InvalidReservationOrderId** \\\n * **InvalidReservationId** \\\n * **ReservationIdNotInReservationOrder** \\\n * **ReservationOrderNotFound** \\\n * **InvalidSubscriptionId** \\\n * **InvalidAccessToken** \\\n * **InvalidLocationId** \\\n * **UnauthenticatedRequestsThrottled** \\\n * **InvalidHealthCheckType** \\\n * **Forbidden** \\\n * **BillingScopeIdCannotBeChanged** \\\n * **AppliedScopesNotAssociatedWithCommerceAccount** \\\n * **PatchValuesSameAsExisting** \\\n * **RoleAssignmentCreationFailed** \\\n * **ReservationOrderCreationFailed** \\\n * **ReservationOrderNotEnabled** \\\n * **CapacityUpdateScopesFailed** \\\n * **UnsupportedReservationTerm** \\\n * **ReservationOrderIdAlreadyExists** \\\n * **RiskCheckFailed** \\\n * **CreateQuoteFailed** \\\n * **ActivateQuoteFailed** \\\n * **NonsupportedAccountId** \\\n * **PaymentInstrumentNotFound** \\\n * **MissingAppliedScopesForSingle** \\\n * **NoValidReservationsToReRate** \\\n * **ReRateOnlyAllowedForEA** \\\n * **OperationCannotBePerformedInCurrentState** \\\n * **InvalidSingleAppliedScopesCount** \\\n * **InvalidFulfillmentRequestParameters** \\\n * **NotSupportedCountry** \\\n * **InvalidRefundQuantity** \\\n * **PurchaseError** \\\n * **BillingCustomerInputError** \\\n * **BillingPaymentInstrumentSoftError** \\\n * **BillingPaymentInstrumentHardError** \\\n * **BillingTransientError** \\\n * **BillingError** \\\n * **FulfillmentConfigurationError** \\\n * **FulfillmentOutOfStockError** \\\n * **FulfillmentTransientError** \\\n * **FulfillmentError** \\\n * **CalculatePriceFailed** \\\n * **AppliedScopesSameAsExisting** \\\n * **SelfServiceRefundNotSupported** \\\n * **RefundLimitExceeded**\n */\nexport type ErrorResponseCode = string;\n\n/** Known values of {@link ReservationBillingPlan} that the service accepts. */\nexport enum KnownReservationBillingPlan {\n  /** Upfront */\n  Upfront = \"Upfront\",\n  /** Monthly */\n  Monthly = \"Monthly\"\n}\n\n/**\n * Defines values for ReservationBillingPlan. \\\n * {@link KnownReservationBillingPlan} can be used interchangeably with ReservationBillingPlan,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Upfront** \\\n * **Monthly**\n */\nexport type ReservationBillingPlan = string;\n\n/** Known values of {@link ReservationTerm} that the service accepts. */\nexport enum KnownReservationTerm {\n  /** P1Y */\n  P1Y = \"P1Y\",\n  /** P3Y */\n  P3Y = \"P3Y\",\n  /** P5Y */\n  P5Y = \"P5Y\"\n}\n\n/**\n * Defines values for ReservationTerm. \\\n * {@link KnownReservationTerm} can be used interchangeably with ReservationTerm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P1Y** \\\n * **P3Y** \\\n * **P5Y**\n */\nexport type ReservationTerm = string;\n\n/** Known values of {@link ReservedResourceType} that the service accepts. */\nexport enum KnownReservedResourceType {\n  /** VirtualMachines */\n  VirtualMachines = \"VirtualMachines\",\n  /** SqlDatabases */\n  SqlDatabases = \"SqlDatabases\",\n  /** SuseLinux */\n  SuseLinux = \"SuseLinux\",\n  /** CosmosDb */\n  CosmosDb = \"CosmosDb\",\n  /** RedHat */\n  RedHat = \"RedHat\",\n  /** SqlDataWarehouse */\n  SqlDataWarehouse = \"SqlDataWarehouse\",\n  /** VMwareCloudSimple */\n  VMwareCloudSimple = \"VMwareCloudSimple\",\n  /** RedHatOsa */\n  RedHatOsa = \"RedHatOsa\",\n  /** Databricks */\n  Databricks = \"Databricks\",\n  /** AppService */\n  AppService = \"AppService\",\n  /** ManagedDisk */\n  ManagedDisk = \"ManagedDisk\",\n  /** BlockBlob */\n  BlockBlob = \"BlockBlob\",\n  /** RedisCache */\n  RedisCache = \"RedisCache\",\n  /** AzureDataExplorer */\n  AzureDataExplorer = \"AzureDataExplorer\",\n  /** MySql */\n  MySql = \"MySql\",\n  /** MariaDb */\n  MariaDb = \"MariaDb\",\n  /** PostgreSql */\n  PostgreSql = \"PostgreSql\",\n  /** DedicatedHost */\n  DedicatedHost = \"DedicatedHost\",\n  /** SapHana */\n  SapHana = \"SapHana\",\n  /** SqlAzureHybridBenefit */\n  SqlAzureHybridBenefit = \"SqlAzureHybridBenefit\",\n  /** AVS */\n  AVS = \"AVS\",\n  /** DataFactory */\n  DataFactory = \"DataFactory\",\n  /** NetAppStorage */\n  NetAppStorage = \"NetAppStorage\",\n  /** AzureFiles */\n  AzureFiles = \"AzureFiles\",\n  /** SqlEdge */\n  SqlEdge = \"SqlEdge\",\n  /** VirtualMachineSoftware */\n  VirtualMachineSoftware = \"VirtualMachineSoftware\"\n}\n\n/**\n * Defines values for ReservedResourceType. \\\n * {@link KnownReservedResourceType} can be used interchangeably with ReservedResourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **VirtualMachines** \\\n * **SqlDatabases** \\\n * **SuseLinux** \\\n * **CosmosDb** \\\n * **RedHat** \\\n * **SqlDataWarehouse** \\\n * **VMwareCloudSimple** \\\n * **RedHatOsa** \\\n * **Databricks** \\\n * **AppService** \\\n * **ManagedDisk** \\\n * **BlockBlob** \\\n * **RedisCache** \\\n * **AzureDataExplorer** \\\n * **MySql** \\\n * **MariaDb** \\\n * **PostgreSql** \\\n * **DedicatedHost** \\\n * **SapHana** \\\n * **SqlAzureHybridBenefit** \\\n * **AVS** \\\n * **DataFactory** \\\n * **NetAppStorage** \\\n * **AzureFiles** \\\n * **SqlEdge** \\\n * **VirtualMachineSoftware**\n */\nexport type ReservedResourceType = string;\n\n/** Known values of {@link AppliedScopeType} that the service accepts. */\nexport enum KnownAppliedScopeType {\n  /** Single */\n  Single = \"Single\",\n  /** Shared */\n  Shared = \"Shared\",\n  /** ManagementGroup */\n  ManagementGroup = \"ManagementGroup\"\n}\n\n/**\n * Defines values for AppliedScopeType. \\\n * {@link KnownAppliedScopeType} can be used interchangeably with AppliedScopeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Single** \\\n * **Shared** \\\n * **ManagementGroup**\n */\nexport type AppliedScopeType = string;\n\n/** Known values of {@link InstanceFlexibility} that the service accepts. */\nexport enum KnownInstanceFlexibility {\n  /** On */\n  On = \"On\",\n  /** Off */\n  Off = \"Off\"\n}\n\n/**\n * Defines values for InstanceFlexibility. \\\n * {@link KnownInstanceFlexibility} can be used interchangeably with InstanceFlexibility,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **On** \\\n * **Off**\n */\nexport type InstanceFlexibility = string;\n\n/** Known values of {@link PaymentStatus} that the service accepts. */\nexport enum KnownPaymentStatus {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Scheduled */\n  Scheduled = \"Scheduled\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\"\n}\n\n/**\n * Defines values for PaymentStatus. \\\n * {@link KnownPaymentStatus} can be used interchangeably with PaymentStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Scheduled** \\\n * **Cancelled**\n */\nexport type PaymentStatus = string;\n\n/** Known values of {@link ReservationStatusCode} that the service accepts. */\nexport enum KnownReservationStatusCode {\n  /** None */\n  None = \"None\",\n  /** Pending */\n  Pending = \"Pending\",\n  /** Processing */\n  Processing = \"Processing\",\n  /** Active */\n  Active = \"Active\",\n  /** PurchaseError */\n  PurchaseError = \"PurchaseError\",\n  /** PaymentInstrumentError */\n  PaymentInstrumentError = \"PaymentInstrumentError\",\n  /** Split */\n  Split = \"Split\",\n  /** Merged */\n  Merged = \"Merged\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\"\n}\n\n/**\n * Defines values for ReservationStatusCode. \\\n * {@link KnownReservationStatusCode} can be used interchangeably with ReservationStatusCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Pending** \\\n * **Processing** \\\n * **Active** \\\n * **PurchaseError** \\\n * **PaymentInstrumentError** \\\n * **Split** \\\n * **Merged** \\\n * **Expired** \\\n * **Succeeded**\n */\nexport type ReservationStatusCode = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** PendingResourceHold */\n  PendingResourceHold = \"PendingResourceHold\",\n  /** ConfirmedResourceHold */\n  ConfirmedResourceHold = \"ConfirmedResourceHold\",\n  /** PendingBilling */\n  PendingBilling = \"PendingBilling\",\n  /** ConfirmedBilling */\n  ConfirmedBilling = \"ConfirmedBilling\",\n  /** Created */\n  Created = \"Created\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** BillingFailed */\n  BillingFailed = \"BillingFailed\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Split */\n  Split = \"Split\",\n  /** Merged */\n  Merged = \"Merged\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **PendingResourceHold** \\\n * **ConfirmedResourceHold** \\\n * **PendingBilling** \\\n * **ConfirmedBilling** \\\n * **Created** \\\n * **Succeeded** \\\n * **Cancelled** \\\n * **Expired** \\\n * **BillingFailed** \\\n * **Failed** \\\n * **Split** \\\n * **Merged**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link SavingsPlanTerm} that the service accepts. */\nexport enum KnownSavingsPlanTerm {\n  /** P1Y */\n  P1Y = \"P1Y\",\n  /** P3Y */\n  P3Y = \"P3Y\"\n}\n\n/**\n * Defines values for SavingsPlanTerm. \\\n * {@link KnownSavingsPlanTerm} can be used interchangeably with SavingsPlanTerm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P1Y** \\\n * **P3Y**\n */\nexport type SavingsPlanTerm = string;\n\n/** Known values of {@link BillingPlan} that the service accepts. */\nexport enum KnownBillingPlan {\n  /** P1M */\n  P1M = \"P1M\"\n}\n\n/**\n * Defines values for BillingPlan. \\\n * {@link KnownBillingPlan} can be used interchangeably with BillingPlan,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P1M**\n */\nexport type BillingPlan = string;\n\n/** Known values of {@link CommitmentGrain} that the service accepts. */\nexport enum KnownCommitmentGrain {\n  /** Hourly */\n  Hourly = \"Hourly\"\n}\n\n/**\n * Defines values for CommitmentGrain. \\\n * {@link KnownCommitmentGrain} can be used interchangeably with CommitmentGrain,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Hourly**\n */\nexport type CommitmentGrain = string;\n\n/** Known values of {@link CalculateExchangeOperationResultStatus} that the service accepts. */\nexport enum KnownCalculateExchangeOperationResultStatus {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\",\n  /** Pending */\n  Pending = \"Pending\"\n}\n\n/**\n * Defines values for CalculateExchangeOperationResultStatus. \\\n * {@link KnownCalculateExchangeOperationResultStatus} can be used interchangeably with CalculateExchangeOperationResultStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Cancelled** \\\n * **Pending**\n */\nexport type CalculateExchangeOperationResultStatus = string;\n\n/** Known values of {@link ExchangeOperationResultStatus} that the service accepts. */\nexport enum KnownExchangeOperationResultStatus {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\",\n  /** PendingRefunds */\n  PendingRefunds = \"PendingRefunds\",\n  /** PendingPurchases */\n  PendingPurchases = \"PendingPurchases\"\n}\n\n/**\n * Defines values for ExchangeOperationResultStatus. \\\n * {@link KnownExchangeOperationResultStatus} can be used interchangeably with ExchangeOperationResultStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Cancelled** \\\n * **PendingRefunds** \\\n * **PendingPurchases**\n */\nexport type ExchangeOperationResultStatus = string;\n\n/** Known values of {@link OperationStatus} that the service accepts. */\nexport enum KnownOperationStatus {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\",\n  /** Pending */\n  Pending = \"Pending\"\n}\n\n/**\n * Defines values for OperationStatus. \\\n * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Cancelled** \\\n * **Pending**\n */\nexport type OperationStatus = string;\n\n/** Known values of {@link ResourceType} that the service accepts. */\nexport enum KnownResourceType {\n  /** Standard */\n  Standard = \"standard\",\n  /** Dedicated */\n  Dedicated = \"dedicated\",\n  /** LowPriority */\n  LowPriority = \"lowPriority\",\n  /** Shared */\n  Shared = \"shared\",\n  /** ServiceSpecific */\n  ServiceSpecific = \"serviceSpecific\"\n}\n\n/**\n * Defines values for ResourceType. \\\n * {@link KnownResourceType} can be used interchangeably with ResourceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **standard** \\\n * **dedicated** \\\n * **lowPriority** \\\n * **shared** \\\n * **serviceSpecific**\n */\nexport type ResourceType = string;\n\n/** Known values of {@link QuotaRequestState} that the service accepts. */\nexport enum KnownQuotaRequestState {\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** InProgress */\n  InProgress = \"InProgress\"\n}\n\n/**\n * Defines values for QuotaRequestState. \\\n * {@link KnownQuotaRequestState} can be used interchangeably with QuotaRequestState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Accepted** \\\n * **Invalid** \\\n * **Succeeded** \\\n * **Failed** \\\n * **InProgress**\n */\nexport type QuotaRequestState = string;\n\n/** Known values of {@link Location} that the service accepts. */\nexport enum KnownLocation {\n  /** Westus */\n  Westus = \"westus\",\n  /** Eastus */\n  Eastus = \"eastus\",\n  /** Eastus2 */\n  Eastus2 = \"eastus2\",\n  /** Northcentralus */\n  Northcentralus = \"northcentralus\",\n  /** Westus2 */\n  Westus2 = \"westus2\",\n  /** Southcentralus */\n  Southcentralus = \"southcentralus\",\n  /** Centralus */\n  Centralus = \"centralus\",\n  /** Westeurope */\n  Westeurope = \"westeurope\",\n  /** Northeurope */\n  Northeurope = \"northeurope\",\n  /** Eastasia */\n  Eastasia = \"eastasia\",\n  /** Southeastasia */\n  Southeastasia = \"southeastasia\",\n  /** Japaneast */\n  Japaneast = \"japaneast\",\n  /** Japanwest */\n  Japanwest = \"japanwest\",\n  /** Brazilsouth */\n  Brazilsouth = \"brazilsouth\",\n  /** Australiaeast */\n  Australiaeast = \"australiaeast\",\n  /** Australiasoutheast */\n  Australiasoutheast = \"australiasoutheast\",\n  /** Southindia */\n  Southindia = \"southindia\",\n  /** Westindia */\n  Westindia = \"westindia\",\n  /** Centralindia */\n  Centralindia = \"centralindia\",\n  /** Canadacentral */\n  Canadacentral = \"canadacentral\",\n  /** Canadaeast */\n  Canadaeast = \"canadaeast\",\n  /** Uksouth */\n  Uksouth = \"uksouth\",\n  /** Westcentralus */\n  Westcentralus = \"westcentralus\",\n  /** Ukwest */\n  Ukwest = \"ukwest\"\n}\n\n/**\n * Defines values for Location. \\\n * {@link KnownLocation} can be used interchangeably with Location,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **westus** \\\n * **eastus** \\\n * **eastus2** \\\n * **northcentralus** \\\n * **westus2** \\\n * **southcentralus** \\\n * **centralus** \\\n * **westeurope** \\\n * **northeurope** \\\n * **eastasia** \\\n * **southeastasia** \\\n * **japaneast** \\\n * **japanwest** \\\n * **brazilsouth** \\\n * **australiaeast** \\\n * **australiasoutheast** \\\n * **southindia** \\\n * **westindia** \\\n * **centralindia** \\\n * **canadacentral** \\\n * **canadaeast** \\\n * **uksouth** \\\n * **westcentralus** \\\n * **ukwest**\n */\nexport type Location = string;\n\n/** Known values of {@link DisplayProvisioningState} that the service accepts. */\nexport enum KnownDisplayProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Expiring */\n  Expiring = \"Expiring\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** Pending */\n  Pending = \"Pending\",\n  /** Processing */\n  Processing = \"Processing\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** NoBenefit */\n  NoBenefit = \"NoBenefit\"\n}\n\n/**\n * Defines values for DisplayProvisioningState. \\\n * {@link KnownDisplayProvisioningState} can be used interchangeably with DisplayProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Expiring** \\\n * **Expired** \\\n * **Pending** \\\n * **Processing** \\\n * **Cancelled** \\\n * **Failed** \\\n * **Warning** \\\n * **NoBenefit**\n */\nexport type DisplayProvisioningState = string;\n\n/** Known values of {@link UserFriendlyAppliedScopeType} that the service accepts. */\nexport enum KnownUserFriendlyAppliedScopeType {\n  /** None */\n  None = \"None\",\n  /** Shared */\n  Shared = \"Shared\",\n  /** Single */\n  Single = \"Single\",\n  /** ResourceGroup */\n  ResourceGroup = \"ResourceGroup\",\n  /** ManagementGroup */\n  ManagementGroup = \"ManagementGroup\"\n}\n\n/**\n * Defines values for UserFriendlyAppliedScopeType. \\\n * {@link KnownUserFriendlyAppliedScopeType} can be used interchangeably with UserFriendlyAppliedScopeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Shared** \\\n * **Single** \\\n * **ResourceGroup** \\\n * **ManagementGroup**\n */\nexport type UserFriendlyAppliedScopeType = string;\n\n/** Known values of {@link UserFriendlyRenewState} that the service accepts. */\nexport enum KnownUserFriendlyRenewState {\n  /** On */\n  On = \"On\",\n  /** Off */\n  Off = \"Off\",\n  /** Renewed */\n  Renewed = \"Renewed\",\n  /** NotRenewed */\n  NotRenewed = \"NotRenewed\",\n  /** NotApplicable */\n  NotApplicable = \"NotApplicable\"\n}\n\n/**\n * Defines values for UserFriendlyRenewState. \\\n * {@link KnownUserFriendlyRenewState} can be used interchangeably with UserFriendlyRenewState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **On** \\\n * **Off** \\\n * **Renewed** \\\n * **NotRenewed** \\\n * **NotApplicable**\n */\nexport type UserFriendlyRenewState = string;\n\n/** Optional parameters. */\nexport interface ReservationAvailableScopesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the availableScopes operation. */\nexport type ReservationAvailableScopesResponse = AvailableScopeProperties;\n\n/** Optional parameters. */\nexport interface ReservationSplitOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the split operation. */\nexport type ReservationSplitResponse = ReservationResponse[];\n\n/** Optional parameters. */\nexport interface ReservationMergeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the merge operation. */\nexport type ReservationMergeResponse = ReservationResponse[];\n\n/** Optional parameters. */\nexport interface ReservationListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ReservationListResponse = ReservationList;\n\n/** Optional parameters. */\nexport interface ReservationGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Supported value of this query is renewProperties */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ReservationGetResponse = ReservationResponse;\n\n/** Optional parameters. */\nexport interface ReservationUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ReservationUpdateResponse = ReservationResponse;\n\n/** Optional parameters. */\nexport interface ReservationArchiveOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ReservationUnarchiveOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ReservationListRevisionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRevisions operation. */\nexport type ReservationListRevisionsResponse = ReservationList;\n\n/** Optional parameters. */\nexport interface ReservationListAllOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, expiryDateTime, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState} */\n  filter?: string;\n  /** May be used to sort order by reservation properties. */\n  orderby?: string;\n  /** To indicate whether to refresh the roll up counts of the reservations group by provisioning states */\n  refreshSummary?: string;\n  /** The number of reservations to skip from the list before returning results */\n  skiptoken?: number;\n  /** The selected provisioning state */\n  selectedState?: string;\n  /** To number of reservations to return */\n  take?: number;\n}\n\n/** Contains response data for the listAll operation. */\nexport type ReservationListAllResponse = ReservationsListResult;\n\n/** Optional parameters. */\nexport interface ReservationListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReservationListNextResponse = ReservationList;\n\n/** Optional parameters. */\nexport interface ReservationListRevisionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRevisionsNext operation. */\nexport type ReservationListRevisionsNextResponse = ReservationList;\n\n/** Optional parameters. */\nexport interface ReservationListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type ReservationListAllNextResponse = ReservationsListResult;\n\n/** Optional parameters. */\nexport interface GetCatalogOptionalParams extends coreClient.OperationOptions {\n  /** May be used to filter by Catalog properties. The filter supports 'eq', 'or', and 'and'. */\n  filter?: string;\n  /** The type of the resource for which the skus should be provided. */\n  reservedResourceType?: string;\n  /** Filters the skus based on the location specified in this parameter. This can be an Azure region or global */\n  location?: string;\n  /** Publisher id used to get the third party products */\n  publisherId?: string;\n  /** Offer id used to get the third party products */\n  offerId?: string;\n  /** Plan id used to get the third party products */\n  planId?: string;\n  /** The number of reservations to skip from the list before returning results */\n  skip?: number;\n  /** To number of reservations to return */\n  take?: number;\n}\n\n/** Contains response data for the getCatalog operation. */\nexport type GetCatalogResponse = CatalogsResult;\n\n/** Optional parameters. */\nexport interface GetAppliedReservationListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAppliedReservationList operation. */\nexport type GetAppliedReservationListResponse = AppliedReservations;\n\n/** Optional parameters. */\nexport interface GetCatalogNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getCatalogNext operation. */\nexport type GetCatalogNextResponse = CatalogsResult;\n\n/** Optional parameters. */\nexport interface ReservationOrderCalculateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the calculate operation. */\nexport type ReservationOrderCalculateResponse = CalculatePriceResponse;\n\n/** Optional parameters. */\nexport interface ReservationOrderListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ReservationOrderListResponse = ReservationOrderList;\n\n/** Optional parameters. */\nexport interface ReservationOrderPurchaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the purchase operation. */\nexport type ReservationOrderPurchaseResponse = ReservationOrderResponse;\n\n/** Optional parameters. */\nexport interface ReservationOrderGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to expand the planInformation. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ReservationOrderGetResponse = ReservationOrderResponse;\n\n/** Optional parameters. */\nexport interface ReservationOrderChangeDirectoryOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the changeDirectory operation. */\nexport type ReservationOrderChangeDirectoryResponse = ChangeDirectoryResponse;\n\n/** Optional parameters. */\nexport interface ReservationOrderListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ReservationOrderListNextResponse = ReservationOrderList;\n\n/** Optional parameters. */\nexport interface OperationListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationListResponse = OperationList;\n\n/** Optional parameters. */\nexport interface OperationListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationListNextResponse = OperationList;\n\n/** Optional parameters. */\nexport interface CalculateRefundPostOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the post operation. */\nexport type CalculateRefundPostResponse = CalculateRefundResponse;\n\n/** Optional parameters. */\nexport interface ReturnPostOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the post operation. */\nexport type ReturnPostResponse = ReservationOrderResponse;\n\n/** Optional parameters. */\nexport interface CalculateExchangePostOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the post operation. */\nexport type CalculateExchangePostResponse = CalculateExchangeOperationResultResponse;\n\n/** Optional parameters. */\nexport interface ExchangePostOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the post operation. */\nexport type ExchangePostResponse = ExchangeOperationResultResponse;\n\n/** Optional parameters. */\nexport interface QuotaGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type QuotaGetResponse = QuotaGetHeaders & CurrentQuotaLimitBase;\n\n/** Optional parameters. */\nexport interface QuotaCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type QuotaCreateOrUpdateResponse = CurrentQuotaLimitBase;\n\n/** Optional parameters. */\nexport interface QuotaUpdateOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type QuotaUpdateResponse = CurrentQuotaLimitBase;\n\n/** Optional parameters. */\nexport interface QuotaListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type QuotaListResponse = QuotaListHeaders & QuotaLimits;\n\n/** Optional parameters. */\nexport interface QuotaListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QuotaListNextResponse = QuotaListNextHeaders & QuotaLimits;\n\n/** Optional parameters. */\nexport interface QuotaRequestStatusGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type QuotaRequestStatusGetResponse = QuotaRequestDetails;\n\n/** Optional parameters. */\nexport interface QuotaRequestStatusListOptionalParams\n  extends coreClient.OperationOptions {\n  /**\n   * | Field | Supported operators |\n   * |---------------------|------------------------|\n   * |requestSubmitTime | ge, le, eq, gt, lt |\n   */\n  filter?: string;\n  /** Number of records to return. */\n  top?: number;\n  /** Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element includes a skiptoken parameter that specifies a starting point to use for subsequent calls. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type QuotaRequestStatusListResponse = QuotaRequestDetailsList;\n\n/** Optional parameters. */\nexport interface QuotaRequestStatusListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QuotaRequestStatusListNextResponse = QuotaRequestDetailsList;\n\n/** Optional parameters. */\nexport interface AzureReservationAPIOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const AvailableScopeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableScopeRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailableScopeRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableScopeRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableScopeRequestProperties\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableScopeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableScopeProperties\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SubscriptionScopeProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionScopeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionScopeProperties\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScopeProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScopeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScopeProperties\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      valid: {\n        serializedName: \"valid\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedErrorInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedErrorInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedErrorInfo\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CatalogsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CatalogsResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Catalog\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      totalItems: {\n        serializedName: \"totalItems\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Catalog: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Catalog\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      billingPlans: {\n        serializedName: \"billingPlans\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n          }\n        }\n      },\n      terms: {\n        serializedName: \"terms\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      skuProperties: {\n        serializedName: \"skuProperties\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuProperty\"\n            }\n          }\n        }\n      },\n      msrp: {\n        serializedName: \"msrp\",\n        type: {\n          name: \"Composite\",\n          className: \"CatalogMsrp\"\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuRestriction\"\n            }\n          }\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuCapability\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuProperty\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CatalogMsrp: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CatalogMsrp\",\n    modelProperties: {\n      p1Y: {\n        serializedName: \"p1Y\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      p3Y: {\n        serializedName: \"p3Y\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      p5Y: {\n        serializedName: \"p5Y\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      }\n    }\n  }\n};\n\nexport const Price: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Price\",\n    modelProperties: {\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuRestriction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuRestriction\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppliedReservations: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppliedReservations\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationOrderIds: {\n        serializedName: \"properties.reservationOrderIds\",\n        type: {\n          name: \"Composite\",\n          className: \"AppliedReservationList\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppliedReservationList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppliedReservationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PurchaseRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PurchaseRequest\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"SkuName\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reservedResourceType: {\n        serializedName: \"properties.reservedResourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingScopeId: {\n        serializedName: \"properties.billingScopeId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingPlan: {\n        serializedName: \"properties.billingPlan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"properties.quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appliedScopeType: {\n        serializedName: \"properties.appliedScopeType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appliedScopes: {\n        serializedName: \"properties.appliedScopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      appliedScopeProperties: {\n        serializedName: \"properties.appliedScopeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AppliedScopeProperties\"\n        }\n      },\n      renew: {\n        defaultValue: false,\n        serializedName: \"properties.renew\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reservedResourceProperties: {\n        serializedName: \"properties.reservedResourceProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchaseRequestPropertiesReservedResourceProperties\"\n        }\n      },\n      reviewDateTime: {\n        serializedName: \"properties.reviewDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuName\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppliedScopeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppliedScopeProperties\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managementGroupId: {\n        serializedName: \"managementGroupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroupId: {\n        serializedName: \"resourceGroupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PurchaseRequestPropertiesReservedResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PurchaseRequestPropertiesReservedResourceProperties\",\n    modelProperties: {\n      instanceFlexibility: {\n        serializedName: \"instanceFlexibility\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculatePriceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculatePriceResponse\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CalculatePriceResponseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculatePriceResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculatePriceResponseProperties\",\n    modelProperties: {\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"CalculatePriceResponsePropertiesBillingCurrencyTotal\"\n        }\n      },\n      netTotal: {\n        serializedName: \"netTotal\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      taxTotal: {\n        serializedName: \"taxTotal\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      grandTotal: {\n        serializedName: \"grandTotal\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isTaxIncluded: {\n        serializedName: \"isTaxIncluded\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isBillingPartnerManaged: {\n        serializedName: \"isBillingPartnerManaged\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reservationOrderId: {\n        serializedName: \"reservationOrderId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      skuTitle: {\n        serializedName: \"skuTitle\",\n        type: {\n          name: \"String\"\n        }\n      },\n      skuDescription: {\n        serializedName: \"skuDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pricingCurrencyTotal: {\n        serializedName: \"pricingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"CalculatePriceResponsePropertiesPricingCurrencyTotal\"\n        }\n      },\n      paymentSchedule: {\n        serializedName: \"paymentSchedule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PaymentDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CalculatePriceResponsePropertiesBillingCurrencyTotal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculatePriceResponsePropertiesBillingCurrencyTotal\",\n    modelProperties: {\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculatePriceResponsePropertiesPricingCurrencyTotal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculatePriceResponsePropertiesPricingCurrencyTotal\",\n    modelProperties: {\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PaymentDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaymentDetail\",\n    modelProperties: {\n      dueDate: {\n        serializedName: \"dueDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      paymentDate: {\n        serializedName: \"paymentDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      pricingCurrencyTotal: {\n        serializedName: \"pricingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingAccount: {\n        serializedName: \"billingAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedStatusInfo: {\n        serializedName: \"extendedStatusInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedStatusInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedStatusInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedStatusInfo\",\n    modelProperties: {\n      statusCode: {\n        serializedName: \"statusCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationOrderList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationOrderList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationOrderResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationOrderResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationOrderResponse\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestDateTime: {\n        serializedName: \"properties.requestDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createdDateTime: {\n        serializedName: \"properties.createdDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiryDate: {\n        serializedName: \"properties.expiryDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      expiryDateTime: {\n        serializedName: \"properties.expiryDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      benefitStartTime: {\n        serializedName: \"properties.benefitStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      originalQuantity: {\n        serializedName: \"properties.originalQuantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingPlan: {\n        serializedName: \"properties.billingPlan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      planInformation: {\n        serializedName: \"properties.planInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationOrderBillingPlanInformation\"\n        }\n      },\n      reservations: {\n        serializedName: \"properties.reservations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationResponse\"\n            }\n          }\n        }\n      },\n      reviewDateTime: {\n        serializedName: \"properties.reviewDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationOrderBillingPlanInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationOrderBillingPlanInformation\",\n    modelProperties: {\n      pricingCurrencyTotal: {\n        serializedName: \"pricingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      startDate: {\n        serializedName: \"startDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      nextPaymentDueDate: {\n        serializedName: \"nextPaymentDueDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      transactions: {\n        serializedName: \"transactions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PaymentDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationsProperties\",\n    modelProperties: {\n      reservedResourceType: {\n        serializedName: \"reservedResourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceFlexibility: {\n        serializedName: \"instanceFlexibility\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appliedScopes: {\n        serializedName: \"appliedScopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      appliedScopeType: {\n        serializedName: \"appliedScopeType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      archived: {\n        serializedName: \"archived\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveDateTime: {\n        serializedName: \"effectiveDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      benefitStartTime: {\n        serializedName: \"benefitStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdatedDateTime: {\n        serializedName: \"lastUpdatedDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiryDate: {\n        serializedName: \"expiryDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      expiryDateTime: {\n        serializedName: \"expiryDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      reviewDateTime: {\n        serializedName: \"reviewDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      skuDescription: {\n        serializedName: \"skuDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedStatusInfo: {\n        serializedName: \"extendedStatusInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedStatusInfo\"\n        }\n      },\n      billingPlan: {\n        serializedName: \"billingPlan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayProvisioningState: {\n        serializedName: \"displayProvisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningSubState: {\n        serializedName: \"provisioningSubState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      purchaseDate: {\n        serializedName: \"purchaseDate\",\n        type: {\n          name: \"Date\"\n        }\n      },\n      purchaseDateTime: {\n        serializedName: \"purchaseDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      splitProperties: {\n        serializedName: \"splitProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationSplitProperties\"\n        }\n      },\n      mergeProperties: {\n        serializedName: \"mergeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationMergeProperties\"\n        }\n      },\n      swapProperties: {\n        serializedName: \"swapProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationSwapProperties\"\n        }\n      },\n      appliedScopeProperties: {\n        serializedName: \"appliedScopeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AppliedScopeProperties\"\n        }\n      },\n      billingScopeId: {\n        serializedName: \"billingScopeId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      renew: {\n        defaultValue: false,\n        serializedName: \"renew\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      renewSource: {\n        serializedName: \"renewSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      renewDestination: {\n        serializedName: \"renewDestination\",\n        type: {\n          name: \"String\"\n        }\n      },\n      renewProperties: {\n        serializedName: \"renewProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"RenewPropertiesResponse\"\n        }\n      },\n      term: {\n        serializedName: \"term\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userFriendlyAppliedScopeType: {\n        serializedName: \"userFriendlyAppliedScopeType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userFriendlyRenewState: {\n        serializedName: \"userFriendlyRenewState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      utilization: {\n        serializedName: \"utilization\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationsPropertiesUtilization\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationSplitProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationSplitProperties\",\n    modelProperties: {\n      splitDestinations: {\n        serializedName: \"splitDestinations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      splitSource: {\n        serializedName: \"splitSource\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationMergeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationMergeProperties\",\n    modelProperties: {\n      mergeDestination: {\n        serializedName: \"mergeDestination\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mergeSources: {\n        serializedName: \"mergeSources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationSwapProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationSwapProperties\",\n    modelProperties: {\n      swapSource: {\n        serializedName: \"swapSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      swapDestination: {\n        serializedName: \"swapDestination\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RenewPropertiesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RenewPropertiesResponse\",\n    modelProperties: {\n      purchaseProperties: {\n        serializedName: \"purchaseProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchaseRequest\"\n        }\n      },\n      pricingCurrencyTotal: {\n        serializedName: \"pricingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"RenewPropertiesResponsePricingCurrencyTotal\"\n        }\n      },\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"RenewPropertiesResponseBillingCurrencyTotal\"\n        }\n      }\n    }\n  }\n};\n\nexport const RenewPropertiesResponsePricingCurrencyTotal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RenewPropertiesResponsePricingCurrencyTotal\",\n    modelProperties: {\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RenewPropertiesResponseBillingCurrencyTotal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RenewPropertiesResponseBillingCurrencyTotal\",\n    modelProperties: {\n      currencyCode: {\n        serializedName: \"currencyCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationsPropertiesUtilization: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationsPropertiesUtilization\",\n    modelProperties: {\n      trend: {\n        serializedName: \"trend\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregates: {\n        serializedName: \"aggregates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationUtilizationAggregates\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationUtilizationAggregates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationUtilizationAggregates\",\n    modelProperties: {\n      grain: {\n        serializedName: \"grain\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      grainUnit: {\n        serializedName: \"grainUnit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      valueUnit: {\n        serializedName: \"valueUnit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SplitRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SplitRequest\",\n    modelProperties: {\n      quantities: {\n        serializedName: \"properties.quantities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MergeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MergeRequest\",\n    modelProperties: {\n      sources: {\n        serializedName: \"properties.sources\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Patch: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Patch\",\n    modelProperties: {\n      appliedScopeType: {\n        serializedName: \"properties.appliedScopeType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appliedScopes: {\n        serializedName: \"properties.appliedScopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      appliedScopeProperties: {\n        serializedName: \"properties.appliedScopeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AppliedScopeProperties\"\n        }\n      },\n      instanceFlexibility: {\n        serializedName: \"properties.instanceFlexibility\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      renew: {\n        defaultValue: false,\n        serializedName: \"properties.renew\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      renewProperties: {\n        serializedName: \"properties.renewProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PatchPropertiesRenewProperties\"\n        }\n      },\n      reviewDateTime: {\n        serializedName: \"properties.reviewDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const PatchPropertiesRenewProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PatchPropertiesRenewProperties\",\n    modelProperties: {\n      purchaseProperties: {\n        serializedName: \"purchaseProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchaseRequest\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationResponse\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateRefundRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateRefundRequest\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CalculateRefundRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateRefundRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateRefundRequestProperties\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationToReturn: {\n        serializedName: \"reservationToReturn\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationToReturn\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationToReturn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationToReturn\",\n    modelProperties: {\n      reservationId: {\n        serializedName: \"reservationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateRefundResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateRefundResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RefundResponseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundResponseProperties\",\n    modelProperties: {\n      sessionId: {\n        serializedName: \"sessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingRefundAmount: {\n        serializedName: \"billingRefundAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      pricingRefundAmount: {\n        serializedName: \"pricingRefundAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      policyResult: {\n        serializedName: \"policyResult\",\n        type: {\n          name: \"Composite\",\n          className: \"RefundPolicyResult\"\n        }\n      },\n      billingInformation: {\n        serializedName: \"billingInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"RefundBillingInformation\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundPolicyResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundPolicyResult\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RefundPolicyResultProperty\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundPolicyResultProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundPolicyResultProperty\",\n    modelProperties: {\n      consumedRefundsTotal: {\n        serializedName: \"consumedRefundsTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      maxRefundLimit: {\n        serializedName: \"maxRefundLimit\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      policyErrors: {\n        serializedName: \"policyErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RefundPolicyError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RefundPolicyError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundPolicyError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundBillingInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundBillingInformation\",\n    modelProperties: {\n      billingPlan: {\n        serializedName: \"billingPlan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      completedTransactions: {\n        serializedName: \"completedTransactions\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalTransactions: {\n        serializedName: \"totalTransactions\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingCurrencyTotalPaidAmount: {\n        serializedName: \"billingCurrencyTotalPaidAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingCurrencyProratedAmount: {\n        serializedName: \"billingCurrencyProratedAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingCurrencyRemainingCommitmentAmount: {\n        serializedName: \"billingCurrencyRemainingCommitmentAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RefundRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundRequestProperties\",\n    modelProperties: {\n      sessionId: {\n        serializedName: \"sessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationToReturn: {\n        serializedName: \"reservationToReturn\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationToReturn\"\n        }\n      },\n      returnReason: {\n        serializedName: \"returnReason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RefundResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RefundResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RefundResponseProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateExchangeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateExchangeRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CalculateExchangeRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateExchangeRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateExchangeRequestProperties\",\n    modelProperties: {\n      reservationsToPurchase: {\n        serializedName: \"reservationsToPurchase\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PurchaseRequest\"\n            }\n          }\n        }\n      },\n      savingsPlansToPurchase: {\n        serializedName: \"savingsPlansToPurchase\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SavingsPlanPurchaseRequest\"\n            }\n          }\n        }\n      },\n      reservationsToExchange: {\n        serializedName: \"reservationsToExchange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationToReturn\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SavingsPlanPurchaseRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SavingsPlanPurchaseRequest\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"SkuName\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingScopeId: {\n        serializedName: \"properties.billingScopeId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      term: {\n        serializedName: \"properties.term\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingPlan: {\n        serializedName: \"properties.billingPlan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appliedScopeType: {\n        serializedName: \"properties.appliedScopeType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appliedScopeProperties: {\n        serializedName: \"properties.appliedScopeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AppliedScopeProperties\"\n        }\n      },\n      commitment: {\n        serializedName: \"properties.commitment\",\n        type: {\n          name: \"Composite\",\n          className: \"Commitment\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateExchangeOperationResultResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateExchangeOperationResultResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CalculateExchangeResponseProperties\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationResultError\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateExchangeResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateExchangeResponseProperties\",\n    modelProperties: {\n      sessionId: {\n        serializedName: \"sessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      netPayable: {\n        serializedName: \"netPayable\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      refundsTotal: {\n        serializedName: \"refundsTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      purchasesTotal: {\n        serializedName: \"purchasesTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      reservationsToPurchase: {\n        serializedName: \"reservationsToPurchase\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationToPurchaseCalculateExchange\"\n            }\n          }\n        }\n      },\n      savingsPlansToPurchase: {\n        serializedName: \"savingsPlansToPurchase\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SavingsPlanToPurchaseCalculateExchange\"\n            }\n          }\n        }\n      },\n      reservationsToExchange: {\n        serializedName: \"reservationsToExchange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationToExchange\"\n            }\n          }\n        }\n      },\n      policyResult: {\n        serializedName: \"policyResult\",\n        type: {\n          name: \"Composite\",\n          className: \"ExchangePolicyErrors\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationToPurchaseCalculateExchange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationToPurchaseCalculateExchange\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchaseRequest\"\n        }\n      },\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      }\n    }\n  }\n};\n\nexport const SavingsPlanToPurchaseCalculateExchange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SavingsPlanToPurchaseCalculateExchange\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SavingsPlanPurchaseRequest\"\n        }\n      },\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationToExchange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationToExchange\",\n    modelProperties: {\n      reservationId: {\n        serializedName: \"reservationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingRefundAmount: {\n        serializedName: \"billingRefundAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingInformation: {\n        serializedName: \"billingInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingInformation\"\n        }\n      }\n    }\n  }\n};\n\nexport const BillingInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BillingInformation\",\n    modelProperties: {\n      billingCurrencyTotalPaidAmount: {\n        serializedName: \"billingCurrencyTotalPaidAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingCurrencyProratedAmount: {\n        serializedName: \"billingCurrencyProratedAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingCurrencyRemainingCommitmentAmount: {\n        serializedName: \"billingCurrencyRemainingCommitmentAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangePolicyErrors: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangePolicyErrors\",\n    modelProperties: {\n      policyErrors: {\n        serializedName: \"policyErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExchangePolicyError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangePolicyError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangePolicyError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationResultError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationResultError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangeRequest\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExchangeRequestProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangeRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangeRequestProperties\",\n    modelProperties: {\n      sessionId: {\n        serializedName: \"sessionId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangeOperationResultResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangeOperationResultResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExchangeResponseProperties\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationResultError\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangeResponseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangeResponseProperties\",\n    modelProperties: {\n      sessionId: {\n        serializedName: \"sessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      netPayable: {\n        serializedName: \"netPayable\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      refundsTotal: {\n        serializedName: \"refundsTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      purchasesTotal: {\n        serializedName: \"purchasesTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      reservationsToPurchase: {\n        serializedName: \"reservationsToPurchase\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationToPurchaseExchange\"\n            }\n          }\n        }\n      },\n      savingsPlansToPurchase: {\n        serializedName: \"savingsPlansToPurchase\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SavingsPlanToPurchaseExchange\"\n            }\n          }\n        }\n      },\n      reservationsToExchange: {\n        serializedName: \"reservationsToExchange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationToReturnForExchange\"\n            }\n          }\n        }\n      },\n      policyResult: {\n        serializedName: \"policyResult\",\n        type: {\n          name: \"Composite\",\n          className: \"ExchangePolicyErrors\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationToPurchaseExchange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationToPurchaseExchange\",\n    modelProperties: {\n      reservationOrderId: {\n        serializedName: \"reservationOrderId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reservationId: {\n        serializedName: \"reservationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchaseRequest\"\n        }\n      },\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SavingsPlanToPurchaseExchange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SavingsPlanToPurchaseExchange\",\n    modelProperties: {\n      savingsPlanOrderId: {\n        serializedName: \"savingsPlanOrderId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      savingsPlanId: {\n        serializedName: \"savingsPlanId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SavingsPlanPurchaseRequest\"\n        }\n      },\n      billingCurrencyTotal: {\n        serializedName: \"billingCurrencyTotal\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationToReturnForExchange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationToReturnForExchange\",\n    modelProperties: {\n      reservationId: {\n        serializedName: \"reservationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      billingRefundAmount: {\n        serializedName: \"billingRefundAmount\",\n        type: {\n          name: \"Composite\",\n          className: \"Price\"\n        }\n      },\n      billingInformation: {\n        serializedName: \"billingInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingInformation\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReservationResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      summary: {\n        serializedName: \"summary\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationSummary\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationSummary\",\n    modelProperties: {\n      succeededCount: {\n        serializedName: \"succeededCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      failedCount: {\n        serializedName: \"failedCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      expiringCount: {\n        serializedName: \"expiringCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      expiredCount: {\n        serializedName: \"expiredCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pendingCount: {\n        serializedName: \"pendingCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      cancelledCount: {\n        serializedName: \"cancelledCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      processingCount: {\n        serializedName: \"processingCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      warningCount: {\n        serializedName: \"warningCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      noBenefitCount: {\n        serializedName: \"noBenefitCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChangeDirectoryRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChangeDirectoryRequest\",\n    modelProperties: {\n      destinationTenantId: {\n        serializedName: \"destinationTenantId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChangeDirectoryResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChangeDirectoryResponse\",\n    modelProperties: {\n      reservationOrder: {\n        serializedName: \"reservationOrder\",\n        type: {\n          name: \"Composite\",\n          className: \"ChangeDirectoryResult\"\n        }\n      },\n      reservations: {\n        serializedName: \"reservations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ChangeDirectoryResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ChangeDirectoryResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChangeDirectoryResult\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isSucceeded: {\n        serializedName: \"isSucceeded\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CurrentQuotaLimitBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CurrentQuotaLimitBase\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"QuotaProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaProperties\",\n    modelProperties: {\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceName\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quotaPeriod: {\n        serializedName: \"quotaPeriod\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExceptionResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExceptionResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceError\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceErrorDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaRequestSubmitResponse201: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaRequestSubmitResponse201\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"properties.message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaLimits: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaLimits\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CurrentQuotaLimitBase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaRequestDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaRequestDetails\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"properties.message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestSubmitTime: {\n        serializedName: \"properties.requestSubmitTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"properties.value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubRequest\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaRequestProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaRequestProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestSubmitTime: {\n        serializedName: \"requestSubmitTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubRequest\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SubRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubRequest\",\n    modelProperties: {\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceName\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subRequestId: {\n        serializedName: \"subRequestId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaRequestDetailsList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaRequestDetailsList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QuotaRequestDetails\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CurrentQuotaLimit: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CurrentQuotaLimit\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"properties.message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"quotaInformation.id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"quotaInformation.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"quotaInformation.type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"quotaInformation.properties\",\n        type: {\n          name: \"Composite\",\n          className: \"QuotaProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaLimitsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaLimitsResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CurrentQuotaLimit\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateGenericQuotaRequestParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateGenericQuotaRequestParameters\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CurrentQuotaLimitBase\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaRequestOneResourceSubmitResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaRequestOneResourceSubmitResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"properties.message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestSubmitTime: {\n        serializedName: \"properties.requestSubmitTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      idPropertiesId: {\n        serializedName: \"properties.properties.id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      namePropertiesName: {\n        serializedName: \"properties.properties.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.properties.type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties.properties.properties\",\n        type: {\n          name: \"Composite\",\n          className: \"QuotaProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaRequestSubmitResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaRequestSubmitResponse\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"QuotaRequestProperties\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Commitment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Commitment\",\n    modelProperties: {\n      ...Price.type.modelProperties,\n      grain: {\n        serializedName: \"grain\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const ReservationResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationResponse\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"SkuName\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ReservationsProperties\"\n        }\n      },\n      kind: {\n        defaultValue: \"Microsoft.Compute\",\n        isConstant: true,\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationSplitHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationSplitHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationMergeHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationMergeHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationUpdateHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationUpdateHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReservationOrderPurchaseHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReservationOrderPurchaseHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReturnPostHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReturnPostHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CalculateExchangePostHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CalculateExchangePostHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExchangePostHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExchangePostHeaders\",\n    modelProperties: {\n      azureAsyncOperation: {\n        serializedName: \"azure-asyncoperation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retryAfter: {\n        serializedName: \"retry-after\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaGetHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaGetHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaListHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaListHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuotaListNextHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QuotaListNextHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  AvailableScopeRequest as AvailableScopeRequestMapper,\n  SplitRequest as SplitRequestMapper,\n  MergeRequest as MergeRequestMapper,\n  Patch as PatchMapper,\n  PurchaseRequest as PurchaseRequestMapper,\n  ChangeDirectoryRequest as ChangeDirectoryRequestMapper,\n  CalculateRefundRequest as CalculateRefundRequestMapper,\n  RefundRequest as RefundRequestMapper,\n  CalculateExchangeRequest as CalculateExchangeRequestMapper,\n  ExchangeRequest as ExchangeRequestMapper,\n  CurrentQuotaLimitBase as CurrentQuotaLimitBaseMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: AvailableScopeRequestMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const reservationOrderId: OperationURLParameter = {\n  parameterPath: \"reservationOrderId\",\n  mapper: {\n    serializedName: \"reservationOrderId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reservationId: OperationURLParameter = {\n  parameterPath: \"reservationId\",\n  mapper: {\n    serializedName: \"reservationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-11-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SplitRequestMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: MergeRequestMapper\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PatchMapper\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const orderby: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderby\"],\n  mapper: {\n    serializedName: \"$orderby\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const refreshSummary: OperationQueryParameter = {\n  parameterPath: [\"options\", \"refreshSummary\"],\n  mapper: {\n    serializedName: \"refreshSummary\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skiptoken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skiptoken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const selectedState: OperationQueryParameter = {\n  parameterPath: [\"options\", \"selectedState\"],\n  mapper: {\n    serializedName: \"selectedState\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const take: OperationQueryParameter = {\n  parameterPath: [\"options\", \"take\"],\n  mapper: {\n    serializedName: \"take\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const reservedResourceType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"reservedResourceType\"],\n  mapper: {\n    serializedName: \"reservedResourceType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const location: OperationQueryParameter = {\n  parameterPath: [\"options\", \"location\"],\n  mapper: {\n    serializedName: \"location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const publisherId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"publisherId\"],\n  mapper: {\n    serializedName: \"publisherId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const offerId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"offerId\"],\n  mapper: {\n    serializedName: \"offerId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const planId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"planId\"],\n  mapper: {\n    serializedName: \"planId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"$skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const take1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"take\"],\n  mapper: {\n    serializedName: \"$take\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: PurchaseRequestMapper\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ChangeDirectoryRequestMapper\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CalculateRefundRequestMapper\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: RefundRequestMapper\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CalculateExchangeRequestMapper\n};\n\nexport const body8: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ExchangeRequestMapper\n};\n\nexport const providerId: OperationURLParameter = {\n  parameterPath: \"providerId\",\n  mapper: {\n    serializedName: \"providerId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const location1: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-10-25\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const createQuotaRequest: OperationParameter = {\n  parameterPath: \"createQuotaRequest\",\n  mapper: CurrentQuotaLimitBaseMapper\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const skiptoken1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skiptoken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike }\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal\n      });\n    }\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Reservation } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ReservationResponse,\n  ReservationListNextOptionalParams,\n  ReservationListOptionalParams,\n  ReservationListResponse,\n  ReservationListRevisionsNextOptionalParams,\n  ReservationListRevisionsOptionalParams,\n  ReservationListRevisionsResponse,\n  ReservationListAllNextOptionalParams,\n  ReservationListAllOptionalParams,\n  ReservationListAllResponse,\n  AvailableScopeRequest,\n  ReservationAvailableScopesOptionalParams,\n  ReservationAvailableScopesResponse,\n  SplitRequest,\n  ReservationSplitOptionalParams,\n  ReservationSplitResponse,\n  MergeRequest,\n  ReservationMergeOptionalParams,\n  ReservationMergeResponse,\n  ReservationGetOptionalParams,\n  ReservationGetResponse,\n  Patch,\n  ReservationUpdateOptionalParams,\n  ReservationUpdateResponse,\n  ReservationArchiveOptionalParams,\n  ReservationUnarchiveOptionalParams,\n  ReservationListNextResponse,\n  ReservationListRevisionsNextResponse,\n  ReservationListAllNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Reservation operations. */\nexport class ReservationImpl implements Reservation {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class Reservation class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * List `Reservation`s within a single `ReservationOrder`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param options The options parameters.\n   */\n  public list(\n    reservationOrderId: string,\n    options?: ReservationListOptionalParams\n  ): PagedAsyncIterableIterator<ReservationResponse> {\n    const iter = this.listPagingAll(reservationOrderId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(reservationOrderId, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    reservationOrderId: string,\n    options?: ReservationListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationResponse[]> {\n    let result: ReservationListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(reservationOrderId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        reservationOrderId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    reservationOrderId: string,\n    options?: ReservationListOptionalParams\n  ): AsyncIterableIterator<ReservationResponse> {\n    for await (const page of this.listPagingPage(reservationOrderId, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List of all the revisions for the `Reservation`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param options The options parameters.\n   */\n  public listRevisions(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationListRevisionsOptionalParams\n  ): PagedAsyncIterableIterator<ReservationResponse> {\n    const iter = this.listRevisionsPagingAll(\n      reservationOrderId,\n      reservationId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listRevisionsPagingPage(\n          reservationOrderId,\n          reservationId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listRevisionsPagingPage(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationListRevisionsOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationResponse[]> {\n    let result: ReservationListRevisionsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listRevisions(\n        reservationOrderId,\n        reservationId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listRevisionsNext(\n        reservationOrderId,\n        reservationId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listRevisionsPagingAll(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationListRevisionsOptionalParams\n  ): AsyncIterableIterator<ReservationResponse> {\n    for await (const page of this.listRevisionsPagingPage(\n      reservationOrderId,\n      reservationId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List the reservations and the roll up counts of reservations group by provisioning states that the\n   * user has access to in the current tenant.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: ReservationListAllOptionalParams\n  ): PagedAsyncIterableIterator<ReservationResponse> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listAllPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: ReservationListAllOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationResponse[]> {\n    let result: ReservationListAllResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listAll(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: ReservationListAllOptionalParams\n  ): AsyncIterableIterator<ReservationResponse> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Check whether the scopes from request is valid for `Reservation`.\n   *\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param body Scopes to be checked for eligibility.\n   * @param options The options parameters.\n   */\n  async beginAvailableScopes(\n    reservationOrderId: string,\n    reservationId: string,\n    body: AvailableScopeRequest,\n    options?: ReservationAvailableScopesOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ReservationAvailableScopesResponse>,\n      ReservationAvailableScopesResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ReservationAvailableScopesResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { reservationOrderId, reservationId, body, options },\n      spec: availableScopesOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ReservationAvailableScopesResponse,\n      OperationState<ReservationAvailableScopesResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Check whether the scopes from request is valid for `Reservation`.\n   *\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param body Scopes to be checked for eligibility.\n   * @param options The options parameters.\n   */\n  async beginAvailableScopesAndWait(\n    reservationOrderId: string,\n    reservationId: string,\n    body: AvailableScopeRequest,\n    options?: ReservationAvailableScopesOptionalParams\n  ): Promise<ReservationAvailableScopesResponse> {\n    const poller = await this.beginAvailableScopes(\n      reservationOrderId,\n      reservationId,\n      body,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Split a `Reservation` into two `Reservation`s with specified quantity distribution.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed to Split a reservation item\n   * @param options The options parameters.\n   */\n  async beginSplit(\n    reservationOrderId: string,\n    body: SplitRequest,\n    options?: ReservationSplitOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ReservationSplitResponse>,\n      ReservationSplitResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ReservationSplitResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { reservationOrderId, body, options },\n      spec: splitOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ReservationSplitResponse,\n      OperationState<ReservationSplitResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Split a `Reservation` into two `Reservation`s with specified quantity distribution.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed to Split a reservation item\n   * @param options The options parameters.\n   */\n  async beginSplitAndWait(\n    reservationOrderId: string,\n    body: SplitRequest,\n    options?: ReservationSplitOptionalParams\n  ): Promise<ReservationSplitResponse> {\n    const poller = await this.beginSplit(reservationOrderId, body, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged\n   * must have same properties.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for commercial request for a reservation\n   * @param options The options parameters.\n   */\n  async beginMerge(\n    reservationOrderId: string,\n    body: MergeRequest,\n    options?: ReservationMergeOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ReservationMergeResponse>,\n      ReservationMergeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ReservationMergeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { reservationOrderId, body, options },\n      spec: mergeOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ReservationMergeResponse,\n      OperationState<ReservationMergeResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged\n   * must have same properties.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for commercial request for a reservation\n   * @param options The options parameters.\n   */\n  async beginMergeAndWait(\n    reservationOrderId: string,\n    body: MergeRequest,\n    options?: ReservationMergeOptionalParams\n  ): Promise<ReservationMergeResponse> {\n    const poller = await this.beginMerge(reservationOrderId, body, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List `Reservation`s within a single `ReservationOrder`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param options The options parameters.\n   */\n  private _list(\n    reservationOrderId: string,\n    options?: ReservationListOptionalParams\n  ): Promise<ReservationListResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get specific `Reservation` details.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param options The options parameters.\n   */\n  get(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationGetOptionalParams\n  ): Promise<ReservationGetResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates the applied scopes of the `Reservation`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param parameters Information needed to patch a reservation item\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    reservationOrderId: string,\n    reservationId: string,\n    parameters: Patch,\n    options?: ReservationUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ReservationUpdateResponse>,\n      ReservationUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ReservationUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { reservationOrderId, reservationId, parameters, options },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ReservationUpdateResponse,\n      OperationState<ReservationUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates the applied scopes of the `Reservation`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param parameters Information needed to patch a reservation item\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    reservationOrderId: string,\n    reservationId: string,\n    parameters: Patch,\n    options?: ReservationUpdateOptionalParams\n  ): Promise<ReservationUpdateResponse> {\n    const poller = await this.beginUpdate(\n      reservationOrderId,\n      reservationId,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Archiving a `Reservation` moves it to `Archived` state.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param options The options parameters.\n   */\n  archive(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationArchiveOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, options },\n      archiveOperationSpec\n    );\n  }\n\n  /**\n   * Restores a `Reservation` to the state it was before archiving.\n   *\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param options The options parameters.\n   */\n  unarchive(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationUnarchiveOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, options },\n      unarchiveOperationSpec\n    );\n  }\n\n  /**\n   * List of all the revisions for the `Reservation`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param options The options parameters.\n   */\n  private _listRevisions(\n    reservationOrderId: string,\n    reservationId: string,\n    options?: ReservationListRevisionsOptionalParams\n  ): Promise<ReservationListRevisionsResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, options },\n      listRevisionsOperationSpec\n    );\n  }\n\n  /**\n   * List the reservations and the roll up counts of reservations group by provisioning states that the\n   * user has access to in the current tenant.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: ReservationListAllOptionalParams\n  ): Promise<ReservationListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param reservationOrderId Order Id of the reservation\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    reservationOrderId: string,\n    nextLink: string,\n    options?: ReservationListNextOptionalParams\n  ): Promise<ReservationListNextResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListRevisionsNext\n   * @param reservationOrderId Order Id of the reservation\n   * @param reservationId Id of the reservation item\n   * @param nextLink The nextLink from the previous successful call to the ListRevisions method.\n   * @param options The options parameters.\n   */\n  private _listRevisionsNext(\n    reservationOrderId: string,\n    reservationId: string,\n    nextLink: string,\n    options?: ReservationListRevisionsNextOptionalParams\n  ): Promise<ReservationListRevisionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, reservationId, nextLink, options },\n      listRevisionsNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: ReservationListAllNextOptionalParams\n  ): Promise<ReservationListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst availableScopesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/availableScopes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailableScopeProperties\n    },\n    201: {\n      bodyMapper: Mappers.AvailableScopeProperties\n    },\n    202: {\n      bodyMapper: Mappers.AvailableScopeProperties\n    },\n    204: {\n      bodyMapper: Mappers.AvailableScopeProperties\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst splitOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst mergeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"ReservationResponse\" }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationResponse\n    },\n    201: {\n      bodyMapper: Mappers.ReservationResponse\n    },\n    202: {\n      bodyMapper: Mappers.ReservationResponse\n    },\n    204: {\n      bodyMapper: Mappers.ReservationResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst archiveOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/archive\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst unarchiveOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/unarchive\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listRevisionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/revisions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/reservations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.orderby,\n    Parameters.refreshSummary,\n    Parameters.skiptoken,\n    Parameters.selectedState,\n    Parameters.take\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listRevisionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.reservationOrderId,\n    Parameters.reservationId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ReservationOrder } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ReservationOrderResponse,\n  ReservationOrderListNextOptionalParams,\n  ReservationOrderListOptionalParams,\n  ReservationOrderListResponse,\n  PurchaseRequest,\n  ReservationOrderCalculateOptionalParams,\n  ReservationOrderCalculateResponse,\n  ReservationOrderPurchaseOptionalParams,\n  ReservationOrderPurchaseResponse,\n  ReservationOrderGetOptionalParams,\n  ReservationOrderGetResponse,\n  ChangeDirectoryRequest,\n  ReservationOrderChangeDirectoryOptionalParams,\n  ReservationOrderChangeDirectoryResponse,\n  ReservationOrderListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReservationOrder operations. */\nexport class ReservationOrderImpl implements ReservationOrder {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class ReservationOrder class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * List of all the `ReservationOrder`s that the user has access to in the current tenant.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ReservationOrderListOptionalParams\n  ): PagedAsyncIterableIterator<ReservationOrderResponse> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ReservationOrderListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReservationOrderResponse[]> {\n    let result: ReservationOrderListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ReservationOrderListOptionalParams\n  ): AsyncIterableIterator<ReservationOrderResponse> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Calculate price for placing a `ReservationOrder`.\n   * @param body Information needed for calculate or purchase reservation\n   * @param options The options parameters.\n   */\n  calculate(\n    body: PurchaseRequest,\n    options?: ReservationOrderCalculateOptionalParams\n  ): Promise<ReservationOrderCalculateResponse> {\n    return this.client.sendOperationRequest(\n      { body, options },\n      calculateOperationSpec\n    );\n  }\n\n  /**\n   * List of all the `ReservationOrder`s that the user has access to in the current tenant.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ReservationOrderListOptionalParams\n  ): Promise<ReservationOrderListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Purchase `ReservationOrder` and create resource under the specified URI.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for calculate or purchase reservation\n   * @param options The options parameters.\n   */\n  async beginPurchase(\n    reservationOrderId: string,\n    body: PurchaseRequest,\n    options?: ReservationOrderPurchaseOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ReservationOrderPurchaseResponse>,\n      ReservationOrderPurchaseResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ReservationOrderPurchaseResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { reservationOrderId, body, options },\n      spec: purchaseOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ReservationOrderPurchaseResponse,\n      OperationState<ReservationOrderPurchaseResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Purchase `ReservationOrder` and create resource under the specified URI.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for calculate or purchase reservation\n   * @param options The options parameters.\n   */\n  async beginPurchaseAndWait(\n    reservationOrderId: string,\n    body: PurchaseRequest,\n    options?: ReservationOrderPurchaseOptionalParams\n  ): Promise<ReservationOrderPurchaseResponse> {\n    const poller = await this.beginPurchase(reservationOrderId, body, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get the details of the `ReservationOrder`.\n   * @param reservationOrderId Order Id of the reservation\n   * @param options The options parameters.\n   */\n  get(\n    reservationOrderId: string,\n    options?: ReservationOrderGetOptionalParams\n  ): Promise<ReservationOrderGetResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant\n   * id\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed to change directory of reservation order\n   * @param options The options parameters.\n   */\n  changeDirectory(\n    reservationOrderId: string,\n    body: ChangeDirectoryRequest,\n    options?: ReservationOrderChangeDirectoryOptionalParams\n  ): Promise<ReservationOrderChangeDirectoryResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, body, options },\n      changeDirectoryOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ReservationOrderListNextOptionalParams\n  ): Promise<ReservationOrderListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst calculateOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/calculatePrice\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CalculatePriceResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/reservationOrders\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationOrderList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst purchaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    201: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    202: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    204: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst changeDirectoryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/changeDirectory\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChangeDirectoryResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationOrderList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operation } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  OperationResponse,\n  OperationListNextOptionalParams,\n  OperationListOptionalParams,\n  OperationListResponse,\n  OperationListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operation operations. */\nexport class OperationImpl implements Operation {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class Operation class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * List all the operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationListOptionalParams\n  ): PagedAsyncIterableIterator<OperationResponse> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OperationResponse[]> {\n    let result: OperationListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationListOptionalParams\n  ): AsyncIterableIterator<OperationResponse> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all the operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationListOptionalParams\n  ): Promise<OperationListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationListNextOptionalParams\n  ): Promise<OperationListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CalculateRefund } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  CalculateRefundRequest,\n  CalculateRefundPostOptionalParams,\n  CalculateRefundPostResponse\n} from \"../models\";\n\n/** Class containing CalculateRefund operations. */\nexport class CalculateRefundImpl implements CalculateRefund {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class CalculateRefund class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * Calculate price for returning `Reservations` if there are no policy errors.\n   *\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for calculating refund of a reservation.\n   * @param options The options parameters.\n   */\n  post(\n    reservationOrderId: string,\n    body: CalculateRefundRequest,\n    options?: CalculateRefundPostOptionalParams\n  ): Promise<CalculateRefundPostResponse> {\n    return this.client.sendOperationRequest(\n      { reservationOrderId, body, options },\n      postOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/calculateRefund\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CalculateRefundResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Return } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  RefundRequest,\n  ReturnPostOptionalParams,\n  ReturnPostResponse\n} from \"../models\";\n\n/** Class containing Return operations. */\nexport class ReturnImpl implements Return {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class Return class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * Return a reservation and get refund information.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for returning reservation.\n   * @param options The options parameters.\n   */\n  async beginPost(\n    reservationOrderId: string,\n    body: RefundRequest,\n    options?: ReturnPostOptionalParams\n  ): Promise<\n    SimplePollerLike<OperationState<ReturnPostResponse>, ReturnPostResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ReturnPostResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { reservationOrderId, body, options },\n      spec: postOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ReturnPostResponse,\n      OperationState<ReturnPostResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Return a reservation and get refund information.\n   * @param reservationOrderId Order Id of the reservation\n   * @param body Information needed for returning reservation.\n   * @param options The options parameters.\n   */\n  async beginPostAndWait(\n    reservationOrderId: string,\n    body: RefundRequest,\n    options?: ReturnPostOptionalParams\n  ): Promise<ReturnPostResponse> {\n    const poller = await this.beginPost(reservationOrderId, body, options);\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/return\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    201: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    202: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    204: {\n      bodyMapper: Mappers.ReservationOrderResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.reservationOrderId],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CalculateExchange } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  CalculateExchangeRequest,\n  CalculateExchangePostOptionalParams,\n  CalculateExchangePostResponse\n} from \"../models\";\n\n/** Class containing CalculateExchange operations. */\nexport class CalculateExchangeImpl implements CalculateExchange {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class CalculateExchange class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * Calculates price for exchanging `Reservations` if there are no policy errors.\n   *\n   * @param body Request containing purchases and refunds that need to be executed.\n   * @param options The options parameters.\n   */\n  async beginPost(\n    body: CalculateExchangeRequest,\n    options?: CalculateExchangePostOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CalculateExchangePostResponse>,\n      CalculateExchangePostResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CalculateExchangePostResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { body, options },\n      spec: postOperationSpec\n    });\n    const poller = await createHttpPoller<\n      CalculateExchangePostResponse,\n      OperationState<CalculateExchangePostResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Calculates price for exchanging `Reservations` if there are no policy errors.\n   *\n   * @param body Request containing purchases and refunds that need to be executed.\n   * @param options The options parameters.\n   */\n  async beginPostAndWait(\n    body: CalculateExchangeRequest,\n    options?: CalculateExchangePostOptionalParams\n  ): Promise<CalculateExchangePostResponse> {\n    const poller = await this.beginPost(body, options);\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/calculateExchange\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CalculateExchangeOperationResultResponse\n    },\n    201: {\n      bodyMapper: Mappers.CalculateExchangeOperationResultResponse\n    },\n    202: {\n      bodyMapper: Mappers.CalculateExchangeOperationResultResponse\n    },\n    204: {\n      bodyMapper: Mappers.CalculateExchangeOperationResultResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Exchange } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ExchangeRequest,\n  ExchangePostOptionalParams,\n  ExchangePostResponse\n} from \"../models\";\n\n/** Class containing Exchange operations. */\nexport class ExchangeImpl implements Exchange {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class Exchange class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.\n   *\n   * @param body Request containing the refunds and purchases that need to be executed.\n   * @param options The options parameters.\n   */\n  async beginPost(\n    body: ExchangeRequest,\n    options?: ExchangePostOptionalParams\n  ): Promise<\n    SimplePollerLike<OperationState<ExchangePostResponse>, ExchangePostResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ExchangePostResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { body, options },\n      spec: postOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ExchangePostResponse,\n      OperationState<ExchangePostResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.\n   *\n   * @param body Request containing the refunds and purchases that need to be executed.\n   * @param options The options parameters.\n   */\n  async beginPostAndWait(\n    body: ExchangeRequest,\n    options?: ExchangePostOptionalParams\n  ): Promise<ExchangePostResponse> {\n    const poller = await this.beginPost(body, options);\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst postOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Capacity/exchange\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExchangeOperationResultResponse\n    },\n    201: {\n      bodyMapper: Mappers.ExchangeOperationResultResponse\n    },\n    202: {\n      bodyMapper: Mappers.ExchangeOperationResultResponse\n    },\n    204: {\n      bodyMapper: Mappers.ExchangeOperationResultResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Quota } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  CurrentQuotaLimitBase,\n  QuotaListNextOptionalParams,\n  QuotaListOptionalParams,\n  QuotaListResponse,\n  QuotaGetOptionalParams,\n  QuotaGetResponse,\n  QuotaCreateOrUpdateOptionalParams,\n  QuotaCreateOrUpdateResponse,\n  QuotaUpdateOptionalParams,\n  QuotaUpdateResponse,\n  QuotaListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Quota operations. */\nexport class QuotaImpl implements Quota {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class Quota class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of current quotas (service limits) and usage for all resources. The response from the\n   * list quota operation can be leveraged to request quota updates.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param options The options parameters.\n   */\n  public list(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaListOptionalParams\n  ): PagedAsyncIterableIterator<CurrentQuotaLimitBase> {\n    const iter = this.listPagingAll(\n      subscriptionId,\n      providerId,\n      location,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          subscriptionId,\n          providerId,\n          location,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CurrentQuotaLimitBase[]> {\n    let result: QuotaListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(subscriptionId, providerId, location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        subscriptionId,\n        providerId,\n        location,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaListOptionalParams\n  ): AsyncIterableIterator<CurrentQuotaLimitBase> {\n    for await (const page of this.listPagingPage(\n      subscriptionId,\n      providerId,\n      location,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the current quota (service limit) and usage of a resource. You can use the response from the GET\n   * operation to submit quota update request.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param resourceName The resource name for a resource provider, such as SKU name for\n   *                     Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices\n   * @param options The options parameters.\n   */\n  get(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    resourceName: string,\n    options?: QuotaGetOptionalParams\n  ): Promise<QuotaGetResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, providerId, location, resourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the quota (service limits) of a resource to the requested value.\n   *  Steps:\n   *   1. Make the Get request to get the quota information for specific resource.\n   *   2. To increase the quota, update the limit field in the response from Get request to new value.\n   *   3. Submit the JSON to the quota request API to update the quota.\n   *   The Create quota request may be constructed as follows. The PUT operation can be used to update\n   * the quota.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param resourceName The resource name for a resource provider, such as SKU name for\n   *                     Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices\n   * @param createQuotaRequest Quota requests payload.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    resourceName: string,\n    createQuotaRequest: CurrentQuotaLimitBase,\n    options?: QuotaCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<QuotaCreateOrUpdateResponse>,\n      QuotaCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<QuotaCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        subscriptionId,\n        providerId,\n        location,\n        resourceName,\n        createQuotaRequest,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      QuotaCreateOrUpdateResponse,\n      OperationState<QuotaCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"original-uri\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update the quota (service limits) of a resource to the requested value.\n   *  Steps:\n   *   1. Make the Get request to get the quota information for specific resource.\n   *   2. To increase the quota, update the limit field in the response from Get request to new value.\n   *   3. Submit the JSON to the quota request API to update the quota.\n   *   The Create quota request may be constructed as follows. The PUT operation can be used to update\n   * the quota.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param resourceName The resource name for a resource provider, such as SKU name for\n   *                     Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices\n   * @param createQuotaRequest Quota requests payload.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    resourceName: string,\n    createQuotaRequest: CurrentQuotaLimitBase,\n    options?: QuotaCreateOrUpdateOptionalParams\n  ): Promise<QuotaCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      subscriptionId,\n      providerId,\n      location,\n      resourceName,\n      createQuotaRequest,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update the quota (service limits) of this resource to the requested value.\n   *   • To get the quota information for specific resource, send a GET request.\n   *   • To increase the quota, update the limit field from the GET response to a new value.\n   *   • To update the quota value, submit the JSON response to the quota request API to update the\n   * quota.\n   *   • To update the quota. use the PATCH operation.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param resourceName The resource name for a resource provider, such as SKU name for\n   *                     Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices\n   * @param createQuotaRequest Payload for the quota request.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    resourceName: string,\n    createQuotaRequest: CurrentQuotaLimitBase,\n    options?: QuotaUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<OperationState<QuotaUpdateResponse>, QuotaUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<QuotaUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        subscriptionId,\n        providerId,\n        location,\n        resourceName,\n        createQuotaRequest,\n        options\n      },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      QuotaUpdateResponse,\n      OperationState<QuotaUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"original-uri\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update the quota (service limits) of this resource to the requested value.\n   *   • To get the quota information for specific resource, send a GET request.\n   *   • To increase the quota, update the limit field from the GET response to a new value.\n   *   • To update the quota value, submit the JSON response to the quota request API to update the\n   * quota.\n   *   • To update the quota. use the PATCH operation.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param resourceName The resource name for a resource provider, such as SKU name for\n   *                     Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices\n   * @param createQuotaRequest Payload for the quota request.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    resourceName: string,\n    createQuotaRequest: CurrentQuotaLimitBase,\n    options?: QuotaUpdateOptionalParams\n  ): Promise<QuotaUpdateResponse> {\n    const poller = await this.beginUpdate(\n      subscriptionId,\n      providerId,\n      location,\n      resourceName,\n      createQuotaRequest,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of current quotas (service limits) and usage for all resources. The response from the\n   * list quota operation can be leveraged to request quota updates.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param options The options parameters.\n   */\n  private _list(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaListOptionalParams\n  ): Promise<QuotaListResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, providerId, location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    nextLink: string,\n    options?: QuotaListNextOptionalParams\n  ): Promise<QuotaListNextResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, providerId, location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase,\n      headersMapper: Mappers.QuotaGetHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    201: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    202: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    204: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  requestBody: Parameters.createQuotaRequest,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    201: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    202: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    204: {\n      bodyMapper: Mappers.CurrentQuotaLimitBase\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  requestBody: Parameters.createQuotaRequest,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaLimits,\n      headersMapper: Mappers.QuotaListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaLimits,\n      headersMapper: Mappers.QuotaListNextHeaders\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { QuotaRequestStatus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureReservationAPI } from \"../azureReservationAPI\";\nimport {\n  QuotaRequestDetails,\n  QuotaRequestStatusListNextOptionalParams,\n  QuotaRequestStatusListOptionalParams,\n  QuotaRequestStatusListResponse,\n  QuotaRequestStatusGetOptionalParams,\n  QuotaRequestStatusGetResponse,\n  QuotaRequestStatusListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing QuotaRequestStatus operations. */\nexport class QuotaRequestStatusImpl implements QuotaRequestStatus {\n  private readonly client: AzureReservationAPI;\n\n  /**\n   * Initialize a new instance of the class QuotaRequestStatus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AzureReservationAPI) {\n    this.client = client;\n  }\n\n  /**\n   * For the specified Azure region (location), subscription, and resource provider, get the history of\n   * the quota requests for the past year. To select specific quota requests, use the oData filter.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param options The options parameters.\n   */\n  public list(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaRequestStatusListOptionalParams\n  ): PagedAsyncIterableIterator<QuotaRequestDetails> {\n    const iter = this.listPagingAll(\n      subscriptionId,\n      providerId,\n      location,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          subscriptionId,\n          providerId,\n          location,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaRequestStatusListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<QuotaRequestDetails[]> {\n    let result: QuotaRequestStatusListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(subscriptionId, providerId, location, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        subscriptionId,\n        providerId,\n        location,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaRequestStatusListOptionalParams\n  ): AsyncIterableIterator<QuotaRequestDetails> {\n    for await (const page of this.listPagingPage(\n      subscriptionId,\n      providerId,\n      location,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * For the specified Azure region (location), get the details and status of the quota request by the\n   * quota request ID for the resources of the resource provider. The PUT request for the quota (service\n   * limit) returns a response with the requestId parameter.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param id Quota Request ID.\n   * @param options The options parameters.\n   */\n  get(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    id: string,\n    options?: QuotaRequestStatusGetOptionalParams\n  ): Promise<QuotaRequestStatusGetResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, providerId, location, id, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * For the specified Azure region (location), subscription, and resource provider, get the history of\n   * the quota requests for the past year. To select specific quota requests, use the oData filter.\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param options The options parameters.\n   */\n  private _list(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    options?: QuotaRequestStatusListOptionalParams\n  ): Promise<QuotaRequestStatusListResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, providerId, location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param subscriptionId Azure subscription ID.\n   * @param providerId Azure resource provider ID.\n   * @param location Azure region.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    subscriptionId: string,\n    providerId: string,\n    location: string,\n    nextLink: string,\n    options?: QuotaRequestStatusListNextOptionalParams\n  ): Promise<QuotaRequestStatusListNextResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, providerId, location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaRequestDetails\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1,\n    Parameters.id\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaRequestDetailsList\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.apiVersion1,\n    Parameters.top,\n    Parameters.skiptoken1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QuotaRequestDetailsList\n    },\n    default: {\n      bodyMapper: Mappers.ExceptionResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId,\n    Parameters.providerId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"./pagingHelper\";\nimport {\n  ReservationImpl,\n  ReservationOrderImpl,\n  OperationImpl,\n  CalculateRefundImpl,\n  ReturnImpl,\n  CalculateExchangeImpl,\n  ExchangeImpl,\n  QuotaImpl,\n  QuotaRequestStatusImpl\n} from \"./operations\";\nimport {\n  Reservation,\n  ReservationOrder,\n  Operation,\n  CalculateRefund,\n  Return,\n  CalculateExchange,\n  Exchange,\n  Quota,\n  QuotaRequestStatus\n} from \"./operationsInterfaces\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  AzureReservationAPIOptionalParams,\n  Catalog,\n  GetCatalogNextOptionalParams,\n  GetCatalogOptionalParams,\n  GetCatalogResponse,\n  GetAppliedReservationListOptionalParams,\n  GetAppliedReservationListResponse,\n  GetCatalogNextResponse\n} from \"./models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\nexport class AzureReservationAPI extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the AzureReservationAPI class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: AzureReservationAPIOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AzureReservationAPIOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-reservations/9.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.reservation = new ReservationImpl(this);\n    this.reservationOrder = new ReservationOrderImpl(this);\n    this.operation = new OperationImpl(this);\n    this.calculateRefund = new CalculateRefundImpl(this);\n    this.return = new ReturnImpl(this);\n    this.calculateExchange = new CalculateExchangeImpl(this);\n    this.exchange = new ExchangeImpl(this);\n    this.quota = new QuotaImpl(this);\n    this.quotaRequestStatus = new QuotaRequestStatusImpl(this);\n  }\n\n  /**\n   * Get the regions and skus that are available for RI purchase for the specified Azure subscription.\n   * @param subscriptionId Id of the subscription\n   * @param options The options parameters.\n   */\n  public listCatalog(\n    subscriptionId: string,\n    options?: GetCatalogOptionalParams\n  ): PagedAsyncIterableIterator<Catalog> {\n    const iter = this.getCatalogPagingAll(subscriptionId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getCatalogPagingPage(subscriptionId, options, settings);\n      }\n    };\n  }\n\n  private async *getCatalogPagingPage(\n    subscriptionId: string,\n    options?: GetCatalogOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Catalog[]> {\n    let result: GetCatalogResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._getCatalog(subscriptionId, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getCatalogNext(\n        subscriptionId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getCatalogPagingAll(\n    subscriptionId: string,\n    options?: GetCatalogOptionalParams\n  ): AsyncIterableIterator<Catalog> {\n    for await (const page of this.getCatalogPagingPage(\n      subscriptionId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the regions and skus that are available for RI purchase for the specified Azure subscription.\n   * @param subscriptionId Id of the subscription\n   * @param options The options parameters.\n   */\n  private _getCatalog(\n    subscriptionId: string,\n    options?: GetCatalogOptionalParams\n  ): Promise<GetCatalogResponse> {\n    return this.sendOperationRequest(\n      { subscriptionId, options },\n      getCatalogOperationSpec\n    );\n  }\n\n  /**\n   * Get applicable `Reservation`s that are applied to this subscription or a resource group under this\n   * subscription.\n   * @param subscriptionId Id of the subscription\n   * @param options The options parameters.\n   */\n  getAppliedReservationList(\n    subscriptionId: string,\n    options?: GetAppliedReservationListOptionalParams\n  ): Promise<GetAppliedReservationListResponse> {\n    return this.sendOperationRequest(\n      { subscriptionId, options },\n      getAppliedReservationListOperationSpec\n    );\n  }\n\n  /**\n   * GetCatalogNext\n   * @param subscriptionId Id of the subscription\n   * @param nextLink The nextLink from the previous successful call to the GetCatalog method.\n   * @param options The options parameters.\n   */\n  private _getCatalogNext(\n    subscriptionId: string,\n    nextLink: string,\n    options?: GetCatalogNextOptionalParams\n  ): Promise<GetCatalogNextResponse> {\n    return this.sendOperationRequest(\n      { subscriptionId, nextLink, options },\n      getCatalogNextOperationSpec\n    );\n  }\n\n  reservation: Reservation;\n  reservationOrder: ReservationOrder;\n  operation: Operation;\n  calculateRefund: CalculateRefund;\n  return: Return;\n  calculateExchange: CalculateExchange;\n  exchange: Exchange;\n  quota: Quota;\n  quotaRequestStatus: QuotaRequestStatus;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getCatalogOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CatalogsResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.reservedResourceType,\n    Parameters.location,\n    Parameters.publisherId,\n    Parameters.offerId,\n    Parameters.planId,\n    Parameters.skip,\n    Parameters.take1\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAppliedReservationListOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppliedReservations\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCatalogNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CatalogsResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"],"names":["KnownErrorResponseCode","KnownReservationBillingPlan","KnownReservationTerm","KnownReservedResourceType","KnownAppliedScopeType","KnownInstanceFlexibility","KnownPaymentStatus","KnownReservationStatusCode","KnownProvisioningState","KnownCreatedByType","KnownSavingsPlanTerm","KnownBillingPlan","KnownCommitmentGrain","KnownCalculateExchangeOperationResultStatus","KnownExchangeOperationResultStatus","KnownOperationStatus","KnownResourceType","KnownQuotaRequestState","KnownLocation","KnownDisplayProvisioningState","KnownUserFriendlyAppliedScopeType","KnownUserFriendlyRenewState","AvailableScopeRequestMapper","SplitRequestMapper","MergeRequestMapper","PatchMapper","PurchaseRequestMapper","ChangeDirectoryRequestMapper","CalculateRefundRequestMapper","RefundRequestMapper","CalculateExchangeRequestMapper","ExchangeRequestMapper","CurrentQuotaLimitBaseMapper","__rest","__await","__asyncValues","__asyncDelegator","__awaiter","createHttpPoller","listOperationSpec","getOperationSpec","updateOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.AvailableScopeProperties","Mappers.ErrorModel","Parameters.body","Parameters.apiVersion","Parameters.$host","Parameters.reservationOrderId","Parameters.reservationId","Parameters.contentType","Parameters.accept","Parameters.body1","Parameters.body2","Mappers.ReservationList","Mappers.ReservationResponse","Parameters.expand","Parameters.parameters","Mappers.ReservationsListResult","Mappers.ErrorResponse","Parameters.filter","Parameters.orderby","Parameters.refreshSummary","Parameters.skiptoken","Parameters.selectedState","Parameters.take","Parameters.nextLink","Mappers.CalculatePriceResponse","Parameters.body3","Mappers.ReservationOrderList","Mappers.ReservationOrderResponse","Mappers.ChangeDirectoryResponse","Parameters.body4","Mappers.OperationList","postOperationSpec","Mappers.CalculateRefundResponse","Parameters.body5","Parameters.body6","Mappers.CalculateExchangeOperationResultResponse","Parameters.body7","Mappers.ExchangeOperationResultResponse","Parameters.body8","Mappers.CurrentQuotaLimitBase","Mappers.QuotaGetHeaders","Mappers.ExceptionResponse","Parameters.apiVersion1","Parameters.subscriptionId","Parameters.providerId","Parameters.location1","Parameters.resourceName","Parameters.createQuotaRequest","Mappers.QuotaLimits","Mappers.QuotaListHeaders","Mappers.QuotaListNextHeaders","Mappers.QuotaRequestDetails","Parameters.id","Mappers.QuotaRequestDetailsList","Parameters.top","Parameters.skiptoken1","coreRestPipeline","Mappers.CatalogsResult","Parameters.reservedResourceType","Parameters.location","Parameters.publisherId","Parameters.offerId","Parameters.planId","Parameters.skip","Parameters.take1","Mappers.AppliedReservations"],"mappings":"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"}